/*! For license information please see sb-youtube.min.js.LICENSE.txt */
(()=>{function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}var e,i,s,n,a,o,r,l,d=void 0!==d;if(!d){var h=function(){return!!document.createElement("video").canPlayType};if(window.sbyLinkify=("[a-z\\d.-]+://",n="mailto:",a=new RegExp("(?:\\b[a-z\\d.-]+://[^<>\\s]+|\\b(?:(?:(?:[^\\s!@#$%^&*()_=+[\\]{}\\\\|;:'\",.<>/?]+)\\.)+(?:ac|ad|aero|ae|af|ag|ai|al|am|an|ao|aq|arpa|ar|asia|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|biz|bi|bj|bm|bn|bo|br|bs|bt|bv|bw|by|bz|cat|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|coop|com|co|cr|cu|cv|cx|cy|cz|de|dj|dk|dm|do|dz|ec|edu|ee|eg|er|es|et|eu|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gov|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|info|int|in|io|iq|ir|is|it|je|jm|jobs|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mg|mh|mil|mk|ml|mm|mn|mobi|mo|mp|mq|mr|ms|mt|museum|mu|mv|mw|mx|my|mz|name|na|nc|net|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|org|pa|pe|pf|pg|ph|pk|pl|pm|pn|pro|pr|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|st|su|sv|sy|sz|tc|td|tel|tf|tg|th|tj|tk|tl|tm|tn|to|tp|travel|tr|tt|tv|tw|tz|ua|ug|uk|um|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|xn--0zwm56d|xn--11b5bs3a9aj6g|xn--80akhbyknj4f|xn--9t4b11yi5a|xn--deba0ad|xn--g6w251d|xn--hgbk6aj7f53bba|xn--hlcj6aya9esc7a|xn--jxalpdlp|xn--kgbechtv|xn--zckzah|ye|yt|yu|za|zm|zw)|(?:(?:[0-9]|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])\\.){3}(?:[0-9]|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5]))(?:[;/][^#?<>\\s]*)?(?:\\?[^#<>\\s]*)?(?:#[^<>\\s]*)?(?!\\w)|(?:mailto:)?[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:(?:(?:[^\\s!@#$%^&*()_=+[\\]{}\\\\|;:'\",.<>/?]+)\\.)+(?:ac|ad|aero|ae|af|ag|ai|al|am|an|ao|aq|arpa|ar|asia|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|biz|bi|bj|bm|bn|bo|br|bs|bt|bv|bw|by|bz|cat|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|coop|com|co|cr|cu|cv|cx|cy|cz|de|dj|dk|dm|do|dz|ec|edu|ee|eg|er|es|et|eu|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gov|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|info|int|in|io|iq|ir|is|it|je|jm|jobs|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mg|mh|mil|mk|ml|mm|mn|mobi|mo|mp|mq|mr|ms|mt|museum|mu|mv|mw|mx|my|mz|name|na|nc|net|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|org|pa|pe|pf|pg|ph|pk|pl|pm|pn|pro|pr|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|st|su|sv|sy|sz|tc|td|tel|tf|tg|th|tj|tk|tl|tm|tn|to|tp|travel|tr|tt|tv|tw|tz|ua|ug|uk|um|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|xn--0zwm56d|xn--11b5bs3a9aj6g|xn--80akhbyknj4f|xn--9t4b11yi5a|xn--deba0ad|xn--g6w251d|xn--hgbk6aj7f53bba|xn--hlcj6aya9esc7a|xn--jxalpdlp|xn--kgbechtv|xn--zckzah|ye|yt|yu|za|zm|zw)|(?:(?:[0-9]|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])\\.){3}(?:[0-9]|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5]))(?:\\?[^#<>\\s]*)?(?:#[^<>\\s]*)?(?!\\w))","ig"),o=new RegExp("^[a-z\\d.-]+://","i"),r={"'":"`",">":"<",")":"(","]":"[","}":"{","B;":"B+","b:":"b9"},l={callback:function(t,e){return e?'<a href="'+e+'" title="'+e+'" target="_blank" rel="noopener">'+t+"</a>":t},punct_regexp:/(?:[!?.,:;'"]|(?:&|&amp;)(?:lt|gt|quot|apos|raquo|laquo|rsaquo|lsaquo);)$/},function(t,e){e=e||{};var i,s,d,h,c,u,y,g,p,b,f,m,_="",v=[];for(s in l)void 0===e[s]&&(e[s]=l[s]);for(;i=a.exec(t);)if(d=i[0],y=(u=a.lastIndex)-d.length,!/[\/:]/.test(t.charAt(y-1))){do{g=d,m=d.substr(-1),(f=r[m])&&(p=d.match(new RegExp("\\"+f+"(?!$)","g")),b=d.match(new RegExp("\\"+m,"g")),(p?p.length:0)<(b?b.length:0)&&(d=d.substr(0,d.length-1),u--)),e.punct_regexp&&(d=d.replace(e.punct_regexp,(function(t){return u-=t.length,""})))}while(d.length&&d!==g);h=d,o.test(h)||(h=(-1!==h.indexOf("@")?h.indexOf(n)?n:"":h.indexOf("irc.")?h.indexOf("ftp.")?"http://":"ftp://":"irc://")+h),c!=y&&(v.push([t.slice(c,y)]),c=u),v.push([d,h])}for(v.push([t.substr(c)]),s=0;s<v.length;s++)_+=e.callback.apply(window,v[s]);return _||t}),function(e,i,s,n){function a(t,i){this.settings=null,this.options=e.extend({},a.Defaults,i),this.$element=e(t),this._handlers={},this._plugins={},this._supress={},this._current=null,this._speed=null,this._coordinates=[],this._breakpoint=null,this._width=null,this._items=[],this._clones=[],this._mergers=[],this._widths=[],this._invalidated={},this._pipe=[],this._drag={time:null,target:null,pointer:null,stage:{start:null,current:null},direction:null},this._states={current:{},tags:{initializing:["busy"],animating:["busy"],dragging:["interacting"]}},e.each(["onResize","onThrottledResize"],e.proxy((function(t,i){this._handlers[i]=e.proxy(this[i],this)}),this)),e.each(a.Plugins,e.proxy((function(t,e){this._plugins[t.charAt(0).toLowerCase()+t.slice(1)]=new e(this)}),this)),e.each(a.Workers,e.proxy((function(t,i){this._pipe.push({filter:i.filter,run:e.proxy(i.run,this)})}),this)),this.setup(),this.initialize()}a.Defaults={items:3,loop:!1,center:!1,rewind:!1,mouseDrag:!0,touchDrag:!0,pullDrag:!0,freeDrag:!1,margin:0,stagePadding:0,merge:!1,mergeFit:!0,autoWidth:!1,startPosition:0,rtl:!1,smartSpeed:250,fluidSpeed:!1,dragEndSpeed:!1,responsive:{},responsiveRefreshRate:200,responsiveBaseElement:i,fallbackEasing:"swing",info:!1,nestedItemSelector:!1,itemElement:"div",stageElement:"div",refreshClass:"sby-owl-refresh",loadedClass:"sby-owl-loaded",loadingClass:"sby-owl-loading",rtlClass:"sby-owl-rtl",responsiveClass:"sby-owl-responsive",dragClass:"sby-owl-drag",itemClass:"sby-owl-item",stageClass:"sby-owl-stage",stageOuterClass:"sby-owl-stage-outer",grabClass:"sby-owl-grab"},a.Width={Default:"default",Inner:"inner",Outer:"outer"},a.Type={Event:"event",State:"state"},a.Plugins={},a.Workers=[{filter:["width","settings"],run:function(){this._width=this.$element.width()}},{filter:["width","items","settings"],run:function(t){t.current=this._items&&this._items[this.relative(this._current)]}},{filter:["items","settings"],run:function(){this.$stage.children(".cloned").remove()}},{filter:["width","items","settings"],run:function(t){var e=this.settings.margin||"",i=!this.settings.autoWidth,s=this.settings.rtl,n={width:"auto","margin-left":s?e:"","margin-right":s?"":e};!i&&this.$stage.children().css(n),t.css=n}},{filter:["width","items","settings"],run:function(t){var e=(this.width()/this.settings.items).toFixed(3)-this.settings.margin,i=null,s=this._items.length,n=!this.settings.autoWidth,a=[];for(t.items={merge:!1,width:e};s--;)i=this._mergers[s],i=this.settings.mergeFit&&Math.min(i,this.settings.items)||i,t.items.merge=i>1||t.items.merge,a[s]=n?e*i:this._items[s].width();this._widths=a}},{filter:["items","settings"],run:function(){var t=[],i=this._items,s=this.settings,n=Math.max(2*s.items,4),a=2*Math.ceil(i.length/2),o=s.loop&&i.length?s.rewind?n:Math.max(n,a):0,r="",l="";for(o/=2;o--;)t.push(this.normalize(t.length/2,!0)),r+=i[t[t.length-1]][0].outerHTML,t.push(this.normalize(i.length-1-(t.length-1)/2,!0)),l=i[t[t.length-1]][0].outerHTML+l;this._clones=t,e(r).addClass("cloned").appendTo(this.$stage),e(l).addClass("cloned").prependTo(this.$stage)}},{filter:["width","items","settings"],run:function(){for(var t=this.settings.rtl?1:-1,e=this._clones.length+this._items.length,i=-1,s=0,n=0,a=[];++i<e;)s=a[i-1]||0,n=this._widths[this.relative(i)]+this.settings.margin,a.push(s+n*t);this._coordinates=a}},{filter:["width","items","settings"],run:function(){var t=this.settings.stagePadding,e=this._coordinates,i={width:Math.ceil(Math.abs(e[e.length-1]))+2*t,"padding-left":t||"","padding-right":t||""};this.$stage.css(i)}},{filter:["width","items","settings"],run:function(t){var e=this._coordinates.length,i=!this.settings.autoWidth,s=this.$stage.children();if(i&&t.items.merge)for(;e--;)t.css.width=this._widths[this.relative(e)],s.eq(e).css(t.css);else i&&(t.css.width=t.items.width,s.css(t.css))}},{filter:["items"],run:function(){this._coordinates.length<1&&this.$stage.removeAttr("style")}},{filter:["width","items","settings"],run:function(t){t.current=t.current?this.$stage.children().index(t.current):0,t.current=Math.max(this.minimum(),Math.min(this.maximum(),t.current)),this.reset(t.current)}},{filter:["position"],run:function(){this.animate(this.coordinates(this._current))}},{filter:["width","position","items","settings"],run:function(){var t,e,i,s,n=this.settings.rtl?1:-1,a=2*this.settings.stagePadding,o=this.coordinates(this.current())+a,r=o+this.width()*n,l=[];for(i=0,s=this._coordinates.length;i<s;i++)t=this._coordinates[i-1]||0,e=Math.abs(this._coordinates[i])+a*n,(this.op(t,"<=",o)&&this.op(t,">",r)||this.op(e,"<",o)&&this.op(e,">",r))&&l.push(i);this.$stage.children(".active").removeClass("active"),this.$stage.children(":eq("+l.join("), :eq(")+")").addClass("active"),this.settings.center&&(this.$stage.children(".center").removeClass("center"),this.$stage.children().eq(this.current()).addClass("center"))}}],a.prototype.initialize=function(){var t,i,s;this.enter("initializing"),this.trigger("initialize"),this.$element.toggleClass(this.settings.rtlClass,this.settings.rtl),this.settings.autoWidth&&!this.is("pre-loading")&&(t=this.$element.find("img"),i=this.settings.nestedItemSelector?"."+this.settings.nestedItemSelector:n,s=this.$element.children(i).width(),t.length&&s<=0&&this.preloadAutoWidthImages(t)),this.$element.addClass(this.options.loadingClass),this.$stage=e("<"+this.settings.stageElement+' class="'+this.settings.stageClass+'"/>').wrap('<div class="'+this.settings.stageOuterClass+'"/>'),this.$element.append(this.$stage.parent()),this.replace(this.$element.children().not(this.$stage.parent())),this.$element.is(":visible")?this.refresh():this.invalidate("width"),this.$element.removeClass(this.options.loadingClass).addClass(this.options.loadedClass),this.registerEventHandlers(),this.leave("initializing"),this.trigger("initialized")},a.prototype.setup=function(){var t=this.viewport(),i=this.options.responsive,s=-1,n=null;i?(e.each(i,(function(e){e<=t&&e>s&&(s=Number(e))})),"function"==typeof(n=e.extend({},this.options,i[s])).stagePadding&&(n.stagePadding=n.stagePadding()),delete n.responsive,n.responsiveClass&&this.$element.attr("class",this.$element.attr("class").replace(new RegExp("("+this.options.responsiveClass+"-)\\S+\\s","g"),"$1"+s))):n=e.extend({},this.options),this.trigger("change",{property:{name:"settings",value:n}}),this._breakpoint=s,this.settings=n,this.invalidate("settings"),this.trigger("changed",{property:{name:"settings",value:this.settings}})},a.prototype.optionsLogic=function(){this.settings.autoWidth&&(this.settings.stagePadding=!1,this.settings.merge=!1)},a.prototype.prepare=function(t){var i=this.trigger("prepare",{content:t});return i.data||(i.data=e("<"+this.settings.itemElement+"/>").addClass(this.options.itemClass).append(t)),this.trigger("prepared",{content:i.data}),i.data},a.prototype.update=function(){for(var t=0,i=this._pipe.length,s=e.proxy((function(t){return this[t]}),this._invalidated),n={};t<i;)(this._invalidated.all||e.grep(this._pipe[t].filter,s).length>0)&&this._pipe[t].run(n),t++;this._invalidated={},!this.is("valid")&&this.enter("valid")},a.prototype.width=function(t){switch(t=t||a.Width.Default){case a.Width.Inner:case a.Width.Outer:return this._width;default:return this._width-2*this.settings.stagePadding+this.settings.margin}},a.prototype.refresh=function(){this.enter("refreshing"),this.trigger("refresh"),this.setup(),this.optionsLogic(),this.$element.addClass(this.options.refreshClass),this.update(),this.$element.removeClass(this.options.refreshClass),this.leave("refreshing"),this.trigger("refreshed")},a.prototype.onThrottledResize=function(){i.clearTimeout(this.resizeTimer),this.resizeTimer=i.setTimeout(this._handlers.onResize,this.settings.responsiveRefreshRate)},a.prototype.onResize=function(){return!!this._items.length&&this._width!==this.$element.width()&&!!this.$element.is(":visible")&&(this.enter("resizing"),this.trigger("resize").isDefaultPrevented()?(this.leave("resizing"),!1):(this.invalidate("width"),this.refresh(),this.leave("resizing"),void this.trigger("resized")))},a.prototype.registerEventHandlers=function(){e.support.transition&&this.$stage.on(e.support.transition.end+".owl.core",e.proxy(this.onTransitionEnd,this)),!1!==this.settings.responsive&&this.on(i,"resize",this._handlers.onThrottledResize),this.settings.mouseDrag&&(this.$element.addClass(this.options.dragClass),this.$stage.on("mousedown.owl.core",e.proxy(this.onDragStart,this)),this.$stage.on("dragstart.owl.core selectstart.owl.core",(function(){return!1}))),this.settings.touchDrag&&(this.$stage.on("touchstart.owl.core",e.proxy(this.onDragStart,this)),this.$stage.on("touchcancel.owl.core",e.proxy(this.onDragEnd,this)))},a.prototype.onDragStart=function(t){var i=null;3!==t.which&&(e.support.transform?i={x:(i=this.$stage.css("transform").replace(/.*\(|\)| /g,"").split(","))[16===i.length?12:4],y:i[16===i.length?13:5]}:(i=this.$stage.position(),i={x:this.settings.rtl?i.left+this.$stage.width()-this.width()+this.settings.margin:i.left,y:i.top}),this.is("animating")&&(e.support.transform?this.animate(i.x):this.$stage.stop(),this.invalidate("position")),this.$element.toggleClass(this.options.grabClass,"mousedown"===t.type),this.speed(0),this._drag.time=(new Date).getTime(),this._drag.target=e(t.target),this._drag.stage.start=i,this._drag.stage.current=i,this._drag.pointer=this.pointer(t),e(s).on("mouseup.owl.core touchend.owl.core",e.proxy(this.onDragEnd,this)),e(s).one("mousemove.owl.core touchmove.owl.core",e.proxy((function(t){var i=this.difference(this._drag.pointer,this.pointer(t));e(s).on("mousemove.owl.core touchmove.owl.core",e.proxy(this.onDragMove,this)),Math.abs(i.x)<Math.abs(i.y)&&this.is("valid")||(t.preventDefault(),this.enter("dragging"),this.trigger("drag"))}),this)))},a.prototype.onDragMove=function(t){var e=null,i=null,s=null,n=this.difference(this._drag.pointer,this.pointer(t)),a=this.difference(this._drag.stage.start,n);this.is("dragging")&&(t.preventDefault(),this.settings.loop?(e=this.coordinates(this.minimum()),i=this.coordinates(this.maximum()+1)-e,a.x=((a.x-e)%i+i)%i+e):(e=this.settings.rtl?this.coordinates(this.maximum()):this.coordinates(this.minimum()),i=this.settings.rtl?this.coordinates(this.minimum()):this.coordinates(this.maximum()),s=this.settings.pullDrag?-1*n.x/5:0,a.x=Math.max(Math.min(a.x,e+s),i+s)),this._drag.stage.current=a,this.animate(a.x))},a.prototype.onDragEnd=function(t){var i=this.difference(this._drag.pointer,this.pointer(t)),n=this._drag.stage.current,a=i.x>0^this.settings.rtl?"left":"right";e(s).off(".owl.core"),this.$element.removeClass(this.options.grabClass),(0!==i.x&&this.is("dragging")||!this.is("valid"))&&(this.speed(this.settings.dragEndSpeed||this.settings.smartSpeed),this.current(this.closest(n.x,0!==i.x?a:this._drag.direction)),this.invalidate("position"),this.update(),this._drag.direction=a,(Math.abs(i.x)>3||(new Date).getTime()-this._drag.time>300)&&this._drag.target.one("click.owl.core",(function(){return!1}))),this.is("dragging")&&(this.leave("dragging"),this.trigger("dragged"))},a.prototype.closest=function(t,i){var s=-1,n=this.width(),a=this.coordinates();return this.settings.freeDrag||e.each(a,e.proxy((function(e,o){return"left"===i&&t>o-30&&t<o+30?s=e:"right"===i&&t>o-n-30&&t<o-n+30?s=e+1:this.op(t,"<",o)&&this.op(t,">",a[e+1]||o-n)&&(s="left"===i?e+1:e),-1===s}),this)),this.settings.loop||(this.op(t,">",a[this.minimum()])?s=t=this.minimum():this.op(t,"<",a[this.maximum()])&&(s=t=this.maximum())),s},a.prototype.animate=function(t){var i=this.speed()>0;this.is("animating")&&this.onTransitionEnd(),i&&(this.enter("animating"),this.trigger("translate")),e.support.transform3d&&e.support.transition?this.$stage.css({transform:"translate3d("+t+"px,0px,0px)",transition:this.speed()/1e3+"s"}):i?this.$stage.animate({left:t+"px"},this.speed(),this.settings.fallbackEasing,e.proxy(this.onTransitionEnd,this)):this.$stage.css({left:t+"px"})},a.prototype.is=function(t){return this._states.current[t]&&this._states.current[t]>0},a.prototype.current=function(t){if(t===n)return this._current;if(0===this._items.length)return n;if(t=this.normalize(t),this._current!==t){var e=this.trigger("change",{property:{name:"position",value:t}});e.data!==n&&(t=this.normalize(e.data)),this._current=t,this.invalidate("position"),this.trigger("changed",{property:{name:"position",value:this._current}})}return this._current},a.prototype.invalidate=function(t){return"string"===e.type(t)&&(this._invalidated[t]=!0,this.is("valid")&&this.leave("valid")),e.map(this._invalidated,(function(t,e){return e}))},a.prototype.reset=function(t){(t=this.normalize(t))!==n&&(this._speed=0,this._current=t,this.suppress(["translate","translated"]),this.animate(this.coordinates(t)),this.release(["translate","translated"]))},a.prototype.normalize=function(t,e){var i=this._items.length,s=e?0:this._clones.length;return!this.isNumeric(t)||i<1?t=n:(t<0||t>=i+s)&&(t=((t-s/2)%i+i)%i+s/2),t},a.prototype.relative=function(t){return t-=this._clones.length/2,this.normalize(t,!0)},a.prototype.maximum=function(t){var e,i,s,n=this.settings,a=this._coordinates.length;if(n.loop)a=this._clones.length/2+this._items.length-1;else if(n.autoWidth||n.merge){for(e=this._items.length,i=this._items[--e].width(),s=this.$element.width();e--&&!((i+=this._items[e].width()+this.settings.margin)>s););a=e+1}else a=n.center?this._items.length-1:this._items.length-n.items;return t&&(a-=this._clones.length/2),Math.max(a,0)},a.prototype.minimum=function(t){return t?0:this._clones.length/2},a.prototype.items=function(t){return t===n?this._items.slice():(t=this.normalize(t,!0),this._items[t])},a.prototype.mergers=function(t){return t===n?this._mergers.slice():(t=this.normalize(t,!0),this._mergers[t])},a.prototype.clones=function(t){var i=this._clones.length/2,s=i+this._items.length,a=function(t){return t%2==0?s+t/2:i-(t+1)/2};return t===n?e.map(this._clones,(function(t,e){return a(e)})):e.map(this._clones,(function(e,i){return e===t?a(i):null}))},a.prototype.speed=function(t){return t!==n&&(this._speed=t),this._speed},a.prototype.coordinates=function(t){var i,s=1,a=t-1;return t===n?e.map(this._coordinates,e.proxy((function(t,e){return this.coordinates(e)}),this)):(this.settings.center?(this.settings.rtl&&(s=-1,a=t+1),i=this._coordinates[t],i+=(this.width()-i+(this._coordinates[a]||0))/2*s):i=this._coordinates[a]||0,i=Math.ceil(i))},a.prototype.duration=function(t,e,i){return 0===i?0:Math.min(Math.max(Math.abs(e-t),1),6)*Math.abs(i||this.settings.smartSpeed)},a.prototype.to=function(t,e){var i=this.current(),s=null,n=t-this.relative(i),a=(n>0)-(n<0),o=this._items.length,r=this.minimum(),l=this.maximum();this.settings.loop?(!this.settings.rewind&&Math.abs(n)>o/2&&(n+=-1*a*o),(s=(((t=i+n)-r)%o+o)%o+r)!==t&&s-n<=l&&s-n>0&&(i=s-n,t=s,this.reset(i))):t=this.settings.rewind?(t%(l+=1)+l)%l:Math.max(r,Math.min(l,t)),this.speed(this.duration(i,t,e)),this.current(t),this.$element.is(":visible")&&this.update()},a.prototype.next=function(t){t=t||!1,this.to(this.relative(this.current())+1,t)},a.prototype.prev=function(t){t=t||!1,this.to(this.relative(this.current())-1,t)},a.prototype.onTransitionEnd=function(t){if(t!==n&&(t.stopPropagation(),(t.target||t.srcElement||t.originalTarget)!==this.$stage.get(0)))return!1;this.leave("animating"),this.trigger("translated")},a.prototype.viewport=function(){var t;return this.options.responsiveBaseElement!==i?t=e(this.options.responsiveBaseElement).width():i.innerWidth?t=i.innerWidth:s.documentElement&&s.documentElement.clientWidth?t=s.documentElement.clientWidth:console.warn("Can not detect viewport width."),t},a.prototype.replace=function(t){this.$stage.empty(),this._items=[],t&&(t=t instanceof jQuery?t:e(t)),this.settings.nestedItemSelector&&(t=t.find("."+this.settings.nestedItemSelector)),t.filter((function(){return 1===this.nodeType})).each(e.proxy((function(t,e){e=this.prepare(e),this.$stage.append(e),this._items.push(e),this._mergers.push(1*e.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)}),this)),this.reset(this.isNumeric(this.settings.startPosition)?this.settings.startPosition:0),this.invalidate("items")},a.prototype.add=function(t,i){var s=this.relative(this._current);i=i===n?this._items.length:this.normalize(i,!0),t=t instanceof jQuery?t:e(t),this.trigger("add",{content:t,position:i}),t=this.prepare(t),0===this._items.length||i===this._items.length?(0===this._items.length&&this.$stage.append(t),0!==this._items.length&&this._items[i-1].after(t),this._items.push(t),this._mergers.push(1*t.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)):(this._items[i].before(t),this._items.splice(i,0,t),this._mergers.splice(i,0,1*t.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)),this._items[s]&&this.reset(this._items[s].index()),this.invalidate("items"),this.trigger("added",{content:t,position:i})},a.prototype.remove=function(t){(t=this.normalize(t,!0))!==n&&(this.trigger("remove",{content:this._items[t],position:t}),this._items[t].remove(),this._items.splice(t,1),this._mergers.splice(t,1),this.invalidate("items"),this.trigger("removed",{content:null,position:t}))},a.prototype.preloadAutoWidthImages=function(t){t.each(e.proxy((function(t,i){this.enter("pre-loading"),i=e(i),e(new Image).one("load",e.proxy((function(t){i.attr("src",t.target.src),i.css("opacity",1),this.leave("pre-loading"),!this.is("pre-loading")&&!this.is("initializing")&&this.refresh()}),this)).attr("src",i.attr("src")||i.attr("data-src")||i.attr("data-src-retina"))}),this))},a.prototype.destroy=function(){for(var t in this.$element.off(".owl.core"),this.$stage.off(".owl.core"),e(s).off(".owl.core"),!1!==this.settings.responsive&&(i.clearTimeout(this.resizeTimer),this.off(i,"resize",this._handlers.onThrottledResize)),this._plugins)this._plugins[t].destroy();this.$stage.children(".cloned").remove(),this.$stage.unwrap(),this.$stage.children().contents().unwrap(),this.$stage.children().unwrap(),this.$element.removeClass(this.options.refreshClass).removeClass(this.options.loadingClass).removeClass(this.options.loadedClass).removeClass(this.options.rtlClass).removeClass(this.options.dragClass).removeClass(this.options.grabClass).attr("class",this.$element.attr("class").replace(new RegExp(this.options.responsiveClass+"-\\S+\\s","g"),"")).removeData("owl.carousel")},a.prototype.op=function(t,e,i){var s=this.settings.rtl;switch(e){case"<":return s?t>i:t<i;case">":return s?t<i:t>i;case">=":return s?t<=i:t>=i;case"<=":return s?t>=i:t<=i}},a.prototype.on=function(t,e,i,s){t.addEventListener?t.addEventListener(e,i,s):t.attachEvent&&t.attachEvent("on"+e,i)},a.prototype.off=function(t,e,i,s){t.removeEventListener?t.removeEventListener(e,i,s):t.detachEvent&&t.detachEvent("on"+e,i)},a.prototype.trigger=function(t,i,s,n,o){var r={item:{count:this._items.length,index:this.current()}},l=e.camelCase(e.grep(["on",t,s],(function(t){return t})).join("-").toLowerCase()),d=e.Event([t,"owl",s||"carousel"].join(".").toLowerCase(),e.extend({relatedTarget:this},r,i));return this._supress[t]||(e.each(this._plugins,(function(t,e){e.onTrigger&&e.onTrigger(d)})),this.register({type:a.Type.Event,name:t}),this.$element.trigger(d),this.settings&&"function"==typeof this.settings[l]&&this.settings[l].call(this,d)),d},a.prototype.enter=function(t){e.each([t].concat(this._states.tags[t]||[]),e.proxy((function(t,e){this._states.current[e]===n&&(this._states.current[e]=0),this._states.current[e]++}),this))},a.prototype.leave=function(t){e.each([t].concat(this._states.tags[t]||[]),e.proxy((function(t,e){this._states.current[e]--}),this))},a.prototype.register=function(t){if(t.type===a.Type.Event){if(e.event.special[t.name]||(e.event.special[t.name]={}),!e.event.special[t.name].owl){var i=e.event.special[t.name]._default;e.event.special[t.name]._default=function(t){return!i||!i.apply||t.namespace&&-1!==t.namespace.indexOf("owl")?t.namespace&&t.namespace.indexOf("owl")>-1:i.apply(this,arguments)},e.event.special[t.name].owl=!0}}else t.type===a.Type.State&&(this._states.tags[t.name]?this._states.tags[t.name]=this._states.tags[t.name].concat(t.tags):this._states.tags[t.name]=t.tags,this._states.tags[t.name]=e.grep(this._states.tags[t.name],e.proxy((function(i,s){return e.inArray(i,this._states.tags[t.name])===s}),this)))},a.prototype.suppress=function(t){e.each(t,e.proxy((function(t,e){this._supress[e]=!0}),this))},a.prototype.release=function(t){e.each(t,e.proxy((function(t,e){delete this._supress[e]}),this))},a.prototype.pointer=function(t){var e={x:null,y:null};return(t=(t=t.originalEvent||t||i.event).touches&&t.touches.length?t.touches[0]:t.changedTouches&&t.changedTouches.length?t.changedTouches[0]:t).pageX?(e.x=t.pageX,e.y=t.pageY):(e.x=t.clientX,e.y=t.clientY),e},a.prototype.isNumeric=function(t){return!isNaN(parseFloat(t))},a.prototype.difference=function(t,e){return{x:t.x-e.x,y:t.y-e.y}},e.fn.sbyOwlCarousel=function(i){var s=Array.prototype.slice.call(arguments,1);return this.each((function(){var n=e(this),o=n.data("owl.carousel");o||(o=new a(this,"object"==t(i)&&i),n.data("owl.carousel",o),e.each(["next","prev","to","destroy","refresh","replace","add","remove"],(function(t,i){o.register({type:a.Type.Event,name:i}),o.$element.on(i+".owl.carousel.core",e.proxy((function(t){t.namespace&&t.relatedTarget!==this&&(this.suppress([i]),o[i].apply(this,[].slice.call(arguments,1)),this.release([i]))}),o))}))),"string"==typeof i&&"_"!==i.charAt(0)&&o[i].apply(o,s)}))},e.fn.sbyOwlCarousel.Constructor=a}(window.Zepto||window.jQuery,window,document),function(t,e,i,s){var n=function e(i){this._core=i,this._interval=null,this._visible=null,this._handlers={"initialized.owl.carousel":t.proxy((function(t){t.namespace&&this._core.settings.autoRefresh&&this.watch()}),this)},this._core.options=t.extend({},e.Defaults,this._core.options),this._core.$element.on(this._handlers)};n.Defaults={autoRefresh:!0,autoRefreshInterval:500},n.prototype.watch=function(){this._interval||(this._visible=this._core.$element.is(":visible"),this._interval=e.setInterval(t.proxy(this.refresh,this),this._core.settings.autoRefreshInterval))},n.prototype.refresh=function(){this._core.$element.is(":visible")!==this._visible&&(this._visible=!this._visible,this._core.$element.toggleClass("sby-owl-hidden",!this._visible),this._visible&&this._core.invalidate("width")&&this._core.refresh())},n.prototype.destroy=function(){var t,i;for(t in e.clearInterval(this._interval),this._handlers)this._core.$element.off(t,this._handlers[t]);for(i in Object.getOwnPropertyNames(this))"function"!=typeof this[i]&&(this[i]=null)},t.fn.sbyOwlCarousel.Constructor.Plugins.AutoRefresh=n}(window.Zepto||window.jQuery,window,document),function(t,e,i,s){var n=function e(i){this._core=i,this._loaded=[],this._handlers={"initialized.owl.carousel change.owl.carousel resized.owl.carousel":t.proxy((function(e){if(e.namespace&&this._core.settings&&this._core.settings.lazyLoad&&(e.property&&"position"==e.property.name||"initialized"==e.type))for(var i=this._core.settings,s=i.center&&Math.ceil(i.items/2)||i.items,n=i.center&&-1*s||0,a=(e.property&&void 0!==e.property.value?e.property.value:this._core.current())+n,o=this._core.clones().length,r=t.proxy((function(t,e){this.load(e)}),this);n++<s;)this.load(o/2+this._core.relative(a)),o&&t.each(this._core.clones(this._core.relative(a)),r),a++}),this)},this._core.options=t.extend({},e.Defaults,this._core.options),this._core.$element.on(this._handlers)};n.Defaults={lazyLoad:!1},n.prototype.load=function(i){var s=this._core.$stage.children().eq(i),n=s&&s.find(".sby-owl-lazy");!n||t.inArray(s.get(0),this._loaded)>-1||(n.each(t.proxy((function(i,s){var n,a=t(s),o=e.devicePixelRatio>1&&a.attr("data-src-retina")||a.attr("data-src");this._core.trigger("load",{element:a,url:o},"lazy"),a.is("img")?a.one("load.owl.lazy",t.proxy((function(){a.css("opacity",1),this._core.trigger("loaded",{element:a,url:o},"lazy")}),this)).attr("src",o):((n=new Image).onload=t.proxy((function(){a.css({"background-image":'url("'+o+'")',opacity:"1"}),this._core.trigger("loaded",{element:a,url:o},"lazy")}),this),n.src=o)}),this)),this._loaded.push(s.get(0)))},n.prototype.destroy=function(){var t,e;for(t in this.handlers)this._core.$element.off(t,this.handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},t.fn.sbyOwlCarousel.Constructor.Plugins.Lazy=n}(window.Zepto||window.jQuery,window,document),i=window.Zepto||window.jQuery,window,document,s=function t(e){this._core=e,this._handlers={"initialized.owl.carousel refreshed.owl.carousel":i.proxy((function(t){t.namespace&&this._core.settings.autoHeight&&this.update()}),this),"changed.owl.carousel":i.proxy((function(t){t.namespace&&this._core.settings.autoHeight&&"position"==t.property.name&&this.update()}),this),"loaded.owl.lazy":i.proxy((function(t){t.namespace&&this._core.settings.autoHeight&&t.element.closest("."+this._core.settings.itemClass).index()===this._core.current()&&this.update()}),this)},this._core.options=i.extend({},t.Defaults,this._core.options),this._core.$element.on(this._handlers)},s.Defaults={autoHeight:!1,autoHeightClass:"sby-owl-height"},s.prototype.update=function(){var t,e=this._core._current,s=e+this._core.settings.items,n=this._core.$stage.children().toArray().slice(e,s),a=[];i.each(n,(function(t,e){a.push(i(e).height())})),t=Math.max.apply(null,a),this._core.$stage.parent().height(t).addClass(this._core.settings.autoHeightClass)},s.prototype.destroy=function(){var t,e;for(t in this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},i.fn.sbyOwlCarousel.Constructor.Plugins.AutoHeight=s,function(t,e,i,s){var n=function e(i){this._core=i,this._videos={},this._playing=null,this._handlers={"initialized.owl.carousel":t.proxy((function(t){t.namespace&&this._core.register({type:"state",name:"playing",tags:["interacting"]})}),this),"resize.owl.carousel":t.proxy((function(t){t.namespace&&this._core.settings.video&&this.isInFullScreen()&&t.preventDefault()}),this),"refreshed.owl.carousel":t.proxy((function(t){t.namespace&&this._core.is("resizing")&&this._core.$stage.find(".cloned .sby-owl-video-frame").remove()}),this),"changed.owl.carousel":t.proxy((function(t){t.namespace&&"position"===t.property.name&&this._playing&&this.stop()}),this),"prepared.owl.carousel":t.proxy((function(e){if(e.namespace){var i=t(e.content).find(".sby-owl-video");i.length&&(i.css("display","none"),this.fetch(i,t(e.content)))}}),this)},this._core.options=t.extend({},e.Defaults,this._core.options),this._core.$element.on(this._handlers),this._core.$element.on("click.owl.video",".sby-owl-video-play-icon",t.proxy((function(t){this.play(t)}),this))};n.Defaults={video:!1,videoHeight:!1,videoWidth:!1},n.prototype.fetch=function(t,e){var i=t.attr("data-vimeo-id")?"vimeo":t.attr("data-vzaar-id")?"vzaar":"youtube",s=t.attr("data-vimeo-id")||t.attr("data-youtube-id")||t.attr("data-vzaar-id"),n=t.attr("data-width")||this._core.settings.videoWidth,a=t.attr("data-height")||this._core.settings.videoHeight,o=t.attr("href");if(!o)throw new Error("Missing video URL.");if((s=o.match(/(http:|https:|)\/\/(player.|www.|app.)?(vimeo\.com|youtu(be\.com|\.be|be\.googleapis\.com)|vzaar\.com)\/(video\/|videos\/|embed\/|channels\/.+\/|groups\/.+\/|watch\?v=|v\/)?([A-Za-z0-9._%-]*)(\&\S+)?/))[3].indexOf("youtu")>-1)i="youtube";else if(s[3].indexOf("vimeo")>-1)i="vimeo";else{if(!(s[3].indexOf("vzaar")>-1))throw new Error("Video URL not supported.");i="vzaar"}s=s[6],this._videos[o]={type:i,id:s,width:n,height:a},e.attr("data-video",o),this.thumbnail(t,this._videos[o])},n.prototype.thumbnail=function(e,i){var s,n,a=i.width&&i.height?'style="width:'+i.width+"px;height:"+i.height+'px;"':"",o=e.find("img"),r="src",l="",d=this._core.settings,h=function(t){s=d.lazyLoad?'<div class="sby-owl-video-tn '+l+'" '+r+'="'+t+'"></div>':'<div class="sby-owl-video-tn" style="opacity:1;background-image:url('+t+')"></div>',e.after(s),e.after('<div class="sby-owl-video-play-icon"></div>')};if(e.wrap('<div class="sby-owl-video-wrapper"'+a+"></div>"),this._core.settings.lazyLoad&&(r="data-src",l="sby-owl-lazy"),o.length)return h(o.attr(r)),o.remove(),!1;"youtube"===i.type?(n="//img.youtube.com/vi/"+i.id+"/hqdefault.jpg",h(n)):"vimeo"===i.type?t.ajax({type:"GET",url:"//vimeo.com/api/v2/video/"+i.id+".json",jsonp:"callback",dataType:"jsonp",success:function(t){n=t[0].thumbnail_large,h(n)}}):"vzaar"===i.type&&t.ajax({type:"GET",url:"//vzaar.com/api/videos/"+i.id+".json",jsonp:"callback",dataType:"jsonp",success:function(t){n=t.framegrab_url,h(n)}})},n.prototype.stop=function(){this._core.trigger("stop",null,"video"),this._playing.find(".sby-owl-video-frame").remove(),this._playing.removeClass("sby-owl-video-playing"),this._playing=null,this._core.leave("playing"),this._core.trigger("stopped",null,"video")},n.prototype.play=function(e){var i,s=t(e.target).closest("."+this._core.settings.itemClass),n=this._videos[s.attr("data-video")],a=n.width||"100%",o=n.height||this._core.$stage.height();this._playing||(this._core.enter("playing"),this._core.trigger("play",null,"video"),s=this._core.items(this._core.relative(s.index())),this._core.reset(s.index()),"youtube"===n.type?i='<iframe width="'+a+'" height="'+o+'" src="//www.youtube.com/embed/'+n.id+"?autoplay=1&rel=0&v="+n.id+'" frameborder="0" allowfullscreen></iframe>':"vimeo"===n.type?i='<iframe src="//player.vimeo.com/video/'+n.id+'?autoplay=1" width="'+a+'" height="'+o+'" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>':"vzaar"===n.type&&(i='<iframe frameborder="0"height="'+o+'"width="'+a+'" allowfullscreen mozallowfullscreen webkitAllowFullScreen src="//view.vzaar.com/'+n.id+'/player?autoplay=true"></iframe>'),t('<div class="sby-owl-video-frame">'+i+"</div>").insertAfter(s.find(".sby-owl-video")),this._playing=s.addClass("sby-owl-video-playing"))},n.prototype.isInFullScreen=function(){var e=i.fullscreenElement||i.mozFullScreenElement||i.webkitFullscreenElement;return e&&t(e).parent().hasClass("sby-owl-video-frame")},n.prototype.destroy=function(){var t,e;for(t in this._core.$element.off("click.owl.video"),this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},t.fn.sbyOwlCarousel.Constructor.Plugins.Video=n}(window.Zepto||window.jQuery,window,document),function(t,e,i,s){var n=function e(i){this.core=i,this.core.options=t.extend({},e.Defaults,this.core.options),this.swapping=!0,this.previous=s,this.next=s,this.handlers={"change.owl.carousel":t.proxy((function(t){t.namespace&&"position"==t.property.name&&(this.previous=this.core.current(),this.next=t.property.value)}),this),"drag.owl.carousel dragged.owl.carousel translated.owl.carousel":t.proxy((function(t){t.namespace&&(this.swapping="translated"==t.type)}),this),"translate.owl.carousel":t.proxy((function(t){t.namespace&&this.swapping&&(this.core.options.animateOut||this.core.options.animateIn)&&this.swap()}),this)},this.core.$element.on(this.handlers)};n.Defaults={animateOut:!1,animateIn:!1},n.prototype.swap=function(){if(1===this.core.settings.items&&t.support.animation&&t.support.transition){this.core.speed(0);var e,i=t.proxy(this.clear,this),s=this.core.$stage.children().eq(this.previous),n=this.core.$stage.children().eq(this.next),a=this.core.settings.animateIn,o=this.core.settings.animateOut;this.core.current()!==this.previous&&(o&&(e=this.core.coordinates(this.previous)-this.core.coordinates(this.next),s.one(t.support.animation.end,i).css({left:e+"px"}).addClass("animated sby-owl-animated-out").addClass(o)),a&&n.one(t.support.animation.end,i).addClass("animated sby-owl-animated-in").addClass(a))}},n.prototype.clear=function(e){t(e.target).css({left:""}).removeClass("animated sby-owl-animated-out sby-owl-animated-in").removeClass(this.core.settings.animateIn).removeClass(this.core.settings.animateOut),this.core.onTransitionEnd()},n.prototype.destroy=function(){var t,e;for(t in this.handlers)this.core.$element.off(t,this.handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},t.fn.sbyOwlCarousel.Constructor.Plugins.Animate=n}(window.Zepto||window.jQuery,window,document),function(t,e,i,s){var n=function e(i){this._core=i,this._timeout=null,this._paused=!1,this._handlers={"changed.owl.carousel":t.proxy((function(t){t.namespace&&"settings"===t.property.name?this._core.settings.autoplay?this.play():this.stop():t.namespace&&"position"===t.property.name&&this._core.settings.autoplay&&this._setAutoPlayInterval()}),this),"initialized.owl.carousel":t.proxy((function(t){t.namespace&&this._core.settings.autoplay&&this.play()}),this),"play.owl.autoplay":t.proxy((function(t,e,i){t.namespace&&this.play(e,i)}),this),"stop.owl.autoplay":t.proxy((function(t){t.namespace&&this.stop()}),this),"mouseover.owl.autoplay":t.proxy((function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.pause()}),this),"mouseleave.owl.autoplay":t.proxy((function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.play()}),this),"touchstart.owl.core":t.proxy((function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.pause()}),this),"touchend.owl.core":t.proxy((function(){this._core.settings.autoplayHoverPause&&this.play()}),this)},this._core.$element.on(this._handlers),this._core.options=t.extend({},e.Defaults,this._core.options)};n.Defaults={autoplay:!1,autoplayTimeout:5e3,autoplayHoverPause:!1,autoplaySpeed:!1},n.prototype.play=function(t,e){this._paused=!1,this._core.is("rotating")||(this._core.enter("rotating"),this._setAutoPlayInterval())},n.prototype._getNextTimeout=function(s,n){return this._timeout&&e.clearTimeout(this._timeout),e.setTimeout(t.proxy((function(){this._paused||this._core.is("busy")||this._core.is("interacting")||i.hidden||this._core.next(n||this._core.settings.autoplaySpeed)}),this),s||this._core.settings.autoplayTimeout)},n.prototype._setAutoPlayInterval=function(){this._timeout=this._getNextTimeout()},n.prototype.stop=function(){this._core.is("rotating")&&(e.clearTimeout(this._timeout),this._core.leave("rotating"))},n.prototype.pause=function(){this._core.is("rotating")&&(this._paused=!0)},n.prototype.destroy=function(){var t,e;for(t in this.stop(),this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},t.fn.sbyOwlCarousel.Constructor.Plugins.autoplay=n}(window.Zepto||window.jQuery,window,document),function(t,e,i,s){"use strict";var n=function e(i){this._core=i,this._initialized=!1,this._pages=[],this._controls={},this._templates=[],this.$element=this._core.$element,this._overrides={next:this._core.next,prev:this._core.prev,to:this._core.to},this._handlers={"prepared.owl.carousel":t.proxy((function(e){e.namespace&&this._core.settings.dotsData&&this._templates.push('<div class="'+this._core.settings.dotClass+'">'+t(e.content).find("[data-dot]").addBack("[data-dot]").attr("data-dot")+"</div>")}),this),"added.owl.carousel":t.proxy((function(t){t.namespace&&this._core.settings.dotsData&&this._templates.splice(t.position,0,this._templates.pop())}),this),"remove.owl.carousel":t.proxy((function(t){t.namespace&&this._core.settings.dotsData&&this._templates.splice(t.position,1)}),this),"changed.owl.carousel":t.proxy((function(t){t.namespace&&"position"==t.property.name&&this.draw()}),this),"initialized.owl.carousel":t.proxy((function(t){t.namespace&&!this._initialized&&(this._core.trigger("initialize",null,"navigation"),this.initialize(),this.update(),this.draw(),this._initialized=!0,this._core.trigger("initialized",null,"navigation"))}),this),"refreshed.owl.carousel":t.proxy((function(t){t.namespace&&this._initialized&&(this._core.trigger("refresh",null,"navigation"),this.update(),this.draw(),this._core.trigger("refreshed",null,"navigation"))}),this)},this._core.options=t.extend({},e.Defaults,this._core.options),this.$element.on(this._handlers)};n.Defaults={nav:!1,navText:["prev","next"],navSpeed:!1,navElement:"div",navContainer:!1,navContainerClass:"sby-owl-nav",navClass:["sby-owl-prev","sby-owl-next"],slideBy:1,dotClass:"sby-owl-dot",dotsClass:"sby-owl-dots",dots:!0,dotsEach:!1,dotsData:!1,dotsSpeed:!1,dotsContainer:!1},n.prototype.initialize=function(){var e,i=this._core.settings;for(e in this._controls.$relative=(i.navContainer?t(i.navContainer):t("<div>").addClass(i.navContainerClass).appendTo(this.$element)).addClass("disabled"),this._controls.$previous=t("<"+i.navElement+">").addClass(i.navClass[0]).html(i.navText[0]).prependTo(this._controls.$relative).on("click",t.proxy((function(t){this.prev(i.navSpeed)}),this)),this._controls.$next=t("<"+i.navElement+">").addClass(i.navClass[1]).html(i.navText[1]).appendTo(this._controls.$relative).on("click",t.proxy((function(t){this.next(i.navSpeed)}),this)),i.dotsData||(this._templates=[t("<div>").addClass(i.dotClass).append(t("<span>")).prop("outerHTML")]),this._controls.$absolute=(i.dotsContainer?t(i.dotsContainer):t("<div>").addClass(i.dotsClass).appendTo(this.$element)).addClass("disabled"),this._controls.$absolute.on("click","div",t.proxy((function(e){var s=t(e.target).parent().is(this._controls.$absolute)?t(e.target).index():t(e.target).parent().index();e.preventDefault(),this.to(s,i.dotsSpeed)}),this)),this._overrides)this._core[e]=t.proxy(this[e],this)},n.prototype.destroy=function(){var t,e,i,s;for(t in this._handlers)this.$element.off(t,this._handlers[t]);for(e in this._controls)this._controls[e].remove();for(s in this.overides)this._core[s]=this._overrides[s];for(i in Object.getOwnPropertyNames(this))"function"!=typeof this[i]&&(this[i]=null)},n.prototype.update=function(){var t,e,i=this._core.clones().length/2,s=i+this._core.items().length,n=this._core.maximum(!0),a=this._core.settings,o=a.center||a.autoWidth||a.dotsData?1:a.dotsEach||a.items;if("page"!==a.slideBy&&(a.slideBy=Math.min(a.slideBy,a.items)),a.dots||"page"==a.slideBy)for(this._pages=[],t=i,e=0;t<s;t++){if(e>=o||0===e){if(this._pages.push({start:Math.min(n,t-i),end:t-i+o-1}),Math.min(n,t-i)===n)break;e=0}e+=this._core.mergers(this._core.relative(t))}},n.prototype.draw=function(){var e,i=this._core.settings,s=this._core.items().length<=i.items,n=this._core.relative(this._core.current()),a=i.loop||i.rewind;this._controls.$relative.toggleClass("disabled",!i.nav||s),i.nav&&(this._controls.$previous.toggleClass("disabled",!a&&n<=this._core.minimum(!0)),this._controls.$next.toggleClass("disabled",!a&&n>=this._core.maximum(!0))),this._controls.$absolute.toggleClass("disabled",!i.dots||s),i.dots&&(e=this._pages.length-this._controls.$absolute.children().length,i.dotsData&&0!==e?this._controls.$absolute.html(this._templates.join("")):e>0?this._controls.$absolute.append(new Array(e+1).join(this._templates[0])):e<0&&this._controls.$absolute.children().slice(e).remove(),this._controls.$absolute.find(".active").removeClass("active"),this._controls.$absolute.children().eq(t.inArray(this.current(),this._pages)).addClass("active"))},n.prototype.onTrigger=function(e){var i=this._core.settings;e.page={index:t.inArray(this.current(),this._pages),count:this._pages.length,size:i&&(i.center||i.autoWidth||i.dotsData?1:i.dotsEach||i.items)}},n.prototype.current=function(){var e=this._core.relative(this._core.current());return t.grep(this._pages,t.proxy((function(t,i){return t.start<=e&&t.end>=e}),this)).pop()},n.prototype.getPosition=function(e){var i,s,n=this._core.settings;return"page"==n.slideBy?(i=t.inArray(this.current(),this._pages),s=this._pages.length,e?++i:--i,i=this._pages[(i%s+s)%s].start):(i=this._core.relative(this._core.current()),s=this._core.items().length,e?i+=n.slideBy:i-=n.slideBy),i},n.prototype.next=function(e){t.proxy(this._overrides.to,this._core)(this.getPosition(!0),e)},n.prototype.prev=function(e){t.proxy(this._overrides.to,this._core)(this.getPosition(!1),e)},n.prototype.to=function(e,i,s){var n;!s&&this._pages.length?(n=this._pages.length,t.proxy(this._overrides.to,this._core)(this._pages[(e%n+n)%n].start,i)):t.proxy(this._overrides.to,this._core)(e,i)},t.fn.sbyOwlCarousel.Constructor.Plugins.Navigation=n}(window.Zepto||window.jQuery,window,document),function(t,e,i,s){"use strict";var n=function i(s){this._core=s,this._hashes={},this.$element=this._core.$element,this._handlers={"initialized.owl.carousel":t.proxy((function(i){i.namespace&&"URLHash"===this._core.settings.startPosition&&t(e).trigger("hashchange.owl.navigation")}),this),"prepared.owl.carousel":t.proxy((function(e){if(e.namespace){var i=t(e.content).find("[data-hash]").addBack("[data-hash]").attr("data-hash");if(!i)return;this._hashes[i]=e.content}}),this),"changed.owl.carousel":t.proxy((function(i){if(i.namespace&&"position"===i.property.name){var s=this._core.items(this._core.relative(this._core.current())),n=t.map(this._hashes,(function(t,e){return t===s?e:null})).join();if(!n||e.location.hash.slice(1)===n)return;e.location.hash=n}}),this)},this._core.options=t.extend({},i.Defaults,this._core.options),this.$element.on(this._handlers),t(e).on("hashchange.owl.navigation",t.proxy((function(t){var i=e.location.hash.substring(1),s=this._core.$stage.children(),n=this._hashes[i]&&s.index(this._hashes[i]);void 0!==n&&n!==this._core.current()&&this._core.to(this._core.relative(n),!1,!0)}),this))};n.Defaults={URLhashListener:!1},n.prototype.destroy=function(){var i,s;for(i in t(e).off("hashchange.owl.navigation"),this._handlers)this._core.$element.off(i,this._handlers[i]);for(s in Object.getOwnPropertyNames(this))"function"!=typeof this[s]&&(this[s]=null)},t.fn.sbyOwlCarousel.Constructor.Plugins.Hash=n}(window.Zepto||window.jQuery,window,document),function(t,e,i,s){function n(e,i){var s=!1,n=e.charAt(0).toUpperCase()+e.slice(1);return t.each((e+" "+r.join(n+" ")+n).split(" "),(function(t,e){if(void 0!==o[e])return s=!i||e,!1})),s}function a(t){return n(t,!0)}var o=t("<support>").get(0).style,r="Webkit Moz O ms".split(" "),l={transition:{end:{WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd",transition:"transitionend"}},animation:{end:{WebkitAnimation:"webkitAnimationEnd",MozAnimation:"animationend",OAnimation:"oAnimationEnd",animation:"animationend"}}};!!n("transition")&&(t.support.transition=new String(a("transition")),t.support.transition.end=l.transition.end[t.support.transition]),!!n("animation")&&(t.support.animation=new String(a("animation")),t.support.animation.end=l.animation.end[t.support.animation]),n("transform")&&(t.support.transform=new String(a("transform")),t.support.transform3d=!!n("perspective"))}(window.Zepto||window.jQuery,window,document),e=window.Zepto||window.jQuery,window,document,Owl2row=function(t){function e(e){return t.apply(this,arguments)}return e.toString=function(){return t.toString()},e}((function(t){this.owl=t,this.owl.options=e.extend({},Owl2row.Defaults,this.owl.options),this.handlers={"initialize.owl.carousel":e.proxy((function(t){this.owl.settings.owl2row&&this.build2row(this)}),this)},this.owl.$element.on(this.handlers)})),Owl2row.Defaults={owl2row:!1,owl2rowTarget:"sby_item",owl2rowContainer:"sby_owl2row-item",owl2rowDirection:"utd"},Owl2row.prototype.build2row=function(t){var i=e(t.owl.$element),s=i.find("."+t.owl.options.owl2rowTarget),n=[],a=[];e.each(s,(function(t,e){t%2==0?n.push(e):a.push(e)})),"ltr"===t.owl.options.owl2rowDirection?t.leftToright(t,i,s):t.upTodown(t,n,a,i)},Owl2row.prototype.leftToright=function(t,i,s){var n=t.owl.options.owl2rowContainer,a=t.owl.options.margin,o=s.length,r=[],l=[];o%2==1?o=(o-1)/2+1:o/=2,e.each(s,(function(t,e){t<o?r.push(e):l.push(e)})),e.each(r,(function(t,s){var o=e('<div class="'+n+'"/>'),d=r[t];d.style.marginBottom=a+"px",o.append(d).append(l[t]),i.append(o)}))},Owl2row.prototype.upTodown=function(t,i,s,n){var a=t.owl.options.owl2rowContainer,o=t.owl.options.margin;e.each(i,(function(t,r){var l=e('<div class="'+a+'"/>'),d=i[t];d.style.marginBottom=o+"px",l.append(d).append(s[t]),n.append(l)}))},Owl2row.prototype.destroy=function(){},e.fn.sbyOwlCarousel.Constructor.Plugins.owl2row=Owl2row,function(e){function i(){this.feeds={},this.ctas={},this.options=sbyOptions,this.isTouch="ontouchstart"in document.documentElement}function s(t,e,i){this.el=t,this.index=e,this.settings=i,this.placeholderURL=window.sby.options.placeholder,i.narrowPlayer&&(this.placeholderURL=window.sby.options.placeholderNarrow),this.playerAPIReady=!1,this.consentGiven=i.consentGiven,this.players={},this.minImageWidth=0,this.imageResolution=150,this.resizedImages={},this.needsResizing=[],this.outOfPages=!1,this.isInitialized=!1,this.mostRecentlyLoadedPosts=[],this.embedURL="//www.youtube-nocookie.com",i.allowCookies&&(this.embedURL="//www.youtube.com")}function n(t,i,n){s.call(this,t,i,n),this.CTA={},this.initLayout=function(){this.initGalleryLayout(),this.initGrid(),this.initCarousels();var t=jQuery.Event("sbyafterlayoutinit");t.feed=this,jQuery(window).trigger(t)},this.initGrid=function(){if(window.sbySemiEagerLoading&&jQuery("#sby_lightbox").length){var t=this;playerID="sby_lb-player",jQuery("#sby_lightbox").addClass("sby_video_lightbox");var i=e(this.el).find("sby_item").first().attr("data-video-id"),s=sbyOptions.autoplay;if(void 0===window.sbyLightboxPlayer){var n={host:window.location.protocol+t.embedURL,videoId:i,playerVars:{modestbranding:1,rel:0,autoplay:s},events:{onStateChange:function(i){var s=i.target.getVideoData().video_id;t.afterStateChange(playerID,s,i,e("#"+playerID).closest(".sby_video_thumbnail_wrap"))}}};t.maybeAddCTA(playerID),window.sbyLightboxPlayer=new window.YT.Player(playerID,n)}}},this.initCarousels=function(){var t=this,i=e(this.el);if(void 0!==this.settings.general.carousel){var s=this.settings.cols,n=this.settings.colsmobile;i.find(".sby_items_wrap").addClass("sby_carousel"),i.find(".sby_load_btn").remove(),i.find(".sby_item").css({"padding-top":i.find(".sby_items_wrap").css("padding-top"),"padding-right":i.find(".sby_items_wrap").css("padding-top"),"padding-bottom":i.find(".sby_items_wrap").css("padding-top"),"padding-left":i.find(".sby_items_wrap").css("padding-top")}),i.find(".sby_item").each((function(){e(this).attr("style",e(this).attr("style").replace("padding: "+i.find(".sby_items_wrap").css("padding-top"),"padding: "+i.find(".sby_items_wrap").css("padding-top")+" !important"))}));var a=t.settings.general.carousel[0],o=t.settings.general.carousel[1],r=t.settings.general.carousel[2],l=t.settings.general.carousel[3],d=t.settings.general.carousel[4],h=t.settings.general.carousel[5];r||(l=!1);var c=s,u=s,y=(a=a?"onhover":"hide",r=!1!==l,2==h);d=!d,i.hasClass("sby_mob_col_auto")?(c=2,2!=parseInt(s)&&(u=1),2==parseInt(s)&&(u=2)):u=n,this.carouselArgs={items:s,loop:d,rewind:!d,autoplay:r,autoplayTimeout:Math.max(l,2e3),autoplayHoverPause:!0,nav:!0,navText:['<svg class="svg-inline--fa fa-chevron-left fa-w-10" aria-hidden="true" data-fa-processed="" data-prefix="fa" data-icon="chevron-left" role="presentation" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><path fill="currentColor" d="M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z"></path></svg>','<svg class="svg-inline--fa fa-chevron-right fa-w-10" aria-hidden="true" data-fa-processed="" data-prefix="fa" data-icon="chevron-right" role="presentation" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><path fill="currentColor" d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"></path></svg>'],dots:o,owl2row:y,responsive:{0:{items:u},480:{items:c},640:{items:s}},onChange:function(){setTimeout((function(){t.afterResize()}),1)},onInitialize:function(){var e=jQuery(t.el);e.find(".sby_items_wrap.sby_carousel").fadeIn(),setTimeout((function(){e.find(".sby_items_wrap.sby_carousel .sby_info, .sby_owl2row-item,.sby_items_wrap.sby_carousel").fadeIn()}),1),setTimeout((function(){var t=e.find(".sby-owl-nav");if("onhover"===a);else if("below"===a){var i=e.find(".sby-owl-dots"),s=e.find(".sby-owl-prev"),n=e.find(".sby-owl-next"),o=e.find(".sby-owl-nav"),r=e.find(".sby-owl-dot"),l=r.length*r.innerWidth();e.innerWidth(),s.after(i),o.css("position","relative"),n.css("position","absolute").css("top","-6px").css("right",Math.max(.5*o.innerWidth()-.5*l-n.innerWidth()-6,0)),s.css("position","absolute").css("top","-6px").css("left",Math.max(.5*o.innerWidth()-.5*l-s.innerWidth()-6,0))}else"hide"===a&&t.addClass("hide").hide()}),1)}}}},this.stripEmojihtml=function(t){return t.find(".emoji").each((function(){e(this).replaceWith(e(this).attr("alt"))})),t.html()},this.afterItemRevealed=function(t){var e=this;if(t.find(".sby_caption").length&&!t.find(".sby_caption").hasClass("sby_full_caption")){var i=t.find(".sby_item_caption_wrap .sby_caption"),s=t.find(".sby_item_video_thumbnail .sby_caption"),n=void 0!==e.settings.general.descriptionlength?parseInt(e.settings.general.descriptionlength):150;n<1&&(n=99999);var a=this.stripEmojihtml(t.find(".sby_caption").first()),o=(a.match(/<br>/g)||[]).length;if((void 0===sbyOptions.brAdjust||"1"===sbyOptions.brAdjust||!0===sbyOptions.brAdjust)&&o>0&&a.indexOf("<br>")<n){var r=t.find(".sby_caption").first();captionWidth=r.width()>20?r.width():t.width(),fontSize=r.css("font-size"),charactersPerLine=captionWidth/parseInt(fontSize)*1.85,maxCharsPerLine=Math.floor(charactersPerLine),projectedMaxLines=Math.ceil(n/charactersPerLine);var l=a.split("<br>"),d=0,h=0;jQuery.each(l,(function(){var t=projectedMaxLines-d;if(t>0){var e=Math.max(1,Math.ceil(this.length/charactersPerLine));h+=Math.min(this.length+4,t*maxCharsPerLine),d+=e}})),n=h}var c=a.substring(0,n);if(c=a.length>n?c.substr(0,Math.min(c.length,c.lastIndexOf(" "))):c,i.length&&(i.html(sbyLinkify(c)),c===a&&i.next(".sby_expand").remove()),s.length){var u=c;c!==a&&(u+='<span class="sby_more">...</span>'),s.html(u)}a.length>n&&t.find(".sby_expand").show(),t.find(".sby_expand a").off("click").on("click",(function(s){s.preventDefault(),jQuery(this),i=void 0!==i?i:t.find(".sby_info .sby_caption"),a="undefined"!=typeof captiontext?a:t.find(".sby_item_video_thumbnail").attr("data-title"),t.hasClass("sby_caption_full")&&void 0!==c?(i.html(c),t.removeClass("sby_caption_full")):(i.html(sbyLinkify(a)),t.addClass("sby_caption_full")),e.afterResize()}))}this.setUpCTA(t);var y=void 0!==e.settings.general.disablelightbox&&e.settings.general.disablelightbox,g=void 0!==e.settings.general.captionlinks&&e.settings.general.captionlinks;if(y||g){if(g){var p="";void 0!==t.find("img").attr("alt")?p=t.find("img").attr("alt"):void 0!==t.find("video").attr("alt")&&(p=t.find("video").attr("alt"));var b=p.match(/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/g);b&&t.find("a").attr("href",b)}t.find(".sby_link").addClass("sby_disable_lightbox")}else{var f=t.find(".sby_photo_wrap"),m=f.find(".sby_link");feedOptions={hovereffect:"true"},"none"==feedOptions.hovereffect?(m.css("background","none").show(),m.find("*").hide().end().find(".sby_link_area").show()):f.on("mouseenter mouseleave",(function(e){switch(e.type){case"mouseenter":t.addClass("sby_animate");break;case"mouseleave":t.removeClass("sby_animate")}}))}var _=void 0!==t.attr("data-video-id")?t.attr("data-video-id"):t.find(".sby_video_thumbnail").attr("data-video-id");this.mostRecentlyLoadedPosts.push(_)},this.afterFeedSet=function(){void 0!==this.carouselArgs&&(e(this.el).find(".sby_carousel").sbyOwlCarousel(this.carouselArgs),2===parseInt(this.settings.general.carousel[5])&&e(this.el).addClass("sby_carousel_2_row"))},this.setUpCTA=function(t,e){e=void 0!==e?e:t.find(".sby_item_video_thumbnail").attr("data-video-id");var i=void 0!==t.find(".sby_item_video_thumbnail").attr("data-title")?t.find(".sby_item_video_thumbnail").attr("data-title"):"",s=window.sby.ctaDetect(i);window.sby.ctas[e]=s||this.getDefaultCTA()},this.getDefaultCTA=function(){return void 0!==this.settings.general.cta&&"default"!==this.settings.general.cta.type&&("link"===this.settings.general.cta.type?{callback:"link",url:this.settings.general.cta.defaultLink,text:this.settings.general.cta.defaultText}:{callback:"related",related:this.settings.general.cta.defaultPosts})},this.afterResize=function(){this.setImageHeight(),this.setImageResolution(),this.maybeRaiseImageResolution(),this.setImageSizeClass(),this.setAllCTADimensions(),this.sizePlayer(),this.sizeItems()},this.setAllCTADimensions=function(){e.each(this.CTA,(function(t,e){e.isInitialized&&e.setCTAStyles()}))},this.afterSendCheckWPPostsToServer=function(t){var s=e(this.el);s.find(".sby_item").each((function(){if(void 0!==t[e(this).attr("data-video-id")]){var i=t[e(this).attr("data-video-id")];e(this).find(".sby_view_count").text(i.sby_view_count),e(this).find(".sby_comment_count").text(i.sby_comment_count),e(this).find(".sby_like_count").text(i.sby_like_count),"none"!==i.sby_live_broadcast.broadcast_type&&(e(this).find(".sby_ls_message").text(i.sby_live_broadcast.live_streaming_string),e(this).find(".sby_date").html(i.sby_live_broadcast.live_streaming_date)),void 0!==i.sby_live_broadcast.live_streaming_timestamp&&e(this).attr("data-live-date",i.sby_live_broadcast.live_streaming_timestamp),void 0!==i.sby_description&&e(this).find(".sby_item_video_thumbnail").attr("data-title",i.sby_description)}})),s.find(".sby_player_item").each((function(){if(void 0!==t[e(this).find(".sby_video_thumbnail").attr("data-video-id")]){var i=t[e(this).find(".sby_video_thumbnail").attr("data-video-id")];e(this).find(".sby_view_count").text(i.sby_view_count),e(this).find(".sby_comment_count").text(i.sby_comment_count),e(this).find(".sby_like_count").text(i.sby_like_count),"none"!==i.sby_live_broadcast.broadcast_type&&(e(this).find(".sby_ls_message").text(i.sby_live_broadcast.live_streaming_string),e(this).find(".sby_date").html(i.sby_live_broadcast.live_streaming_date)),void 0!==i.sby_live_broadcast.live_streaming_timestamp&&e(this).attr("data-live-date",i.sby_live_broadcast.live_streaming_timestamp)}}));var n=jQuery.Event("sbyaftercheckposts");n.feed=window.sby.feeds[i],n.response=t,jQuery(window).trigger(n)},this.afterStateChange=function(t,e,i,s){this.CTA[t].toggleCTA(e,i.data,s)},this.changePlayerInfo=function(t){e(this.el).find(".sby_player_item").find(".sby_info").replaceWith(t.find(".sby_info").clone(!0,!0))},this.maybeAddCTA=function(t,e){void 0===this.CTA[t]&&(this.CTA[t]=new r(t,this))}}function a(){}function o(){a.call(this),this.getData=function(t){return{feedIndex:parseInt(t.closest(".sb_youtube").attr("data-sby-index")-1),link:t.attr("href"),video:t.attr("data-video-id"),title:t.attr("data-title"),videoTitle:void 0!==t.attr("data-video-title")?t.attr("data-video-title"):"YouTube Video",avatar:t.attr("data-avatar"),user:t.attr("data-user"),channelURL:t.attr("data-url")}},this.template=function(){return"<div id='sby_lightboxOverlay' class='sby_lightboxOverlay'></div><div id='sby_lightbox' class='sby_lightbox'><div class='sby_lb-outerContainer'><div class='sby_lb-container'><div class='sby_lb_video_thumbnail_wrap'><span class='sby_lb_video_thumbnail'><img class='sby_lb-image' alt='Lightbox image placeholder' src='' /><div class='sby_lb-player' id='sby_lb-player'></div></span></div><div class='sby_lb-nav'><a class='sby_lb-prev' href='#' ><p class='sby-screenreader'>Previous Slide</p><span></span></a><a class='sby_lb-next' href='#' ><p class='sby-screenreader'>Next Slide</p><span></span></a></div><div class='sby_lb-loader'><a class='sby_lb-cancel'></a></div></div></div><div class='sby_lb-dataContainer'><div class='sby_lb-data'><div class='sby_lb-details'><div class='sby_lb-caption'></div><div class='sby_lb-info'><div class='sby_lb-number'></div></div></div><div class='sby_lb-closeContainer'><a class='sby_lb-close'></a></div></div></div></div>"},this.beforePlayerSetup=function(t,i,s,n,a){t.find(".sby_cta_items_wraps").length?t.find(".sby_cta_items_wraps").replaceWith(e(a.el).find(".sby_cta_items_wraps").clone()):t.find(".sby_lb_video_thumbnail_wrap").append(e(a.el).find(".sby_cta_items_wraps").clone())},this.afterPlayerSetup=function(t,e,i,s){this.availableAvatarUrls={};var n=e.title;void 0!==n&&""!==n&&(n=n.replace(/(>#)/g,"> #")),n=n?sbyLinkify(n):"","function"==typeof sbyLightboxAction&&setTimeout((function(){sbyLightboxAction()}),100);var a="",o="";void 0!==e.avatar&&""!==e.avatar&&void 0!==e.user?(a="undefined"!==e.avatar?'<img src="'+e.avatar+'" />':"",o='<a class="sby_lightbox_username" href="'+e.channelURL+'" target="_blank" rel="noopener">'+a+"<p>@"+e.user+"</p></a> "):void 0!==e.user&&jQuery.each(window.sby.feeds,(function(){void 0!==this.availableAvatarUrls&&void 0!==this.availableAvatarUrls[e.user]&&"undefined"!==this.availableAvatarUrls[e.user]&&(a='<img src="'+this.availableAvatarUrls[e.user]+'" />')})),t.find(".sby_lb-caption").html(o+'<span class="sby_caption_text">'+n+"</span>").fadeIn("fast")}}function r(t,e){this.isInitialized=!1,this.videoID=t,this.callback=this.related,this.callbackArgs={},this.feedObjInContext=e,this.state=1,this.numItems=4,this.numItemColumns=2,this.$player=!1}function l(t,i){e.ajax({url:sbyOptions.adminAjaxUrl,type:"post",data:t,success:i})}i.prototype={createPage:function(t,i){void 0!==window.sbyajaxurl&&-1!==window.sbyajaxurl.indexOf(window.location.hostname)||(window.sbyajaxurl=window.location.hostname+"/wp-admin/admin-ajax.php"),e(".sby_no_js_error_message").remove(),e(".sby_no_js").removeClass("sby_no_js"),t(i)},maybeAddYTAPI:function(){var t="sby-youtube-api";if(null===document.getElementById(t)){var e=document.createElement("script"),i=document.getElementsByTagName("script")[0];e.src="https://www.youtube.com/iframe_api",e.id=t,i.parentNode.insertBefore(e,i)}},createLightbox:function(){var t,i=new o,s=(t=0,function(e,i){clearTimeout(t),t=setTimeout(e,i)});jQuery(window).on("resize",(function(){s((function(){i.afterResize()}),200)})),function(){var t=jQuery,s=function(){function t(){this.fadeDuration=500,this.fitImagesInViewport=!0,this.resizeDuration=700,this.positionFromTop=50,this.showImageNumberLabel=!0,this.alwaysShowNavOnTouchDevices=!1,this.wrapAround=!1}return t.prototype.albumLabel=function(t,e){return t+" / "+e},t}(),n=function(){function s(t){this.options=t,this.album=[],this.currentImageIndex=void 0,this.init()}return s.prototype.init=function(){this.enable(),this.build()},s.prototype.enable=function(){var e=this;t("body").on("click","a[data-sby-lightbox]",(function(i){return e.start(t(i.currentTarget)),!1}))},s.prototype.build=function(){var e=this;t(""+i.template()).appendTo(t("body")),this.$lightbox=t("#sby_lightbox"),this.$overlay=t("#sby_lightboxOverlay"),this.$outerContainer=this.$lightbox.find(".sby_lb-outerContainer"),this.$container=this.$lightbox.find(".sby_lb-container"),this.containerTopPadding=parseInt(this.$container.css("padding-top"),10),this.containerRightPadding=parseInt(this.$container.css("padding-right"),10),this.containerBottomPadding=parseInt(this.$container.css("padding-bottom"),10),this.containerLeftPadding=parseInt(this.$container.css("padding-left"),10),this.$overlay.hide().on("click",(function(){return e.end(),!1})),jQuery(document).on("click",(function(t,e,s){jQuery(t.target).closest(".sby_lb-outerContainer").length||jQuery(t.target).closest(".sby_lb-dataContainer").length||(i.pausePlayer(),jQuery("#sby_lightboxOverlay, #sby_lightbox").fadeOut())})),this.$lightbox.hide(),jQuery("#sby_lightboxOverlay").on("click",(function(s){return i.pausePlayer(),"sby_lightbox"===t(s.target).attr("id")&&e.end(),!1})),this.$lightbox.find(".sby_lb-prev").on("click",(function(){return i.pausePlayer(),e.changeImage(0===e.currentImageIndex?e.album.length-1:e.currentImageIndex-1),!1})),this.$lightbox.find(".sby_lb-container").on("swiperight",(function(){return i.pausePlayer(),e.changeImage(0===e.currentImageIndex?e.album.length-1:e.currentImageIndex-1),!1})),this.$lightbox.find(".sby_lb-next").on("click",(function(){return i.pausePlayer(),e.changeImage(e.currentImageIndex===e.album.length-1?0:e.currentImageIndex+1),!1})),this.$lightbox.find(".sby_lb-container").on("swipeleft",(function(){return i.pausePlayer(),e.changeImage(e.currentImageIndex===e.album.length-1?0:e.currentImageIndex+1),!1})),this.$lightbox.find(".sby_lb-loader, .sby_lb-close").on("click",(function(){return i.pausePlayer(),e.end(),!1}))},s.prototype.start=function(e){function s(t){n.album.push(i.getData(t))}var n=this,a=t(window);a.on("resize",t.proxy(this.sizeOverlay,this)),t("select, object, embed").css({visibility:"hidden"}),this.sizeOverlay(),this.album=[];var o,r=0,l=e.attr("data-sby-lightbox");if(l){o=t(e.prop("tagName")+'[data-sby-lightbox="'+l+'"]');for(var d=0;d<o.length;d=++d)s(t(o[d])),o[d]===e[0]&&(r=d)}else if("lightbox"===e.attr("rel"))s(e);else{o=t(e.prop("tagName")+'[rel="'+e.attr("rel")+'"]');for(var h=0;h<o.length;h=++h)s(t(o[h])),o[h]===e[0]&&(r=h)}var c=a.scrollTop()+this.options.positionFromTop,u=a.scrollLeft();this.$lightbox.css({top:c+"px",left:u+"px"}).fadeIn(this.options.fadeDuration),this.changeImage(r)},s.prototype.changeImage=function(e){var i=this;this.disableKeyboardNav();var s=this.$lightbox.find(".sby_lb-image");this.$overlay.fadeIn(this.options.fadeDuration),t(".sby_lb-loader").fadeIn("slow"),this.$lightbox.find(".sby_lb-image, .sby_lb-nav, .sby_lb-prev, .sby_lb-next, .sby_lb-dataContainer, .sby_lb-numbers, .sby_lb-caption").hide(),this.$outerContainer.addClass("animating");var n=new Image;n.onload=function(){var a,o,r,l,d,h;s.attr("src",i.album[e].link),t(n),s.width(n.width),s.height(n.height),i.options.fitImagesInViewport&&(h=t(window).width(),d=t(window).height(),l=h-i.containerLeftPadding-i.containerRightPadding-20-100,r=d-i.containerTopPadding-i.containerBottomPadding-150,(n.width>l||n.height>r)&&(n.width/l>n.height/r?(o=l,a=parseInt(n.height/(n.width/o),10),s.width(o),s.height(a)):(a=r,o=parseInt(n.width/(n.height/a),10),s.width(o),s.height(a)))),i.sizeContainer(s.width(),s.height())},n.src=this.album[e].link,this.currentImageIndex=e},s.prototype.sizeOverlay=function(){this.$overlay.width(t(window).width()).height(t(document).height())},s.prototype.sizeContainer=function(t,e){function i(){s.$lightbox.find(".sby_lb-dataContainer").width(o),s.$lightbox.find(".sby_lb-prevLink").height(r),s.$lightbox.find(".sby_lb-nextLink").height(r),s.showImage()}var s=this,n=this.$outerContainer.outerWidth(),a=this.$outerContainer.outerHeight(),o=t+this.containerLeftPadding+this.containerRightPadding,r=e+this.containerTopPadding+this.containerBottomPadding;n!==o||a!==r?this.$outerContainer.animate({width:o,height:r},this.options.resizeDuration,"swing",(function(){i()})):i()},s.prototype.showImage=function(){this.$lightbox.find(".sby_lb-loader").hide(),this.$lightbox.find(".sby_lb-image").fadeIn("slow"),this.updateNav(),this.updateDetails(),this.preloadNeighboringImages(),this.enableKeyboardNav()},s.prototype.updateNav=function(){var t=!1;try{document.createEvent("TouchEvent"),t=!!this.options.alwaysShowNavOnTouchDevices}catch(t){}this.$lightbox.find(".sby_lb-nav").show(),this.album.length>1&&(this.options.wrapAround?(t&&this.$lightbox.find(".sby_lb-prev, .sby_lb-next").css("opacity","1"),this.$lightbox.find(".sby_lb-prev, .sby_lb-next").show()):(this.currentImageIndex>0&&(this.$lightbox.find(".sby_lb-prev").show(),t&&this.$lightbox.find(".sby_lb-prev").css("opacity","1")),this.currentImageIndex<this.album.length-1&&(this.$lightbox.find(".sby_lb-next").show(),t&&this.$lightbox.find(".sby_lb-next").css("opacity","1"))))},s.prototype.updateDetails=function(){var t=this;jQuery("iframe.sby_lb-player-loaded").length&&(jQuery(".sby_lb-player-placeholder").replaceWith(jQuery("iframe.sby_lb-player-loaded")),jQuery("iframe.sby_lb-player-loaded").removeClass("sby_lb-player-loaded").show());var s=window.sby.feeds[this.album[this.currentImageIndex].feedIndex];if(i.beforePlayerSetup(this.$lightbox,this.album[this.currentImageIndex],this.currentImageIndex,this.album,s),h()){if(jQuery("#sby_lightbox").removeClass("sby_video_lightbox"),s.settings.consentGiven&&this.album[this.currentImageIndex].video.length){jQuery(".sby_gdpr_notice").remove();var n="sby_lb-player";jQuery("#sby_lightbox").addClass("sby_video_lightbox");var a=this.album[this.currentImageIndex].video,o=sbyOptions.autoplay;if(void 0===window.sbyLightboxPlayer){var r={host:window.location.protocol+s.embedURL,videoId:a,playerVars:{modestbranding:1,rel:0,autoplay:o},events:{onStateChange:function(t){var i=t.target.getVideoData().video_id;s.afterStateChange(n,i,t,e("#"+n).closest(".sby_video_thumbnail_wrap"))}}};s.maybeAddCTA(n),window.sbyLightboxPlayer=new window.YT.Player(n,r)}else window.sbyLightboxPlayer.loadVideoById(a);this.$outerContainer.removeClass("animating"),this.$lightbox.find(".sby_lb-dataContainer").fadeIn(this.options.resizeDuration,(function(){return t.sizeOverlay()})),setTimeout((function(){e("#sby_lightbox .sby_lb-player").css({height:e("#sby_lightbox .sby_lb-outerContainer").height()+"px",width:e("#sby_lightbox .sby_lb-outerContainer").width()+"px",top:0})}),1),this.$lightbox.find("iframe").length&&this.$lightbox.find("iframe").attr("title",this.album[this.currentImageIndex].videoTitle)}else{var l=e(".sby_item[data-video-id="+this.album[this.currentImageIndex].video+"]").find(".sby_video_thumbnail").attr("data-full-res");e(".sby_lb-image").attr("src",l),this.$outerContainer.removeClass("animating"),this.$lightbox.find(".sby_lb-dataContainer").fadeIn(this.options.resizeDuration,(function(){return t.sizeOverlay()})),jQuery(".sby_lb-container").prepend('<a href="https://www.youtube.com/watch?v='+this.album[this.currentImageIndex].video+'" target="_blank" rel="noopener noreferrer" class="sby_gdpr_notice"><svg style="color: rgba(255,255,255,1)" class="svg-inline--fa fa-play fa-w-14 sby_playbtn" aria-label="Play" aria-hidden="true" data-fa-processed="" data-prefix="fa" data-icon="play" role="presentation" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6z"></path></svg></a>')}i.afterPlayerSetup(this.$lightbox,this.album[this.currentImageIndex],this.currentImageIndex,this.album),this.album.length>1&&this.options.showImageNumberLabel?this.$lightbox.find(".sby_lb-number").text(this.options.albumLabel(this.currentImageIndex+1,this.album.length)).fadeIn("fast"):this.$lightbox.find(".sby_lb-number").hide()}},s.prototype.preloadNeighboringImages=function(){this.album.length>this.currentImageIndex+1&&((new Image).src=this.album[this.currentImageIndex+1].link),this.currentImageIndex>0&&((new Image).src=this.album[this.currentImageIndex-1].link)},s.prototype.enableKeyboardNav=function(){t(document).on("keyup.keyboard",t.proxy(this.keyboardAction,this))},s.prototype.disableKeyboardNav=function(){t(document).off(".keyboard")},s.prototype.keyboardAction=function(t){var s=event.keyCode,n=String.fromCharCode(s).toLowerCase();27===s||n.match(/x|o|c/)?(h()&&e("#sby_lightbox video.sby_video")[0].pause(),e("#sby_lightbox iframe").attr("src",""),this.end()):"p"===n||37===s?(0!==this.currentImageIndex?this.changeImage(this.currentImageIndex-1):this.options.wrapAround&&this.album.length>1&&this.changeImage(this.album.length-1),h()&&e("#sby_lightbox video.sby_video")[0].pause(),e("#sby_lightbox iframe").attr("src","")):"n"!==n&&39!==s||(this.currentImageIndex!==this.album.length-1?this.changeImage(this.currentImageIndex+1):this.options.wrapAround&&this.album.length>1&&this.changeImage(0),i.pausePlayer())},s.prototype.end=function(){this.disableKeyboardNav(),t(window).off("resize",this.sizeOverlay),this.$lightbox.fadeOut(this.options.fadeDuration),this.$overlay.fadeOut(this.options.fadeDuration),t("select, object, embed").css({visibility:"visible"})},s}();t((function(){var t=new s;new n(t),e(".sby_lightbox_action a").off().on("click",(function(){e(this).parent().find(".sby_lightbox_tooltip").toggle()}))}))}.call(this)},createFeeds:function(t){sbyOptions.isAdmin||window.sby.createLightbox(),t.whenFeedsCreated(e(".sb_youtube").each((function(t){e(this).attr("data-sby-index",t+1),e(this).find(".sby_player").replaceWith('<div id="sby_player'+t+'"></div>');var i=e(this),s=void 0!==i.attr("data-sby-flags")?i.attr("data-sby-flags").split(","):[],a=void 0!==i.attr("data-options")?JSON.parse(i.attr("data-options")):{};s.indexOf("testAjax")>-1&&(window.sby.triggeredTest=!0,l({action:"sby_on_ajax_test_trigger"},(function(t){console.log("did test")})));var o={cols:i.attr("data-cols"),colsmobile:"same"!==i.attr("data-colsmobile")?i.attr("data-colsmobile"):i.attr("data-cols"),num:i.attr("data-num"),imgRes:i.attr("data-res"),feedID:i.attr("data-feedid"),postID:"undefind"!=typeof i.attr("data-postid")?i.attr("data-postid"):"unknown",shortCodeAtts:i.attr("data-shortcode-atts"),resizingEnabled:-1===s.indexOf("resizeDisable"),imageLoadEnabled:-1===s.indexOf("imageLoadDisable"),debugEnabled:s.indexOf("debug")>-1,favorLocal:s.indexOf("favorLocal")>-1,ajaxPostLoad:s.indexOf("ajaxPostLoad")>-1,checkWPPosts:s.indexOf("checkWPPosts")>-1,singleCheckPosts:s.indexOf("singleCheckPosts")>-1,narrowPlayer:s.indexOf("narrowPlayer")>-1,gdpr:s.indexOf("gdpr")>-1,consentGiven:-1===s.indexOf("gdpr"),noCDN:s.indexOf("disablecdn")>-1,allowCookies:s.indexOf("allowcookies")>-1,lightboxEnabled:void 0!==i.attr("data-sby-supports-lightbox"),locator:s.indexOf("locator")>-1,autoMinRes:1,general:a};window.sby.feeds[t]=function(t,e,i){return new n(t,e,i)}(this,t,o),void 0!==window.sbyAPIReady&&(window.sby.feeds[t].playerAPIReady=!0),window.sby.feeds[t].setResizedImages(),window.sby.feeds[t].init();var r=jQuery.Event("sbyafterfeedcreate");r.feed=window.sby.feeds[t],jQuery(window).trigger(r)})))},afterFeedsCreated:function(){if(e(".sb_youtube_header").each((function(){var t=e(this);t.find(".sby_header_link").on("mouseenter mouseleave",(function(e){switch(e.type){case"mouseenter":t.find(".sby_header_img_hover").addClass("sby_fade_in");break;case"mouseleave":t.find(".sby_header_img_hover").removeClass("sby_fade_in")}}))})),window.sbyAPIReady){var t=jQuery.Event("sbyfeedandytready");jQuery(window).trigger(t)}},encodeHTML:function(t){return void 0===t?"":t.replace(/(>)/g,"&gt;").replace(/(<)/g,"&lt;").replace(/(&lt;br\/&gt;)/g,"<br>").replace(/(&lt;br&gt;)/g,"<br>")},urlDetect:function(t){return t.match(/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/g)},ctaDetect:function(t){var e=t.match(/{Link:(.*)}/g),i=!1;if(null!==e){var s=window.sby.urlDetect(e[0]);if(null!==s){var n=s[0].trim();i={callback:"link",url:n,text:e[0].replace("{Link:","").replace("}","").replace(n,"").replace("  "," ").trim()}}else console.log("CTA found but no URL")}return i},shuffle:function(t){for(var e,i,s=t.length;0!==s;)i=Math.floor(Math.random()*s),e=t[s-=1],t[s]=t[i],t[i]=e;return t}},s.prototype={init:function(){var t=this;t.settings.consentGiven=t.checkConsent(),t.settings.consentGiven&&window.sby.maybeAddYTAPI(),t.settings.noCDN&&!t.settings.consentGiven&&(e(this.el).find(".sb_youtube_header").length?e(this.el).find(".sb_youtube_header").addClass("sby_no_consent"):e(this.el).prev(".sb_youtube_header").length&&e(this.el).prev(".sb_youtube_header").addClass("sby_no_consent")),e(this.el).find("#sby_mod_error").length&&e(this.el).prepend(e(this.el).find("#sby_mod_error")),this.settings.ajaxPostLoad?this.getNewPostSet():this.afterInitialImagesLoaded();var i,s=(i=0,function(t,e){clearTimeout(i),i=setTimeout(t,e)});jQuery(window).on("resize",(function(){s((function(){t.afterResize()}),1)}))},initLayout:function(){this.initGalleryLayout()},initGalleryLayout:function(){var i=e(this.el),s=this;i.hasClass("sby_layout_gallery")&&i.find(".sby_player_outer_wrap").length&&(this.maybeRaiseSingleImageResolution(i.find(".sby_player_outer_wrap"),0,!0),i.find(".sby_player_outer_wrap .sby_video_thumbnail").off().on("click",(function(i){!(!s.settings.lightboxEnabled||s.settings.lightboxEnabled&&s.settings.noCDN)||!s.settings.noCDN&&s.settings.consentGiven?(i.preventDefault(),s.onThumbnailClick(e(this),!0)):t(e(this).closest(".sby_item").length)&&void 0!==e(this).closest(".sby_item").attr("data-video-id")&&e(this).attr("href","https://www.youtube.com/watch?v="+e(this).closest(".sby_item").attr("data-video-id"))})),i.find(".sby_item").first().addClass("sby_current"),i.on("mouseenter",(function(){s.canCreatePlayer()&&(i.find(".sby_player_outer_wrap iframe").length?void 0===s.player&&s.playerEagerLoaded()&&s.createPlayer("sby_player"+s.index):(i.addClass("sby_player_added").find(".sby_player_outer_wrap").addClass("sby_player_loading"),i.find(".sby_player_outer_wrap .sby_video_thumbnail").find(".sby_loader").show().removeClass("sby_hidden"),s.createPlayer("sby_player"+s.index)))})),window.sbySemiEagerLoading&&s.createPlayer("sby_player"+s.index),s.settings.noCDN&&i.find(".sby_player_outer_wrap").append('<div class="sby_play_btn">\n                        <span class="sby_play_btn_bg"></span>\n                    <svg aria-hidden="true" focusable="false" data-prefix="fab" data-icon="youtube" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512" class="svg-inline--fa fa-youtube fa-w-18"><path fill="currentColor" d="M549.655 124.083c-6.281-23.65-24.787-42.276-48.284-48.597C458.781 64 288 64 288 64S117.22 64 74.629 75.486c-23.497 6.322-42.003 24.947-48.284 48.597-11.412 42.867-11.412 132.305-11.412 132.305s0 89.438 11.412 132.305c6.281 23.65 24.787 41.5 48.284 47.821C117.22 448 288 448 288 448s170.78 0 213.371-11.486c23.497-6.321 42.003-24.171 48.284-47.821 11.412-42.867 11.412-132.305 11.412-132.305s0-89.438-11.412-132.305zm-317.51 213.508V175.185l142.739 81.205-142.739 81.201z" class=""></path></svg>                    </div>'))},createPlayer:function(t,i,s,n){var a=e(this.el),o=this;if(i=void 0!==i?i:this.getVideoID(a.find(".sby_item").first()),s=void 0!==s?s:0,void 0===n&&(n={host:window.location.protocol+o.embedURL,videoId:i,playerVars:{modestbranding:1,rel:0,autoplay:s}}),void 0===n.events&&(n.events={onReady:function(){a.find(".sby_player_outer_wrap").removeClass("sby_player_loading").find(".sby_video_thumbnail").css("z-index",-1).find(".sby_loader").hide().addClass("sby_hidden"),e("#"+t).length&&e("#"+t).closest(".sby_video_thumbnail_wrap").find(".sby_video_thumbnail").length&&e("#"+t).closest(".sby_video_thumbnail_wrap").find(".sby_video_thumbnail").fadeTo(0,"slow",(function(){e(this).css("z-index",-1),e(this).find(".sby_loader").hide().addClass("sby_hidden"),e(this).closest(".sby_item").removeClass("sby_player_loading")}));var i=jQuery.Event("sbyafterplayerready");i.feed=o,i.player=this,jQuery(window).trigger(i)},onStateChange:function(s){a.find(".sby_player_outer_wrap").removeClass("sby_player_loading").find(".sby_video_thumbnail").css("z-index",-1).find(".sby_loader").hide().addClass("sby_hidden"),o.afterStateChange(t,i,s,e("#"+t).closest(".sby_video_thumbnail_wrap")),1===s.data&&void 0!==o.players&&a.find(".sby_item").each((function(){var t=o.getVideoID(e(this));e(this).find("iframe").length&&t!==i&&void 0!==o.players[t]&&"function"==typeof o.players[t].pauseVideo&&o.players[t].pauseVideo()}))}}),window.sbyEagerLoading)var r=YT.get(t);else r=new window.YT.Player(t,n);this.maybeAddCTA(t),a.hasClass("sby_layout_list")&&void 0===this.players[i]?this.players[i]=r:void 0===this.player&&(this.player=r);var l=jQuery.Event("sbyafterplayercreated");return l.feed=this,jQuery(window).trigger(l),a.find(".sby_player_outer_wrap .sby_play_btn").remove(),r},afterStateChange:function(t,e,i,s){},afterInitialImagesLoaded:function(){this.initLayout(),this.loadMoreButtonInit(),this.hideExtraItemsForWidth(),this.beforeNewImagesRevealed(),this.revealNewImages(),this.afterNewImagesRevealed(),this.afterFeedSet(),this.sizePlayer(),this.sizeItems(),this.settings.consentGiven?this.applyFullFeatures():this.removeFeatures()},afterResize:function(){this.setImageHeight(),this.setImageResolution(),this.maybeRaiseImageResolution(),this.setImageSizeClass()},afterLoadMoreClicked:function(t){t.find(".sby_loader").removeClass("sby_hidden"),t.find(".sby_btn_text").addClass("sby_hidden"),t.closest(".sb_youtube").find(".sby_num_diff_hide").addClass("sby_transition").removeClass("sby_num_diff_hide")},afterNewImagesLoaded:function(){var t=e(this.el),i=this;this.beforeNewImagesRevealed(),this.revealNewImages(),this.afterNewImagesRevealed(),this.sizePlayer(),this.sizeItems(),setTimeout((function(){t.find(".sby_loader").addClass("sby_hidden"),t.find(".sby_btn_text").removeClass("sby_hidden"),i.maybeRaiseImageResolution()}),1),this.settings.consentGiven?this.applyFullFeatures():this.removeFeatures()},beforeNewImagesRevealed:function(){this.setImageHeight(),this.maybeRaiseImageResolution(!0),this.setImageSizeClass()},afterFeedSet:function(){},sizePlayer:function(){var t=e(this.el),i=this;if(t.hasClass("sby_layout_gallery")){$playerThumbnail=t.find(".sby_player_item").find(".sby_player_video_thumbnail");var s=$playerThumbnail.innerWidth(),n=Math.floor(9*s/16);i.settings.narrowPlayer&&(n=Math.floor(3*s/4)),$playerThumbnail.css("height",n+"px").css("overflow","hidden")}else t.hasClass("sby_layout_list")&&t.find(".sby_item").each((function(){$playerThumbnail=e(this).find(".sby_item_video_thumbnail");var t=$playerThumbnail.innerWidth(),s=Math.floor(9*t/16);i.settings.narrowPlayer&&(s=Math.floor(3*t/4)),$playerThumbnail.css("height",s+"px").css("overflow","hidden")}))},sizeItems:function(){var t=e(this.el);t.hasClass("sby_layout_list")||t.find(".sby_item").find(".sby_item_video_thumbnail").each((function(){if(e(this).hasClass("sby_imgLiquid_ready")){var t=e(this).innerWidth(),i=Math.floor(9*t/16);e(this).css("height",i+"px").css("overflow","hidden")}}))},revealNewImages:function(){var i=e(this.el),s=this;this.applyImageLiquid(),"function"==typeof sbyCustomJS&&setTimeout((function(){sbyCustomJS()}),100),i.find(".sby-screenreader").find("img").remove(),i.find(".sby_item.sby_new").each((function(i){var n=jQuery(this);videoID=n.attr("data-video-id"),window.sbyEagerLoading&&s.canCreatePlayer()&&e("#sby_player_"+videoID).length&&(player=new YT.Player("sby_player_"+videoID,{height:"100",width:"100",videoId:videoID,playerVars:{modestbranding:1,rel:0,autoplay:0},events:{onStateChange:function(t){t.target.getVideoData().video_id,1===t.data&&n.find(".sby_item").each((function(){var e=jQuery(this).attr("data-video-id");jQuery(this).find("iframe").length&&jQuery(t.target.a).attr("id")!==jQuery(this).find("iframe").attr("id")&&YT.get("sby_player_"+e).pauseVideo()}))}}})),n.find(".sby_video_thumbnail").on("mouseenter",(function(){s.onThumbnailEnter(e(this),!1)})),n.find(".sby_player_wrap").on("mouseleave",(function(){s.onThumbnailLeave(e(this),!1)})),n.find(".sby_video_thumbnail").on("click",(function(i){!(!s.settings.lightboxEnabled||s.settings.lightboxEnabled&&s.settings.noCDN)||!s.settings.noCDN&&s.settings.consentGiven?(i.preventDefault(),s.onThumbnailClick(e(this),!1)):t(e(this).closest(".sby_item").length)&&void 0!==e(this).closest(".sby_item").attr("data-video-id")&&e(this).attr("href","https://www.youtube.com/watch?v="+e(this).closest(".sby_item").attr("data-video-id"))})),s.settings.lightboxEnabled&&(n.find(".sby_video_thumbnail").attr("data-sby-lightbox",s.index),"undefined"!=typeof sbyOptions&&void 0!==sbyOptions.lightboxPlaceholder&&(s.settings.narrowPlayer?n.find(".sby_video_thumbnail").attr("href",sbyOptions.lightboxPlaceholderNarrow):n.find(".sby_video_thumbnail").attr("href",sbyOptions.lightboxPlaceholder))),s.afterItemRevealed(n),""===n.find(".sby_info_item").text().trim()&&n.find(".sby_info_item").addClass("sby_no_space")})),i.find(".sby_player_item").each((function(t){var e=jQuery(this);s.afterItemRevealed(e)})),setTimeout((function(){i.find(".sby_item.sby_new").removeClass("sby_new"),i.find(".sby_transition").length,i.find(".sby_transition").each((function(t){var e=jQuery(this);setTimeout((function(){e.removeClass("sby_transition")}),1)}))}),1)},afterItemRevealed:function(){},afterNewImagesRevealed:function(){this.listenForVisibilityChange(),this.sendNeedsResizingToServer(),this.sendCheckWPPostsToServer(),this.settings.imageLoadEnabled||e(".sby_no_resraise").removeClass("sby_no_resraise");var t=e.Event("sbyafterimagesloaded");t.el=e(this.el),e(window).trigger(t)},setResizedImages:function(){e(this.el).find(".sby_resized_image_data").length&&void 0!==e(this.el).find(".sby_resized_image_data").attr("data-resized")&&0===e(this.el).find(".sby_resized_image_data").attr("data-resized").indexOf('{"')&&(this.resizedImages=JSON.parse(e(this.el).find(".sby_resized_image_data").attr("data-resized")),e(this.el).find(".sby_resized_image_data").remove())},sendNeedsResizingToServer:function(){var t=this;if(t.needsResizing.length>0&&t.settings.resizingEnabled){var i=e(this.el).find(".sby_item").length;l({action:"sby_resized_images_submit",needs_resizing:t.needsResizing,offset:i,feed_id:t.settings.feedID,location:t.locationGuess(),post_id:t.settings.postID,atts:t.settings.shortCodeAtts},(function(e){if(0===e.trim().indexOf("{")){var i=JSON.parse(e);t.settings.debugEnabled&&console.log(i)}}))}},sendCheckWPPostsToServer:function(){var t=this;if(t.settings.checkWPPosts||t.settings.singleCheckPosts){var i=void 0!==t.settings.feedID?t.settings.feedID:"sby_single",s=t.mostRecentlyLoadedPosts;t.mostRecentlyLoadedPosts=[],l({action:"sby_check_wp_submit",feed_id:i,atts:t.settings.shortCodeAtts,location:t.locationGuess(),post_id:t.settings.postID,offset:e(this.el).hasClass("sby_layout_carousel")?Math.floor(e(this.el).find(".sby_item").length/2-1):e(this.el).find(".sby_item").length,posts:s},(function(e){if(0===e.trim().indexOf("{")){var i=JSON.parse(e);t.settings.debugEnabled&&console.log(i),t.afterSendCheckWPPostsToServer(i)}}))}},afterSendCheckWPPostsToServer:function(t){},loadMoreButtonInit:function(){var t=e(this.el),i=this;t.find(".sby_footer .sby_load_btn").off().on("click",(function(){i.afterLoadMoreClicked(jQuery(this)),i.getNewPostSet()}))},getNewPostSet:function(){var t=e(this.el),i=this;l({action:"sby_load_more_clicked",offset:t.find(".sby_item").length,feed_id:i.settings.feedID,atts:i.settings.shortCodeAtts,location:i.locationGuess(),post_id:i.settings.postID,current_resolution:i.imageResolution},(function(s){if(0===s.trim().indexOf("{")){var n=JSON.parse(s),a=void 0!==n.feedStatus.checkWPPosts&&n.feedStatus.checkWPPosts;i.settings.debugEnabled&&console.log(n),i.settings.checkWPPosts=!!a,i.appendNewPosts(n.html),i.addResizedImages(n.resizedImages),i.settings.ajaxPostLoad?(i.settings.ajaxPostLoad=!1,i.afterInitialImagesLoaded()):i.afterNewImagesLoaded(),n.feedStatus.shouldPaginate?i.outOfPages=!1:(i.outOfPages=!0,t.find(".sby_load_btn").hide()),e(".sby_no_js").removeClass("sby_no_js")}}))},appendNewPosts:function(t){var i=e(this.el);i.find(".sby_items_wrap .sby_item").length?i.find(".sby_items_wrap .sby_item").last().after(t):i.find(".sby_items_wrap").append(t)},addResizedImages:function(t){for(var e in t)this.resizedImages[e]=t[e]},setImageHeight:function(){},maybeRaiseSingleImageResolution:function(t,i,s){var n=this,a=n.getImageUrls(t),o=t.find(".sby_video_thumbnail > img").attr("src"),r=150;if(s=void 0!==s&&s,!(t.hasClass("sby_no_resraise")||!n.settings.consentGiven&&n.settings.noCDN)){e.each(a,(function(t,e){e===o&&(r=parseInt(t),s=!1)}));var l=640;switch(n.settings.imgRes){case"thumb":l=120;break;case"medium":l=320;break;case"large":l=480;break;case"full":l=640;break;default:var d=Math.max(n.settings.autoMinRes,t.find(".sby_video_thumbnail").innerWidth());switch(n.getBestResolutionForAuto(d,1,e(this.el).find("sby_item").first())){case 480:l=480;break;case 320:l=320;break;case 120:l=120}}if(l>r||o===n.placeholderURL||s){if(n.settings.debugEnabled){var h=o===n.placeholderURL?"was placeholder":"too small";console.log("rais res for "+o,h)}var c=a[l];t.find(".sby_video_thumbnail > img").attr("src",c),t.find(".sby_video_thumbnail").hasClass("sby_imgLiquid_ready")&&t.find(".sby_video_thumbnail").css("background-image",'url("'+c+'")')}t.find("img").on("error",(function(){if(e(this).hasClass("sby_img_error"))console.log("unfixed error "+e(this).attr("src"));else{if(e(this).addClass("sby_img_error"),e(this).attr("src").indexOf("i.ytimg.com")>-1){n.settings.favorLocal=!0;var t=n.getImageUrls(e(this).closest(".sby_item"));void 0!==t[640]&&(e(this).attr("src",t[640]),e(this).closest(".sby_video_thumbnail").css("background-image","url("+t[640]+")"))}else void 0!==e(this).closest(".sby_video_thumbnail").attr("data-full-res")?(e(this).attr("src",e(this).closest(".sby_video_thumbnail").attr("data-full-res")),e(this).closest(".sby_video_thumbnail").css("background-image","url("+e(this).closest(".sby_video_thumbnail").attr("data-full-res")+")")):"undefined"!==e(this).closest(".sby_video_thumbnail").attr("href")&&(e(this).attr("src",e(this).closest(".sby_video_thumbnail").attr("href")+"media?size=l"),e(this).closest(".sby_video_thumbnail").css("background-image","url("+e(this).closest(".sby_video_thumbnail").attr("href")+"media?size=l)"));setTimeout((function(){n.afterResize()}),1)}}))}},maybeRaiseImageResolution:function(t){var i=this,s=void 0!==t&&!0===t?".sby_item.sby_new":".sby_item",n=!i.isInitialized;e(i.el).find(s).each((function(t){!e(this).hasClass("sby_num_diff_hide")&&e(this).find(".sby_video_thumbnail").length&&void 0!==e(this).find(".sby_video_thumbnail").attr("data-img-src-set")&&i.maybeRaiseSingleImageResolution(e(this),t,n)})),i.isInitialized=!0},getBestResolutionForAuto:function(t,i,s){(isNaN(i)||i<1)&&(i=1);var n=t*i,a=10*Math.ceil(n/10),o=[120,320,480,640];if(s.hasClass("sby_highlighted")&&(a*=2),-1===o.indexOf(parseInt(a))){var r=!1;e.each(o,(function(t,e){e>parseInt(a)&&!r&&(a=e,r=!0)}))}return a},hideExtraItemsForWidth:function(){if("carousel"!==this.layout){var t=e(this.el),i=void 0!==t.attr("data-num")&&""!==t.attr("data-num")?parseInt(t.attr("data-num")):1,s=void 0!==t.attr("data-nummobile")&&""!==t.attr("data-nummobile")?parseInt(t.attr("data-nummobile")):i;t.hasClass(".sby_layout_carousel")||(e(window).width()<480?s<t.find(".sby_item").length&&t.find(".sby_item").slice(s-t.find(".sby_item").length).addClass("sby_num_diff_hide"):i<t.find(".sby_item").length&&t.find(".sby_item").slice(i-t.find(".sby_item").length).addClass("sby_num_diff_hide"))}},setImageSizeClass:function(){var t=e(this.el);t.removeClass("sby_small sby_medium");var i=t.innerWidth(),s=parseInt(t.find(".sby_items_wrap").outerWidth()-t.find(".sby_items_wrap").width())/2,n=this.getColumnCount(),a=(i-s*(n+2))/n;a>140&&a<240?t.addClass("sby_medium"):a<=140&&t.addClass("sby_small")},setMinImageWidth:function(){e(this.el).find(".sby_item .sby_video_thumbnail").first().length?this.minImageWidth=e(this.el).find(".sby_item .sby_video_thumbnail").first().innerWidth():this.minImageWidth=150},setImageResolution:function(){if("auto"===this.settings.imgRes)this.imageResolution="auto";else switch(this.settings.imgRes){case"thumb":this.imageResolution=150;break;case"medium":this.imageResolution=320;break;default:this.imageResolution=640}},getImageUrls:function(t){var e=JSON.parse(t.find(".sby_video_thumbnail").attr("data-img-src-set").replace(/\\\//g,"/")),i=t.attr("id").replace("sby_","").replace("player_","");if(void 0!==this.resizedImages[i]&&"video"!==this.resizedImages[i]&&"pending"!==this.resizedImages[i]&&"error"!==this.resizedImages[i].id&&"video"!==this.resizedImages[i].id&&"pending"!==this.resizedImages[i].id){if(void 0!==this.resizedImages[i].sizes){var s=[];void 0!==this.resizedImages[i].sizes.full&&(s.push(640),e[640]=sbyOptions.resized_url+this.resizedImages[i].id+"full.jpg",t.find(".sby_link_area").attr("href",sbyOptions.resized_url+this.resizedImages[i].id+"full.jpg"),t.find(".sby_video_thumbnail").attr("data-full-res",sbyOptions.resized_url+this.resizedImages[i].id+"full.jpg")),void 0!==this.resizedImages[i].sizes.low&&(s.push(320),e[320]=sbyOptions.resized_url+this.resizedImages[i].id+"low.jpg",this.settings.favorLocal&&void 0===this.resizedImages[i].sizes.full&&(t.find(".sby_link_area").attr("href",sbyOptions.resized_url+this.resizedImages[i].id+"low.jpg"),t.find(".sby_video_thumbnail").attr("data-full-res",sbyOptions.resized_url+this.resizedImages[i].id+"low.jpg"))),void 0!==this.resizedImages[i].sizes.thumb&&(s.push(150),e[150]=sbyOptions.resized_url+this.resizedImages[i].id+"thumb.jpg"),this.settings.favorLocal&&(-1===s.indexOf(640)&&s.indexOf(320)>-1&&(e[640]=sbyOptions.resized_url+this.resizedImages[i].id+"low.jpg"),-1===s.indexOf(320)&&(s.indexOf(640)>-1?e[320]=sbyOptions.resized_url+this.resizedImages[i].id+"full.jpg":s.indexOf(150)>-1&&(e[320]=sbyOptions.resized_url+this.resizedImages[i].id+"thumb.jpg")),-1===s.indexOf(150)&&(s.indexOf(320)>-1?e[150]=sbyOptions.resized_url+this.resizedImages[i].id+"low.jpg":s.indexOf(640)>-1&&(e[150]=sbyOptions.resized_url+this.resizedImages[i].id+"full.jpg")))}}else(void 0===this.resizedImages[i]||void 0!==this.resizedImages[i].id&&"pending"!==this.resizedImages[i].id&&"error"!==this.resizedImages[i].id)&&this.addToNeedsResizing(i);return e},getVideoID:function(t){if(t.hasClass("sby_item")||t.hasClass("sby_player_item")){if(void 0!==t.find(".sby_video_thumbnail").attr("data-video-id"))return t.find(".sby_video_thumbnail").attr("data-video-id")}else if(t.closest("sby_item").length||t.closest("sby_player_item").length){var i=t.closest("sby_item").length?t.closest("sby_item"):t.closest("sby_player_item");if(void 0!==i.find(".sby_video_thumbnail").attr("data-video-id"))return i.find(".sby_video_thumbnail").attr("data-video-id")}else{if(t.hasClass("sb_youtube"))return t.find(".sby_item").first().find(".sby_video_thumbnail").attr("data-video-id");if(e(this.el).find(".sby_video_thumbnail").first().length&&void 0!==e(this.el).find(".sby_video_thumbnail").first().attr("data-video-id"))return e(this.el).find(".sby_video_thumbnail").first().attr("data-video-id")}return""},getAvatarUrl:function(t,e){if(""===t)return"";var i=this.settings.general.avatars;return"local"===(e=void 0!==e?e:"local")?void 0!==i["LCL"+t]&&1===parseInt(i["LCL"+t])?sbyOptions.resized_url+t+".jpg":void 0!==i[t]?i[t]:"":void 0!==i[t]?i[t]:void 0!==i["LCL"+t]&&1===parseInt(i["LCL"+t])?sbyOptions.resized_url+t+".jpg":""},addToNeedsResizing:function(t){-1===this.needsResizing.indexOf(t)&&this.needsResizing.push(t)},applyImageLiquid:function(){var t=e(this.el);(function(){var t,e,i,s,n=n||{VER:"0.9.944"};n.bgs_Available=!1,n.bgs_CheckRunned=!1,(t=jQuery).fn.extend({sby_imgLiquid:function(e){this.defaults={fill:!0,verticalAlign:"center",horizontalAlign:"center",useBackgroundSize:!0,useDataHtmlAttr:!0,responsive:!0,delay:0,fadeInTime:0,removeBoxBackground:!0,hardPixels:!0,responsiveCheckTime:500,timecheckvisibility:500,onStart:null,onFinish:null,onItemStart:null,onItemFinish:null,onItemError:null},function(){if(!n.bgs_CheckRunned){n.bgs_CheckRunned=!0;var e=t('<span style="background-size:cover" />');t("body").append(e),function(){var t=e[0];if(t&&window.getComputedStyle){var i=window.getComputedStyle(t,null);i&&i.backgroundSize&&(n.bgs_Available="cover"===i.backgroundSize)}}(),e.remove()}}();var i=this;return this.options=e,this.settings=t.extend({},this.defaults,this.options),this.settings.onStart&&this.settings.onStart(),this.each((function(e){function s(){(l.responsive||h.data("sby_imgLiquid_oldProcessed"))&&h.data("sby_imgLiquid_settings")&&(l=h.data("sby_imgLiquid_settings"),d.actualSize=d.get(0).offsetWidth+d.get(0).offsetHeight/1e4,d.sizeOld&&d.actualSize!==d.sizeOld&&o(),d.sizeOld=d.actualSize,setTimeout(s,l.responsiveCheckTime))}function a(){h.data("sby_imgLiquid_error",!0),d.addClass("sby_imgLiquid_error"),l.onItemError&&l.onItemError(e,d,h),r()}function o(){var t,i,s,n,a,o,c,u,y=0,g=0,p=d.width(),b=d.height();void 0===h.data("owidth")&&h.data("owidth",h[0].width),void 0===h.data("oheight")&&h.data("oheight",h[0].height),l.fill===p/b>=h.data("owidth")/h.data("oheight")?(t="100%",i="auto",s=Math.floor(p),n=Math.floor(p*(h.data("oheight")/h.data("owidth")))):(t="auto",i="100%",s=Math.floor(b*(h.data("owidth")/h.data("oheight"))),n=Math.floor(b)),c=p-s,"left"===(a=l.horizontalAlign.toLowerCase())&&(g=0),"center"===a&&(g=.5*c),"right"===a&&(g=c),-1!==a.indexOf("%")&&(a=parseInt(a.replace("%",""),10))>0&&(g=c*a*.01),u=b-n,"left"===(o=l.verticalAlign.toLowerCase())&&(y=0),"center"===o&&(y=.5*u),"bottom"===o&&(y=u),-1!==o.indexOf("%")&&(o=parseInt(o.replace("%",""),10))>0&&(y=u*o*.01),l.hardPixels&&(t=s,i=n),h.css({width:t,height:i,"margin-left":Math.floor(g),"margin-top":Math.floor(y)}),h.data("sby_imgLiquid_oldProcessed")||(h.fadeTo(l.fadeInTime,1),h.data("sby_imgLiquid_oldProcessed",!0),l.removeBoxBackground&&d.css("background-image","none"),d.addClass("sby_imgLiquid_nobgSize"),d.addClass("sby_imgLiquid_ready")),l.onItemFinish&&l.onItemFinish(e,d,h),r()}function r(){e===i.length-1&&i.settings.onFinish&&i.settings.onFinish()}var l=i.settings,d=t(this),h=t("img:first",d);return h.length?(h.data("sby_imgLiquid_settings")?(d.removeClass("sby_imgLiquid_error").removeClass("sby_imgLiquid_ready"),l=t.extend({},h.data("sby_imgLiquid_settings"),i.options)):l=t.extend({},i.settings,function(){var t={};if(i.settings.useDataHtmlAttr){var e=d.attr("data-sby_imgLiquid-fill"),s=d.attr("data-sby_imgLiquid-horizontalAlign"),a=d.attr("data-sby_imgLiquid-verticalAlign");("true"===e||"false"===e)&&(t.fill=Boolean("true"===e)),void 0===s||"left"!==s&&"center"!==s&&"right"!==s&&-1===s.indexOf("%")||(t.horizontalAlign=s),void 0===a||"top"!==a&&"bottom"!==a&&"center"!==a&&-1===a.indexOf("%")||(t.verticalAlign=a)}return n.isIE&&i.settings.ieFadeInDisabled&&(t.fadeInTime=0),t}()),h.data("sby_imgLiquid_settings",l),l.onItemStart&&l.onItemStart(e,d,h),void(n.bgs_Available&&l.useBackgroundSize?(-1===d.css("background-image").indexOf(encodeURI(h.attr("src")))&&d.css({"background-image":'url("'+encodeURI(h.attr("src"))+'")'}),d.css({"background-size":l.fill?"cover":"contain","background-position":(l.horizontalAlign+" "+l.verticalAlign).toLowerCase(),"background-repeat":"no-repeat"}),t("a:first",d).css({display:"block",width:"100%",height:"100%"}),t("img",d).css({display:"none"}),l.onItemFinish&&l.onItemFinish(e,d,h),d.addClass("sby_imgLiquid_bgSize"),d.addClass("sby_imgLiquid_ready"),r()):function i(){if(h.data("oldSrc")&&h.data("oldSrc")!==h.attr("src")){var n=h.clone().removeAttr("style");return n.data("sby_imgLiquid_settings",h.data("sby_imgLiquid_settings")),h.parent().prepend(n),h.remove(),(h=n)[0].width=0,void setTimeout(i,10)}return h.data("sby_imgLiquid_oldProcessed")?void o():(h.data("sby_imgLiquid_oldProcessed",!1),h.data("oldSrc",h.attr("src")),t("img:not(:first)",d).css("display","none"),d.css({overflow:"hidden"}),h.fadeTo(0,0).removeAttr("width").removeAttr("height").css({visibility:"visible","max-width":"none","max-height":"none",width:"auto",height:"auto",display:"block"}),h.on("error",a),h[0].onerror=a,function t(){h.data("sby_imgLiquid_error")||h.data("sby_imgLiquid_loaded")||h.data("sby_imgLiquid_oldProcessed")||(d.is(":visible")&&h[0].complete&&h[0].width>0&&h[0].height>0?(h.data("sby_imgLiquid_loaded",!0),setTimeout(o,e*l.delay)):setTimeout(t,l.timecheckvisibility))}(),void s())}())):void a()}))}}),e=n.injectCss,i=document.getElementsByTagName("head")[0],(s=document.createElement("style")).type="text/css",s.styleSheet?s.styleSheet.cssText=e:s.appendChild(document.createTextNode(e)),i.appendChild(s)})(),"function"==typeof t.find(".sby_player_item").sby_imgLiquid&&(t.find(".sby_player_item").length&&t.find(".sby_player_item .sby_player_video_thumbnail").sby_imgLiquid({fill:!0}),t.find(".sby_item .sby_item_video_thumbnail").sby_imgLiquid({fill:!0}))},listenForVisibilityChange:function(){var t=this;!function(t){var e={callback:function(){},runOnLoad:!0,frequency:100,sbyPreviousVisibility:null},i={sbyCheckVisibility:function(t,e){if(jQuery.contains(document,t[0])){var s=e.sbyPreviousVisibility,n=t.is(":visible");e.sbyPreviousVisibility=n,null==s?e.runOnLoad&&e.callback(t,n):s!==n&&e.callback(t,n),setTimeout((function(){i.sbyCheckVisibility(t,e)}),e.frequency)}}};t.fn.sbyVisibilityChanged=function(s){var n=t.extend({},e,s);return this.each((function(){i.sbyCheckVisibility(t(this),n)}))}}(jQuery),"function"==typeof e(this.el).filter(":hidden").sbyVisibilityChanged&&e(this.el).filter(":hidden").sbyVisibilityChanged({callback:function(e,i){t.afterResize()},runOnLoad:!1})},getColumnCount:function(){var t=e(this.el),i=this.settings.cols,s=this.settings.colsmobile,n=i;return sbyWindowWidth=window.innerWidth,t.hasClass("sby_mob_col_auto")?(sbyWindowWidth<640&&parseInt(i)>2&&parseInt(i)<7&&(n=2),sbyWindowWidth<640&&parseInt(i)>6&&parseInt(i)<11&&(n=4),sbyWindowWidth<=480&&parseInt(i)>2&&(n=1)):sbyWindowWidth<=480&&(n=s),parseInt(n)},onThumbnailClick:function(t,i,s){if(this.canCreatePlayer()){var n=e(this.el);if(n.hasClass("sby_layout_gallery"))if(n.find(".sby_current").removeClass("sby_current"),t.closest(".sby_item").addClass("sby_current"),t.closest(".sby_item").addClass("sby_current"),n.addClass("sby_player_added").find(".sby_player_outer_wrap").addClass("sby_player_loading"),n.find(".sby_player_outer_wrap .sby_video_thumbnail").find(".sby_loader").show().removeClass("sby_hidden"),n.find(".sby_player_outer_wrap iframe").length)i?(s=void 0===s?this.getVideoID(n.find(".sby_item").first()):s,this.playVideoInPlayer(s)):(s=void 0===s?this.getVideoID(t.closest(".sby_item")):s,this.changePlayerInfo(t.closest(".sby_item")),this.playVideoInPlayer(s),this.afterVideoChanged());else if(i)this.createPlayer("sby_player"+this.index);else{s=void 0===s?this.getVideoID(t.closest(".sby_item")):s;this.createPlayer("sby_player"+this.index,s)}else if(e(this.el).hasClass("sby_layout_grid")||e(this.el).hasClass("sby_layout_carousel")){var a=t.closest(".sby_item");s=void 0===s?this.getVideoID(a):s,this.playVideoInPlayer(s),this.afterVideoChanged()}else e(this.el).hasClass("sby_layout_list")&&(a=t.closest(".sby_item"),s=void 0===s?this.getVideoID(a):s,a.length&&!a.find("iframe").length?(a.find(".sby_loader").show().removeClass("sby_hidden"),a.addClass("sby_player_loading sby_player_loaded"),this.createPlayer("sby_player_"+s,s)):(this.playVideoInPlayer(s,a.attr("data-video-id")),this.afterVideoChanged()))}},onThumbnailEnter:function(t){if(this.canCreatePlayer()&&e(this.el).hasClass("sby_layout_list")){var i=t.closest(".sby_item"),s=this.getVideoID(i);i.find("iframe").length||(i.find(".sby_loader").show().removeClass("sby_hidden"),i.addClass("sby_player_loading sby_player_loaded"),this.createPlayer("sby_player_"+s,s,0))}},onThumbnailLeave:function(t){},changePlayerInfo:function(t){},playerEagerLoaded:function(){if(void 0!==this.player||e(this.el).hasClass("sby_player_loaded"))return!0},canCreatePlayer:function(){return!e(this.el).find("#sby_blank").length&&(this.playerEagerLoaded()||this.playerAPIReady&&this.settings.consentGiven||window.sbyAPIReady&&this.settings.consentGiven)},playVideoInPlayer:function(t,e){void 0!==this.player&&void 0!==this.player.loadVideoById?this.player.loadVideoById(t):void 0!==window.sbyLightboxPlayer&&void 0!==window.sbyLightboxPlayer.loadVideoById?window.sbyLightboxPlayer.loadVideoById(t):void 0!==e&&void 0!==this.players&&void 0!==this.players[e]&&void 0!==this.players[e].loadVideoById&&this.players[e].loadVideoById(t)},afterVideoChanged:function(){e(this.el).hasClass("sby_layout_gallery")&&(e(this.el).find(".sby_player_outer_wrap").removeClass("sby_player_loading"),e(this.el).find(".sby_player_outer_wrap .sby_video_thumbnail").find(".sby_loader").hide().addClass("sby_hidden"),e(window).width()<480&&e("html, body").animate({scrollTop:e(this.el).find(".sby_player_outer_wrap").offset().top},300))},checkConsent:function(){if(this.settings.consentGiven||!this.settings.gdpr)return this.settings.noCDN=!1,!0;if("undefined"!=typeof CLI_Cookie)null!==CLI_Cookie.read(CLI_ACCEPT_COOKIE_NAME)&&("null"!==CLI_Cookie.read("cookielawinfo-checkbox-non-necessary")&&(this.settings.consentGiven="yes"===CLI_Cookie.read("cookielawinfo-checkbox-non-necessary")),"null"!==CLI_Cookie.read("cookielawinfo-checkbox-necessary")&&(this.settings.consentGiven="yes"===CLI_Cookie.read("cookielawinfo-checkbox-necessary")));else if(void 0!==window.cnArgs){var t=("; "+document.cookie).split("; cookie_notice_accepted=");if(2===t.length){var e=t.pop().split(";").shift();this.settings.consentGiven="true"===e}}else void 0!==window.cookieconsent?this.settings.consentGiven="allow"===function(t){for(var e="cmplz_consent_status=",i=window.document.cookie.split(";"),s=0;s<i.length;s++){var n=i[s].trim();if(0==n.indexOf(e))return n.substring(e.length,n.length)}return""}()||jQuery("body").hasClass("cmplz-status-marketing"):void 0!==window.Cookiebot?this.settings.consentGiven=Cookiebot.consented:void 0!==window.BorlabsCookie&&(this.settings.consentGiven=window.BorlabsCookie.checkCookieConsent("youtube"));var i=jQuery.Event("sbycheckconsent");return i.feed=this,jQuery(window).trigger(i),this.settings.consentGiven&&(this.settings.noCDN=!1),this.settings.consentGiven},afterConsentToggled:function(){if(this.checkConsent()){var t=this;window.sby.maybeAddYTAPI(),t.maybeRaiseImageResolution(),t.applyFullFeatures(),setTimeout((function(){t.afterResize()}),500)}},removeFeatures:function(){this.settings.noCDN&&e(this.el).find(".sby_video_thumbnail").each((function(){e(this).removeAttr("data-sby-lightbox")}))},applyFullFeatures:function(){var t=this;e(t.el).find(".sby_header_img img").attr("src",e(t.el).find(".sby_header_img").attr("data-avatar-url")),void 0===e(t.el).find(".sby_video_thumbnail").first().attr("data-sby-lightbox")&&t.settings.lightboxEnabled&&e(t.el).find(".sby_video_thumbnail").each((function(){e(this).attr("data-sby-lightbox",t.index)}));var i=e(t.el);if(i.find(".sby_no_consent").removeClass("sby_no_consent"),i.hasClass("sby_layout_gallery")&&i.find(".sby_player_outer_wrap").length){if(this.maybeRaiseSingleImageResolution(i.find(".sby_player_outer_wrap"),0,!0),i.find(".sby_item").first().addClass("sby_current"),!t.canCreatePlayer())return;i.find(".sby_player_outer_wrap iframe").length||t.createPlayer("sby_player"+t.index)}},locationGuess:function(){var t=e(this.el),i="content";return t.closest("footer").length?i="footer":t.closest(".header").length||t.closest("header").length?i="header":(t.closest(".sidebar").length||t.closest("aside").length)&&(i="sidebar"),i}},n.prototype=Object.create(s.prototype),a.prototype={getData:function(t){return{feedIndex:parseInt(t.closest(".sb_youtube").attr("data-sby-index")-1),link:t.attr("href"),videoTitle:void 0!==t.attr("data-video-title")?t.attr("data-video-title"):"YouTube Video",video:t.attr("data-video-id")}},template:function(){return"<div id='sby_lightboxOverlay' class='sby_lightboxOverlay'></div><div id='sby_lightbox' class='sby_lightbox'><div class='sby_lb-outerContainer'><div class='sby_lb-container'><img class='sby_lb-image' alt='Lightbox image placeholder' src='' /><div class='sby_lb-player sby_lb-player-placeholder' id='sby_lb-player'></div><div class='sby_lb-nav'><a class='sby_lb-prev' href='#' ><p class='sby-screenreader'>Previous Slide</p><span></span></a><a class='sby_lb-next' href='#' ><p class='sby-screenreader'>Next Slide</p><span></span></a></div><div class='sby_lb-loader'><a class='sby_lb-cancel'></a></div></div></div><div class='sby_lb-dataContainer'><div class='sby_lb-data'><div class='sby_lb-details'><div class='sby_lb-caption'></div><div class='sby_lb-info'><div class='sby_lb-number'></div></div></div><div class='sby_lb-closeContainer'><a class='sby_lb-close'></a></div></div></div></div>"},beforePlayerSetup:function(t,e,i,s,n){},afterPlayerSetup:function(t,e,i,s){},afterResize:function(){var t=e("#sby_lightbox .sby_lb-player").height();if(t>100){var i=e("#sby_lightbox .sby_lb-outerContainer").height()-t;i>10&&e("#sby_lightbox .sby_lb-player").css("top",i/2)}},pausePlayer:function(){void 0===window.sbyLightboxPlayer&&"undefined"==typeof YT||(void 0!==YT.get("sby_lb-player")&&"function"==typeof YT.get("sby_lb-player").pauseVideo?YT.get("sby_lb-player").pauseVideo():void 0!==window.sbyLightboxPlayer&&"function"==typeof window.sbyLightboxPlayer.pauseVideo&&window.sbyLightboxPlayer.pauseVideo())}},o.prototype=Object.create(a.prototype),r.prototype={toggleCTA:function(t,i,s){this.$player=s.length?s:e(".sby_lb-container"),this.state=i,this.videoID=t,this.isInitialized=!0,this.resetCTA(),void 0!==window.sby.ctas[t]&&(this.callbackArgs=window.sby.ctas[t]);var n=this.callbackArgs.callback;if("link"===n)this.callback=this.link;else{if("related"!==n)return;this.callback=this.related}2===i||0===i?(this.$player.find(".sby_cta_items_wraps").addClass("sby_cta_is_open"),2===i?this.$player.find(".sby_cta_items_wraps").addClass("sby_cta_state_paused"):this.$player.find(".sby_cta_items_wraps").addClass("sby_cta_state_ended"),this.$player.find(".sby_cta_items_wraps").show(),this.callback(),this.setCTAStyles()):(this.$player.find(".sby_cta_items_wraps").removeClass("sby_cta_is_open"),this.$player.find(".sby_cta_items_wraps").hide().removeClass("sby_cta_state_paused").removeClass("sby_cta_state_ended").removeClass("sby_cta_is_open"))},related:function(t){var i=this,s=this.feedObjInContext,n=window.sby.shuffle(this.getRelated(s)),a=0,o=this.videoID,r=this.$player;this.$player.find(".sby_cta_items_wraps").removeClass("sby_cta_cols_"+this.numItemColumns),this.numItems=4,this.numItemColumns=2,r.width()<480&&(this.numItems=1,this.numItemColumns=1);var l=this.numItems;e.each(n,(function(t,e){e.videoID!==o&&a<l&&(r.find(".sby_cta_items_wraps .sby_cta_inner_wrap").append('<div class="sby_cta_item"><div class="sby_video_thumbnail_wrap"><a class="sby_video_thumbnail" href="javascript:void(0);" target="_blank" rel="noopener" data-video-id="'+e.videoID+'"><div class="sby_thumbnail_hover"><div class="sby_thumbnail_hover_inner"><span class="sby_video_title">'+e.title+'</span></div></div><span class="sby-screenreader">Play</span><img src="'+e.thumbnail+'" alt="'+e.title+'"><span class="sby_loader sby_hidden" style="background-color: rgb(255, 255, 255);"></span></a></div></div>'),a++)})),r.find(".sby_cta_items_wraps .sby_video_thumbnail").each((function(){e(this).off().on("click",(function(t){t.preventDefault();var n=e(this).attr("data-video-id");s.onThumbnailClick(e(this),!0,n),i.videoID=n}))}))},getRelated:function(t){if(void 0===t.settings.general.cta.defaultPosts[0]){var i=e(t.el),s=[];return i.find(".sby_item").each((function(){if(void 0!==e(this).find(".sby_item_video_thumbnail").attr("data-full-res")){var t={videoID:e(this).attr("data-video-id"),title:e(this).attr("data-video-title"),thumbnail:e(this).find(".sby_item_video_thumbnail").attr("data-full-res")};s.push(t)}})),s}return t.settings.general.cta.defaultPosts},link:function(t){var e=this.$player,i=this.feedObjInContext;this.$player.find(".sby_cta_items_wraps").removeClass("sby_cta_cols_"+this.numItemColumns),this.numItems=1,this.numItemColumns=1;var s="",n="";""===i.settings.general.cta.color&&""===i.settings.general.cta.textColor||(s=' style="',n=" sby_custom",""!==i.settings.general.cta.color&&(s+="background: rgb("+i.settings.general.cta.color+");"),""!==i.settings.general.cta.textColor&&(s+="color: rgb("+i.settings.general.cta.textColor+");"),s+='"');var a="";"newwindow"===i.settings.general.cta.openType&&(a=' target="_blank" rel="noopener"'),e.find(".sby_cta_items_wraps .sby_cta_inner_wrap").append('<div class="sby_cta_item"><div class="sby_btn_wrap"><div class="sby_btn'+n+'"><a class="sby_cta_button" href="'+this.callbackArgs.url+'"'+a+' data-video-id="'+this.videoID+'"'+s+">"+this.callbackArgs.text+"</a></div></div></div>")},setCTAStyles:function(){var t=Math.max(90,this.$player.height()-60-49);this.$player.find(".sby_cta_items_wraps").css("height",t+"px").css("width",this.$player.find("iframe").width()-20+"px").addClass("sby_cta_cols_"+this.numItemColumns);var e=Math.max(1,this.numItems/this.numItemColumns),i=2*parseInt(this.$player.find(".sby_cta_items_wraps").css("padding-top").replace("px","")),s=Math.max(90,(t-i)/e);this.$player.find(".sby_cta_item").css("max-height",s+"px").find("img").css({"max-height":s+"px",width:"auto",margin:"auto"}),this.$player.find(".sby_btn_wrap").css("height",s+"px")},resetCTA:function(){this.$player.find(".sby_cta_items_wraps .sby_cta_inner_wrap").empty()}},window.sby_init=function(){window.sby=new i,window.sby.createPage(window.sby.createFeeds,{whenFeedsCreated:window.sby.afterFeedsCreated})},window.sby_carousel_init=function(){console.log("log")}}(jQuery),void 0===window.sbyEagerLoading){if(window.sbyEagerLoading=void 0!==window.sbyOptions&&window.sbyOptions.eagerload,jQuery(".elementor-widget-video").length){var c=void 0!==jQuery(".elementor-widget-video").attr("data-settings")&&JSON.parse(jQuery(".elementor-widget-video").attr("data-settings"));c&&void 0!==c.youtube_url&&(window.sbyEagerLoading=!0)}jQuery("div[data-vc-video-bg]").length&&(window.sbyEagerLoading=!0)}void 0===window.sbySemiEagerLoading&&(window.sbySemiEagerLoading=void 0!==window.sbyOptions&&window.sbyOptions.semiEagerload,(jQuery("div[data-vc-video-bg]").length||window.sbyEagerLoading)&&(window.sbySemiEagerLoading=!1)),jQuery(document).ready((function(t){window.sbySemiEagerLoading||sby_init(),t("#cookie-notice a").on("click",(function(){setTimeout((function(){t.each(window.sby.feeds,(function(t){window.sby.feeds[t].afterConsentToggled()}))}),1e3)})),t("#cookie-law-info-bar a").on("click",(function(){setTimeout((function(){t.each(window.sby.feeds,(function(t){window.sby.feeds[t].afterConsentToggled()}))}),1e3)})),t(".cli-user-preference-checkbox").on("click",(function(){setTimeout((function(){t.each(window.sby.feeds,(function(t){window.sby.feeds[t].settings.consentGiven=!1,window.sby.feeds[t].afterConsentToggled()}))}),1e3)})),t(window).on("CookiebotOnAccept",(function(e){t.each(window.sby.feeds,(function(t){window.sby.feeds[t].settings.consentGiven=!0,window.sby.feeds[t].afterConsentToggled()}))})),t(document).on("cmplzEnableScripts",(function(e){"marketing"===e.detail&&t.each(window.sby.feeds,(function(t){window.sby.feeds[t].settings.consentGiven=!0,window.sby.feeds[t].afterConsentToggled()}))})),t(document).on("cmplzFireCategories",(function(e){"marketing"===e.detail.category&&t.each(window.sby.feeds,(function(t){window.sby.feeds[t].settings.consentGiven=!0,window.sby.feeds[t].afterConsentToggled()}))})),t(document).on("borlabs-cookie-consent-saved",(function(e){t.each(window.sby.feeds,(function(t){window.sby.feeds[t].settings.consentGiven=!1,window.sby.feeds[t].afterConsentToggled()}))}))}))}if(window.sbySemiEagerLoading){var u="sby-youtube-api";if(null===document.getElementById(u)){var y=document.createElement("script"),g=document.getElementsByTagName("script")[0];y.src="https://www.youtube.com/iframe_api",y.id=u,g.parentNode.insertBefore(y,g)}}window.onYouTubeIframeAPIReady=function(){var t=document.getElementsByClassName("sb_youtube").length;if(t>0){if(window.sbySemiEagerLoading){if(void 0!==window.sby)for(var e=0;e<t;e++)window.sby.feeds[e].playerAPIReady=!0;else window.sbyAPIReady=!0;sby_init()}else if(window.sbyEagerLoading){var i=!1,s=!1;jQuery(".sb_youtube").each((function(t){var e=jQuery(this);e.hasClass("sby_layout_list")?(jQuery(this).addClass("sby_player_loaded"),e.find(".sby_item").each((function(){videoID=jQuery(this).attr("data-video-id"),player=new YT.Player("sby_player_"+videoID,{height:"100",width:"100",videoId:videoID,playerVars:{modestbranding:1,rel:0,autoplay:s},events:{onStateChange:function(t){t.target.getVideoData().video_id,1===t.data&&e.find(".sby_item").each((function(){var e=jQuery(this).attr("data-video-id");jQuery(this).find("iframe").length&&jQuery(t.target.a).attr("id")!==jQuery(this).find("iframe").attr("id")&&YT.get("sby_player_"+e).pauseVideo()}))}}})}))):e.hasClass("sby_layout_gallery")?(jQuery(this).addClass("sby_player_loaded"),player=new YT.Player("sby_player"+t,{height:"100",width:"100",videoId:jQuery(this).find(".sby_item").first().attr("data-video-id"),playerVars:{modestbranding:1,rel:0,autoplay:s},events:{onStateChange:function(t){t.target.getVideoData().video_id,1===t.data&&e.find(".sby_item").each((function(){var e=jQuery(this).attr("data-video-id");jQuery(this).find("iframe").length&&jQuery(t.target.a).attr("id")!==jQuery(this).find("iframe").attr("id")&&YT.get("sby_player_"+e).pauseVideo()}))}}})):i=!0}))}else if(void 0!==window.sby)for(e=0;e<t;e++)window.sby.feeds[e].playerAPIReady=!0;else window.sbyAPIReady=!0;jQuery(".sb_youtube").each((function(t){var e=jQuery(this);e.find(".sby_live_player").length&&(player=new YT.Player(e.find(".sby_live_player").attr("id"),{events:{onReady:function(){e.find(".sby_live_player").hide(),e.find(".sby_item").remove();var i=YT.get(e.find(".sby_live_player").attr("id")).getVideoData().video_id;e.find(".sby_player_video_thumbnail").attr("data-video-id",i).css("z-index",-1),e.find(".sby_item").length;var s={action:"sby_live_retrieve",video_id:i,feed_id:e.attr("data-feedid"),atts:e.attr("data-shortcode-atts")};jQuery.ajax({url:sbyOptions.adminAjaxUrl,type:"post",data:s,success:function(i){if(0===i.trim().indexOf("{")){var s=window.sby.feeds[t],n=JSON.parse(i),a=void 0!==n.feedStatus.checkWPPosts&&n.feedStatus.checkWPPosts;s.settings.debugEnabled&&console.log(n),s.settings.checkWPPosts=!!a,s.appendNewPosts(n.html),s.addResizedImages(n.resizedImages),s.afterInitialImagesLoaded(),n.feedStatus.shouldPaginate?s.outOfPages=!1:(s.outOfPages=!0,e.find(".sby_load_btn").hide()),jQuery(".sby_no_js").removeClass("sby_no_js"),e.find(".sby_live_player").remove(),e.hasClass("sby_layout_gallery")&&s.createPlayer("sby_player"+s.index),e.find(".sby_player_item").css("opacity",1),e.find(".sby_item").css("opacity",1),e.find(".sby_player_loading").removeClass("sby_player_loading"),e.hasClass("sby_layout_list")&&e.find(".sby_item_video_thumbnail").on("mouseenter",(function(){jQuery(this).css("z-index",-1)}))}}})}}}))})),i&&(jQuery("#sby_lb-player").length||jQuery(".sb_youtube").first().append('<div class="sby_lb-player-loaded sby_lb-player" id="sby_lb-player" style="display: none;"></div>'),player=new YT.Player("sby_lb-player",{height:"100",width:"100",videoId:jQuery(this).find(".sby_item").first().attr("data-video-id"),playerVars:{modestbranding:1,rel:0,autoplay:s}}),window.sbyLightboxPlayer=player)}if(void 0!==window.sby){var n=jQuery.Event("sbyfeedandytready");jQuery(window).trigger(n)}}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFlOE4sUUFBUXJTLE9BQU8sb0dBRXpDa2lCLE9BQVMsSUFBSWhQLEdBQUdDLE9BQU8sZ0JBQWlCLENBQ3BDckssT0FBUSxNQUNScEwsTUFBTyxNQUNQZ1YsUUFBU25PLE9BQU9sTSxNQUFNd0gsS0FBSyxhQUFhd1MsUUFBUTVSLEtBQUssaUJBQ3JEa1MsV0FBWSxDQUNSQyxlQUFnQixFQUNoQkMsSUFBSyxFQUNMMUgsU0FBVUEsS0FHbEJuVixPQUFPc2Msa0JBQW9CNFAsUUFLbkMsUUFBMEIsSUFBZmxzQixPQUFPMGEsSUFBcUIsQ0FDbkMsSUFBSXNCLEVBQU16TixPQUFPL0csTUFBTSxxQkFDdkIrRyxPQUFPdk8sUUFBUTBKLFFBQVFzUyIsInNvdXJjZXMiOlsid2VicGFjazovL3lvdXR1YmUtZmVlZC1wcm8vLi9qcy9zYi15b3V0dWJlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBzYnlfanNfZXhpc3RzID0gKHR5cGVvZiBzYnlfanNfZXhpc3RzICE9PSAndW5kZWZpbmVkJykgPyB0cnVlIDogZmFsc2U7XG5pZighc2J5X2pzX2V4aXN0cykge1xuXG4gICAgZnVuY3Rpb24gc2J5QWRkSW1nTGlxdWlkKCkge1xuICAgICAgICAvKiEgaW1nTGlxdWlkIHYwLjkuOTQ0IC8gMDMtMDUtMjAxMyBodHRwczovL2dpdGh1Yi5jb20va2FyYWNhcy9pbWdMaXF1aWQgKi9cbiAgICAgICAgdmFyIHNieV9pbWdMaXF1aWQgPSBzYnlfaW1nTGlxdWlkIHx8IHtWRVI6IFwiMC45Ljk0NFwifTtcbiAgICAgICAgc2J5X2ltZ0xpcXVpZC5iZ3NfQXZhaWxhYmxlID0gITEsIHNieV9pbWdMaXF1aWQuYmdzX0NoZWNrUnVubmVkID0gITEsIGZ1bmN0aW9uIChpKSB7XG4gICAgICAgICAgICBmdW5jdGlvbiB0KCkge1xuICAgICAgICAgICAgICAgIGlmICghc2J5X2ltZ0xpcXVpZC5iZ3NfQ2hlY2tSdW5uZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgc2J5X2ltZ0xpcXVpZC5iZ3NfQ2hlY2tSdW5uZWQgPSAhMDtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHQgPSBpKCc8c3BhbiBzdHlsZT1cImJhY2tncm91bmQtc2l6ZTpjb3ZlclwiIC8+Jyk7XG4gICAgICAgICAgICAgICAgICAgIGkoXCJib2R5XCIpLmFwcGVuZCh0KSwgIWZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpID0gdFswXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpICYmIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShpLCBudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlICYmIGUuYmFja2dyb3VuZFNpemUgJiYgKHNieV9pbWdMaXF1aWQuYmdzX0F2YWlsYWJsZSA9IFwiY292ZXJcIiA9PT0gZS5iYWNrZ3JvdW5kU2l6ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSgpLCB0LnJlbW92ZSgpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpLmZuLmV4dGVuZCh7XG4gICAgICAgICAgICAgICAgc2J5X2ltZ0xpcXVpZDogZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kZWZhdWx0cyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpbGw6ICEwLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmVydGljYWxBbGlnbjogXCJjZW50ZXJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGhvcml6b250YWxBbGlnbjogXCJjZW50ZXJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHVzZUJhY2tncm91bmRTaXplOiAhMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHVzZURhdGFIdG1sQXR0cjogITAsXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zaXZlOiAhMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlbGF5OiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgZmFkZUluVGltZTogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlbW92ZUJveEJhY2tncm91bmQ6ICEwLFxuICAgICAgICAgICAgICAgICAgICAgICAgaGFyZFBpeGVsczogITAsXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zaXZlQ2hlY2tUaW1lOiA1MDAsXG4gICAgICAgICAgICAgICAgICAgICAgICB0aW1lY2hlY2t2aXNpYmlsaXR5OiA1MDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBvblN0YXJ0OiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgb25GaW5pc2g6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkl0ZW1TdGFydDogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uSXRlbUZpbmlzaDogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uSXRlbUVycm9yOiBudWxsXG4gICAgICAgICAgICAgICAgICAgIH0sIHQoKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGEgPSB0aGlzO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5vcHRpb25zID0gZSwgdGhpcy5zZXR0aW5ncyA9IGkuZXh0ZW5kKHt9LCB0aGlzLmRlZmF1bHRzLCB0aGlzLm9wdGlvbnMpLCB0aGlzLnNldHRpbmdzLm9uU3RhcnQgJiYgdGhpcy5zZXR0aW5ncy5vblN0YXJ0KCksIHRoaXMuZWFjaChmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gZSgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAtMSA9PT0gdS5jc3MoXCJiYWNrZ3JvdW5kLWltYWdlXCIpLmluZGV4T2YoZW5jb2RlVVJJKGMuYXR0cihcInNyY1wiKSkpICYmIHUuY3NzKHtcImJhY2tncm91bmQtaW1hZ2VcIjogJ3VybChcIicgKyBlbmNvZGVVUkkoYy5hdHRyKFwic3JjXCIpKSArICdcIiknfSksIHUuY3NzKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJiYWNrZ3JvdW5kLXNpemVcIjogZy5maWxsID8gXCJjb3ZlclwiIDogXCJjb250YWluXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiYmFja2dyb3VuZC1wb3NpdGlvblwiOiAoZy5ob3Jpem9udGFsQWxpZ24gKyBcIiBcIiArIGcudmVydGljYWxBbGlnbikudG9Mb3dlckNhc2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJiYWNrZ3JvdW5kLXJlcGVhdFwiOiBcIm5vLXJlcGVhdFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksIGkoXCJhOmZpcnN0XCIsIHUpLmNzcyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IFwiYmxvY2tcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IFwiMTAwJVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksIGkoXCJpbWdcIiwgdSkuY3NzKHtkaXNwbGF5OiBcIm5vbmVcIn0pLCBnLm9uSXRlbUZpbmlzaCAmJiBnLm9uSXRlbUZpbmlzaCh0LCB1LCBjKSwgdS5hZGRDbGFzcyhcInNieV9pbWdMaXF1aWRfYmdTaXplXCIpLCB1LmFkZENsYXNzKFwic2J5X2ltZ0xpcXVpZF9yZWFkeVwiKSwgbCgpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIG8oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gZSgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYy5kYXRhKFwic2J5X2ltZ0xpcXVpZF9lcnJvclwiKSB8fCBjLmRhdGEoXCJzYnlfaW1nTGlxdWlkX2xvYWRlZFwiKSB8fCBjLmRhdGEoXCJzYnlfaW1nTGlxdWlkX29sZFByb2Nlc3NlZFwiKSB8fCAodS5pcyhcIjp2aXNpYmxlXCIpICYmIGNbMF0uY29tcGxldGUgJiYgY1swXS53aWR0aCA+IDAgJiYgY1swXS5oZWlnaHQgPiAwID8gKGMuZGF0YShcInNieV9pbWdMaXF1aWRfbG9hZGVkXCIsICEwKSwgc2V0VGltZW91dChyLCB0ICogZy5kZWxheSkpIDogc2V0VGltZW91dChlLCBnLnRpbWVjaGVja3Zpc2liaWxpdHkpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjLmRhdGEoXCJvbGRTcmNcIikgJiYgYy5kYXRhKFwib2xkU3JjXCIpICE9PSBjLmF0dHIoXCJzcmNcIikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGEgPSBjLmNsb25lKCkucmVtb3ZlQXR0cihcInN0eWxlXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYS5kYXRhKFwic2J5X2ltZ0xpcXVpZF9zZXR0aW5nc1wiLCBjLmRhdGEoXCJzYnlfaW1nTGlxdWlkX3NldHRpbmdzXCIpKSwgYy5wYXJlbnQoKS5wcmVwZW5kKGEpLCBjLnJlbW92ZSgpLCBjID0gYSwgY1swXS53aWR0aCA9IDAsIHZvaWQgc2V0VGltZW91dChvLCAxMClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGMuZGF0YShcInNieV9pbWdMaXF1aWRfb2xkUHJvY2Vzc2VkXCIpID8gdm9pZCByKCkgOiAoYy5kYXRhKFwic2J5X2ltZ0xpcXVpZF9vbGRQcm9jZXNzZWRcIiwgITEpLCBjLmRhdGEoXCJvbGRTcmNcIiwgYy5hdHRyKFwic3JjXCIpKSwgaShcImltZzpub3QoOmZpcnN0KVwiLCB1KS5jc3MoXCJkaXNwbGF5XCIsIFwibm9uZVwiKSwgdS5jc3Moe292ZXJmbG93OiBcImhpZGRlblwifSksIGMuZmFkZVRvKDAsIDApLnJlbW92ZUF0dHIoXCJ3aWR0aFwiKS5yZW1vdmVBdHRyKFwiaGVpZ2h0XCIpLmNzcyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpc2liaWxpdHk6IFwidmlzaWJsZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIm1heC13aWR0aFwiOiBcIm5vbmVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJtYXgtaGVpZ2h0XCI6IFwibm9uZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogXCJhdXRvXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogXCJhdXRvXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IFwiYmxvY2tcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLCBjLm9uKFwiZXJyb3JcIiwgbiksIGNbMF0ub25lcnJvciA9IG4sIGUoKSwgdm9pZCBkKCkpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGQoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKGcucmVzcG9uc2l2ZSB8fCBjLmRhdGEoXCJzYnlfaW1nTGlxdWlkX29sZFByb2Nlc3NlZFwiKSkgJiYgYy5kYXRhKFwic2J5X2ltZ0xpcXVpZF9zZXR0aW5nc1wiKSAmJiAoZyA9IGMuZGF0YShcInNieV9pbWdMaXF1aWRfc2V0dGluZ3NcIiksIHUuYWN0dWFsU2l6ZSA9IHUuZ2V0KDApLm9mZnNldFdpZHRoICsgdS5nZXQoMCkub2Zmc2V0SGVpZ2h0IC8gMWU0LCB1LnNpemVPbGQgJiYgdS5hY3R1YWxTaXplICE9PSB1LnNpemVPbGQgJiYgcigpLCB1LnNpemVPbGQgPSB1LmFjdHVhbFNpemUsIHNldFRpbWVvdXQoZCwgZy5yZXNwb25zaXZlQ2hlY2tUaW1lKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjLmRhdGEoXCJzYnlfaW1nTGlxdWlkX2Vycm9yXCIsICEwKSwgdS5hZGRDbGFzcyhcInNieV9pbWdMaXF1aWRfZXJyb3JcIiksIGcub25JdGVtRXJyb3IgJiYgZy5vbkl0ZW1FcnJvcih0LCB1LCBjKSwgbCgpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHMoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGkgPSB7fTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYS5zZXR0aW5ncy51c2VEYXRhSHRtbEF0dHIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHQgPSB1LmF0dHIoXCJkYXRhLXNieV9pbWdMaXF1aWQtZmlsbFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlID0gdS5hdHRyKFwiZGF0YS1zYnlfaW1nTGlxdWlkLWhvcml6b250YWxBbGlnblwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvID0gdS5hdHRyKFwiZGF0YS1zYnlfaW1nTGlxdWlkLXZlcnRpY2FsQWxpZ25cIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChcInRydWVcIiA9PT0gdCB8fCBcImZhbHNlXCIgPT09IHQpICYmIChpLmZpbGwgPSBCb29sZWFuKFwidHJ1ZVwiID09PSB0KSksIHZvaWQgMCA9PT0gZSB8fCBcImxlZnRcIiAhPT0gZSAmJiBcImNlbnRlclwiICE9PSBlICYmIFwicmlnaHRcIiAhPT0gZSAmJiAtMSA9PT0gZS5pbmRleE9mKFwiJVwiKSB8fCAoaS5ob3Jpem9udGFsQWxpZ24gPSBlKSwgdm9pZCAwID09PSBvIHx8IFwidG9wXCIgIT09IG8gJiYgXCJib3R0b21cIiAhPT0gbyAmJiBcImNlbnRlclwiICE9PSBvICYmIC0xID09PSBvLmluZGV4T2YoXCIlXCIpIHx8IChpLnZlcnRpY2FsQWxpZ24gPSBvKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2J5X2ltZ0xpcXVpZC5pc0lFICYmIGEuc2V0dGluZ3MuaWVGYWRlSW5EaXNhYmxlZCAmJiAoaS5mYWRlSW5UaW1lID0gMCksIGlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gcigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaSwgZSwgYSwgbywgZCwgbiwgcywgciwgbSA9IDAsIGggPSAwLCBmID0gdS53aWR0aCgpLCB2ID0gdS5oZWlnaHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2b2lkIDAgPT09IGMuZGF0YShcIm93aWR0aFwiKSAmJiBjLmRhdGEoXCJvd2lkdGhcIiwgY1swXS53aWR0aCksIHZvaWQgMCA9PT0gYy5kYXRhKFwib2hlaWdodFwiKSAmJiBjLmRhdGEoXCJvaGVpZ2h0XCIsIGNbMF0uaGVpZ2h0KSwgZy5maWxsID09PSBmIC8gdiA+PSBjLmRhdGEoXCJvd2lkdGhcIikgLyBjLmRhdGEoXCJvaGVpZ2h0XCIpID8gKGkgPSBcIjEwMCVcIiwgZSA9IFwiYXV0b1wiLCBhID0gTWF0aC5mbG9vcihmKSwgbyA9IE1hdGguZmxvb3IoZiAqIChjLmRhdGEoXCJvaGVpZ2h0XCIpIC8gYy5kYXRhKFwib3dpZHRoXCIpKSkpIDogKGkgPSBcImF1dG9cIiwgZSA9IFwiMTAwJVwiLCBhID0gTWF0aC5mbG9vcih2ICogKGMuZGF0YShcIm93aWR0aFwiKSAvIGMuZGF0YShcIm9oZWlnaHRcIikpKSwgbyA9IE1hdGguZmxvb3IodikpLCBkID0gZy5ob3Jpem9udGFsQWxpZ24udG9Mb3dlckNhc2UoKSwgcyA9IGYgLSBhLCBcImxlZnRcIiA9PT0gZCAmJiAoaCA9IDApLCBcImNlbnRlclwiID09PSBkICYmIChoID0gLjUgKiBzKSwgXCJyaWdodFwiID09PSBkICYmIChoID0gcyksIC0xICE9PSBkLmluZGV4T2YoXCIlXCIpICYmIChkID0gcGFyc2VJbnQoZC5yZXBsYWNlKFwiJVwiLCBcIlwiKSwgMTApLCBkID4gMCAmJiAoaCA9IHMgKiBkICogLjAxKSksIG4gPSBnLnZlcnRpY2FsQWxpZ24udG9Mb3dlckNhc2UoKSwgciA9IHYgLSBvLCBcImxlZnRcIiA9PT0gbiAmJiAobSA9IDApLCBcImNlbnRlclwiID09PSBuICYmIChtID0gLjUgKiByKSwgXCJib3R0b21cIiA9PT0gbiAmJiAobSA9IHIpLCAtMSAhPT0gbi5pbmRleE9mKFwiJVwiKSAmJiAobiA9IHBhcnNlSW50KG4ucmVwbGFjZShcIiVcIiwgXCJcIiksIDEwKSwgbiA+IDAgJiYgKG0gPSByICogbiAqIC4wMSkpLCBnLmhhcmRQaXhlbHMgJiYgKGkgPSBhLCBlID0gbyksIGMuY3NzKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IGksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJtYXJnaW4tbGVmdFwiOiBNYXRoLmZsb29yKGgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIm1hcmdpbi10b3BcIjogTWF0aC5mbG9vcihtKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLCBjLmRhdGEoXCJzYnlfaW1nTGlxdWlkX29sZFByb2Nlc3NlZFwiKSB8fCAoYy5mYWRlVG8oZy5mYWRlSW5UaW1lLCAxKSwgYy5kYXRhKFwic2J5X2ltZ0xpcXVpZF9vbGRQcm9jZXNzZWRcIiwgITApLCBnLnJlbW92ZUJveEJhY2tncm91bmQgJiYgdS5jc3MoXCJiYWNrZ3JvdW5kLWltYWdlXCIsIFwibm9uZVwiKSwgdS5hZGRDbGFzcyhcInNieV9pbWdMaXF1aWRfbm9iZ1NpemVcIiksIHUuYWRkQ2xhc3MoXCJzYnlfaW1nTGlxdWlkX3JlYWR5XCIpKSwgZy5vbkl0ZW1GaW5pc2ggJiYgZy5vbkl0ZW1GaW5pc2godCwgdSwgYyksIGwoKVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiBsKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHQgPT09IGEubGVuZ3RoIC0gMSAmJiBhLnNldHRpbmdzLm9uRmluaXNoICYmIGEuc2V0dGluZ3Mub25GaW5pc2goKVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZyA9IGEuc2V0dGluZ3MsIHUgPSBpKHRoaXMpLCBjID0gaShcImltZzpmaXJzdFwiLCB1KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjLmxlbmd0aCA/IChjLmRhdGEoXCJzYnlfaW1nTGlxdWlkX3NldHRpbmdzXCIpID8gKHUucmVtb3ZlQ2xhc3MoXCJzYnlfaW1nTGlxdWlkX2Vycm9yXCIpLnJlbW92ZUNsYXNzKFwic2J5X2ltZ0xpcXVpZF9yZWFkeVwiKSwgZyA9IGkuZXh0ZW5kKHt9LCBjLmRhdGEoXCJzYnlfaW1nTGlxdWlkX3NldHRpbmdzXCIpLCBhLm9wdGlvbnMpKSA6IGcgPSBpLmV4dGVuZCh7fSwgYS5zZXR0aW5ncywgcygpKSwgYy5kYXRhKFwic2J5X2ltZ0xpcXVpZF9zZXR0aW5nc1wiLCBnKSwgZy5vbkl0ZW1TdGFydCAmJiBnLm9uSXRlbVN0YXJ0KHQsIHUsIGMpLCB2b2lkIChzYnlfaW1nTGlxdWlkLmJnc19BdmFpbGFibGUgJiYgZy51c2VCYWNrZ3JvdW5kU2l6ZSA/IGUoKSA6IG8oKSkpIDogdm9pZCBuKClcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KGpRdWVyeSk7XG5cbiAgICAgICAgLy8gVXNlIGltYWdlZmlsbCB0byBzZXQgdGhlIGltYWdlcyBhcyBiYWNrZ3JvdW5kcyBzbyB0aGV5IGNhbiBiZSBzcXVhcmVcbiAgICAgICAgIWZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBjc3MgPSBzYnlfaW1nTGlxdWlkLmluamVjdENzcyxcbiAgICAgICAgICAgICAgaGVhZCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF0sXG4gICAgICAgICAgICAgIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgICAgICAgICAgIHN0eWxlLnR5cGUgPSAndGV4dC9jc3MnO1xuICAgICAgICAgICAgaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICAgICAgICAgICAgICBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaGVhZC5hcHBlbmRDaGlsZChzdHlsZSk7XG4gICAgICAgIH0oKTtcbiAgICB9XG5cbiAgICAvKiBKYXZhU2NyaXB0IExpbmtpZnkgLSB2MC4zIC0gNi8yNy8yMDA5IC0gaHR0cDovL2JlbmFsbWFuLmNvbS9wcm9qZWN0cy9qYXZhc2NyaXB0LWxpbmtpZnkvICovXG4gICAgd2luZG93LnNieUxpbmtpZnkgPSAoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgayA9IFwiW2EtelxcXFxkLi1dKzovL1wiLFxuICAgICAgICAgIGggPSBcIig/Oig/OlswLTldfFsxLTldXFxcXGR8MVxcXFxkezJ9fDJbMC00XVxcXFxkfDI1WzAtNV0pXFxcXC4pezN9KD86WzAtOV18WzEtOV1cXFxcZHwxXFxcXGR7Mn18MlswLTRdXFxcXGR8MjVbMC01XSlcIixcbiAgICAgICAgICBjID0gXCIoPzooPzpbXlxcXFxzIUAjJCVeJiooKV89K1tcXFxcXXt9XFxcXFxcXFx8OzonXFxcIiwuPD4vP10rKVxcXFwuKStcIixcbiAgICAgICAgICBuID0gXCIoPzphY3xhZHxhZXJvfGFlfGFmfGFnfGFpfGFsfGFtfGFufGFvfGFxfGFycGF8YXJ8YXNpYXxhc3xhdHxhdXxhd3xheHxhenxiYXxiYnxiZHxiZXxiZnxiZ3xiaHxiaXp8Yml8Ymp8Ym18Ym58Ym98YnJ8YnN8YnR8YnZ8Ynd8Ynl8Ynp8Y2F0fGNhfGNjfGNkfGNmfGNnfGNofGNpfGNrfGNsfGNtfGNufGNvb3B8Y29tfGNvfGNyfGN1fGN2fGN4fGN5fGN6fGRlfGRqfGRrfGRtfGRvfGR6fGVjfGVkdXxlZXxlZ3xlcnxlc3xldHxldXxmaXxmanxma3xmbXxmb3xmcnxnYXxnYnxnZHxnZXxnZnxnZ3xnaHxnaXxnbHxnbXxnbnxnb3Z8Z3B8Z3F8Z3J8Z3N8Z3R8Z3V8Z3d8Z3l8aGt8aG18aG58aHJ8aHR8aHV8aWR8aWV8aWx8aW18aW5mb3xpbnR8aW58aW98aXF8aXJ8aXN8aXR8amV8am18am9ic3xqb3xqcHxrZXxrZ3xraHxraXxrbXxrbnxrcHxrcnxrd3xreXxrenxsYXxsYnxsY3xsaXxsa3xscnxsc3xsdHxsdXxsdnxseXxtYXxtY3xtZHxtZXxtZ3xtaHxtaWx8bWt8bWx8bW18bW58bW9iaXxtb3xtcHxtcXxtcnxtc3xtdHxtdXNldW18bXV8bXZ8bXd8bXh8bXl8bXp8bmFtZXxuYXxuY3xuZXR8bmV8bmZ8bmd8bml8bmx8bm98bnB8bnJ8bnV8bnp8b218b3JnfHBhfHBlfHBmfHBnfHBofHBrfHBsfHBtfHBufHByb3xwcnxwc3xwdHxwd3xweXxxYXxyZXxyb3xyc3xydXxyd3xzYXxzYnxzY3xzZHxzZXxzZ3xzaHxzaXxzanxza3xzbHxzbXxzbnxzb3xzcnxzdHxzdXxzdnxzeXxzenx0Y3x0ZHx0ZWx8dGZ8dGd8dGh8dGp8dGt8dGx8dG18dG58dG98dHB8dHJhdmVsfHRyfHR0fHR2fHR3fHR6fHVhfHVnfHVrfHVtfHVzfHV5fHV6fHZhfHZjfHZlfHZnfHZpfHZufHZ1fHdmfHdzfHhuLS0wendtNTZkfHhuLS0xMWI1YnMzYTlhajZnfHhuLS04MGFraGJ5a25qNGZ8eG4tLTl0NGIxMXlpNWF8eG4tLWRlYmEwYWR8eG4tLWc2dzI1MWR8eG4tLWhnYms2YWo3ZjUzYmJhfHhuLS1obGNqNmF5YTllc2M3YXx4bi0tanhhbHBkbHB8eG4tLWtnYmVjaHR2fHhuLS16Y2t6YWh8eWV8eXR8eXV8emF8em18encpXCIsXG4gICAgICAgICAgZiA9IFwiKD86XCIgKyBjICsgbiArIFwifFwiICsgaCArIFwiKVwiLCBvID0gXCIoPzpbOy9dW14jPzw+XFxcXHNdKik/XCIsIGUgPSBcIig/OlxcXFw/W14jPD5cXFxcc10qKT8oPzojW148PlxcXFxzXSopP1wiLFxuICAgICAgICAgIGQgPSBcIlxcXFxiXCIgKyBrICsgXCJbXjw+XFxcXHNdK1wiLCBhID0gXCJcXFxcYlwiICsgZiArIG8gKyBlICsgXCIoPyFcXFxcdylcIiwgbSA9IFwibWFpbHRvOlwiLFxuICAgICAgICAgIGogPSBcIig/OlwiICsgbSArIFwiKT9bYS16MC05ISMkJSYnKisvPT9eX2B7fH1+LV0rKD86XFxcXC5bYS16MC05ISMkJSYnKisvPT9eX2B7fH1+LV0rKSpAXCIgKyBmICsgZSArIFwiKD8hXFxcXHcpXCIsXG4gICAgICAgICAgbCA9IG5ldyBSZWdFeHAoXCIoPzpcIiArIGQgKyBcInxcIiArIGEgKyBcInxcIiArIGogKyBcIilcIiwgXCJpZ1wiKSwgZyA9IG5ldyBSZWdFeHAoXCJeXCIgKyBrLCBcImlcIiksXG4gICAgICAgICAgYiA9IHtcIidcIjogXCJgXCIsIFwiPlwiOiBcIjxcIiwgXCIpXCI6IFwiKFwiLCBcIl1cIjogXCJbXCIsIFwifVwiOiBcIntcIiwgXCJCO1wiOiBcIkIrXCIsIFwiYjpcIjogXCJiOVwifSwgaSA9IHtcbiAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIChxLCBwKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gcCA/ICc8YSBocmVmPVwiJyArIHAgKyAnXCIgdGl0bGU9XCInICsgcCArICdcIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lclwiPicgKyBxICsgXCI8L2E+XCIgOiBxXG4gICAgICAgICAgICAgIH0sIHB1bmN0X3JlZ2V4cDogLyg/OlshPy4sOjsnXCJdfCg/OiZ8JmFtcDspKD86bHR8Z3R8cXVvdHxhcG9zfHJhcXVvfGxhcXVvfHJzYXF1b3xsc2FxdW8pOykkL1xuICAgICAgICAgIH07XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAodSwgeikge1xuICAgICAgICAgICAgeiA9IHogfHwge307XG4gICAgICAgICAgICB2YXIgdywgdiwgQSwgcCwgeCA9IFwiXCIsIHQgPSBbXSwgcywgRSwgQywgeSwgcSwgRCwgQiwgcjtcbiAgICAgICAgICAgIGZvciAodiBpbiBpKSB7XG4gICAgICAgICAgICAgICAgaWYgKHpbdl0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICB6W3ZdID0gaVt2XVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHdoaWxlICh3ID0gbC5leGVjKHUpKSB7XG4gICAgICAgICAgICAgICAgQSA9IHdbMF07XG4gICAgICAgICAgICAgICAgRSA9IGwubGFzdEluZGV4O1xuICAgICAgICAgICAgICAgIEMgPSBFIC0gQS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgaWYgKC9bXFwvOl0vLnRlc3QodS5jaGFyQXQoQyAtIDEpKSkge1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBkbyB7XG4gICAgICAgICAgICAgICAgICAgIHkgPSBBO1xuICAgICAgICAgICAgICAgICAgICByID0gQS5zdWJzdHIoLTEpO1xuICAgICAgICAgICAgICAgICAgICBCID0gYltyXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKEIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHEgPSBBLm1hdGNoKG5ldyBSZWdFeHAoXCJcXFxcXCIgKyBCICsgXCIoPyEkKVwiLCBcImdcIikpO1xuICAgICAgICAgICAgICAgICAgICAgICAgRCA9IEEubWF0Y2gobmV3IFJlZ0V4cChcIlxcXFxcIiArIHIsIFwiZ1wiKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoKHEgPyBxLmxlbmd0aCA6IDApIDwgKEQgPyBELmxlbmd0aCA6IDApKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQSA9IEEuc3Vic3RyKDAsIEEubGVuZ3RoIC0gMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgRS0tXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHoucHVuY3RfcmVnZXhwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBBID0gQS5yZXBsYWNlKHoucHVuY3RfcmVnZXhwLCBmdW5jdGlvbiAoRikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEUgLT0gRi5sZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFwiXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IHdoaWxlIChBLmxlbmd0aCAmJiBBICE9PSB5KTtcbiAgICAgICAgICAgICAgICBwID0gQTtcbiAgICAgICAgICAgICAgICBpZiAoIWcudGVzdChwKSkge1xuICAgICAgICAgICAgICAgICAgICBwID0gKHAuaW5kZXhPZihcIkBcIikgIT09IC0xID8gKCFwLmluZGV4T2YobSkgPyBcIlwiIDogbSkgOiAhcC5pbmRleE9mKFwiaXJjLlwiKSA/IFwiaXJjOi8vXCIgOiAhcC5pbmRleE9mKFwiZnRwLlwiKSA/IFwiZnRwOi8vXCIgOiBcImh0dHA6Ly9cIikgKyBwXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChzICE9IEMpIHtcbiAgICAgICAgICAgICAgICAgICAgdC5wdXNoKFt1LnNsaWNlKHMsIEMpXSk7XG4gICAgICAgICAgICAgICAgICAgIHMgPSBFXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHQucHVzaChbQSwgcF0pXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0LnB1c2goW3Uuc3Vic3RyKHMpXSk7XG4gICAgICAgICAgICBmb3IgKHYgPSAwOyB2IDwgdC5sZW5ndGg7IHYrKykge1xuICAgICAgICAgICAgICAgIHggKz0gei5jYWxsYmFjay5hcHBseSh3aW5kb3csIHRbdl0pXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4geCB8fCB1XG4gICAgICAgIH1cbiAgICB9KSgpO1xuXG4gICAgLy9DaGVja3Mgd2hldGhlciBicm93c2VyIHN1cHBvcnQgSFRNTDUgdmlkZW8gZWxlbWVudFxuICAgIGZ1bmN0aW9uIHNieV9zdXBwb3J0c192aWRlbygpIHtcbiAgICAgICAgcmV0dXJuICEhZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndmlkZW8nKS5jYW5QbGF5VHlwZTtcbiAgICB9XG5cbiAgICAvLyBDYXJvdXNlbFxuICAgICFmdW5jdGlvbiAoYSwgYiwgYywgZCkge1xuICAgICAgICBmdW5jdGlvbiBlKGIsIGMpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0dGluZ3MgPSBudWxsLCB0aGlzLm9wdGlvbnMgPSBhLmV4dGVuZCh7fSwgZS5EZWZhdWx0cywgYyksIHRoaXMuJGVsZW1lbnQgPSBhKGIpLCB0aGlzLl9oYW5kbGVycyA9IHt9LCB0aGlzLl9wbHVnaW5zID0ge30sIHRoaXMuX3N1cHJlc3MgPSB7fSwgdGhpcy5fY3VycmVudCA9IG51bGwsIHRoaXMuX3NwZWVkID0gbnVsbCwgdGhpcy5fY29vcmRpbmF0ZXMgPSBbXSwgdGhpcy5fYnJlYWtwb2ludCA9IG51bGwsIHRoaXMuX3dpZHRoID0gbnVsbCwgdGhpcy5faXRlbXMgPSBbXSwgdGhpcy5fY2xvbmVzID0gW10sIHRoaXMuX21lcmdlcnMgPSBbXSwgdGhpcy5fd2lkdGhzID0gW10sIHRoaXMuX2ludmFsaWRhdGVkID0ge30sIHRoaXMuX3BpcGUgPSBbXSwgdGhpcy5fZHJhZyA9IHtcbiAgICAgICAgICAgICAgICB0aW1lOiBudWxsLFxuICAgICAgICAgICAgICAgIHRhcmdldDogbnVsbCxcbiAgICAgICAgICAgICAgICBwb2ludGVyOiBudWxsLFxuICAgICAgICAgICAgICAgIHN0YWdlOiB7c3RhcnQ6IG51bGwsIGN1cnJlbnQ6IG51bGx9LFxuICAgICAgICAgICAgICAgIGRpcmVjdGlvbjogbnVsbFxuICAgICAgICAgICAgfSwgdGhpcy5fc3RhdGVzID0ge1xuICAgICAgICAgICAgICAgIGN1cnJlbnQ6IHt9LFxuICAgICAgICAgICAgICAgIHRhZ3M6IHtpbml0aWFsaXppbmc6IFtcImJ1c3lcIl0sIGFuaW1hdGluZzogW1wiYnVzeVwiXSwgZHJhZ2dpbmc6IFtcImludGVyYWN0aW5nXCJdfVxuICAgICAgICAgICAgfSwgYS5lYWNoKFtcIm9uUmVzaXplXCIsIFwib25UaHJvdHRsZWRSZXNpemVcIl0sIGEucHJveHkoZnVuY3Rpb24gKGIsIGMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9oYW5kbGVyc1tjXSA9IGEucHJveHkodGhpc1tjXSwgdGhpcylcbiAgICAgICAgICAgIH0sIHRoaXMpKSwgYS5lYWNoKGUuUGx1Z2lucywgYS5wcm94eShmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICAgICAgICAgIHRoaXMuX3BsdWdpbnNbYS5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKSArIGEuc2xpY2UoMSldID0gbmV3IGIodGhpcylcbiAgICAgICAgICAgIH0sIHRoaXMpKSwgYS5lYWNoKGUuV29ya2VycywgYS5wcm94eShmdW5jdGlvbiAoYiwgYykge1xuICAgICAgICAgICAgICAgIHRoaXMuX3BpcGUucHVzaCh7ZmlsdGVyOiBjLmZpbHRlciwgcnVuOiBhLnByb3h5KGMucnVuLCB0aGlzKX0pXG4gICAgICAgICAgICB9LCB0aGlzKSksIHRoaXMuc2V0dXAoKSwgdGhpcy5pbml0aWFsaXplKClcbiAgICAgICAgfVxuXG4gICAgICAgIGUuRGVmYXVsdHMgPSB7XG4gICAgICAgICAgICBpdGVtczogMyxcbiAgICAgICAgICAgIGxvb3A6ICExLFxuICAgICAgICAgICAgY2VudGVyOiAhMSxcbiAgICAgICAgICAgIHJld2luZDogITEsXG4gICAgICAgICAgICBtb3VzZURyYWc6ICEwLFxuICAgICAgICAgICAgdG91Y2hEcmFnOiAhMCxcbiAgICAgICAgICAgIHB1bGxEcmFnOiAhMCxcbiAgICAgICAgICAgIGZyZWVEcmFnOiAhMSxcbiAgICAgICAgICAgIG1hcmdpbjogMCxcbiAgICAgICAgICAgIHN0YWdlUGFkZGluZzogMCxcbiAgICAgICAgICAgIG1lcmdlOiAhMSxcbiAgICAgICAgICAgIG1lcmdlRml0OiAhMCxcbiAgICAgICAgICAgIGF1dG9XaWR0aDogITEsXG4gICAgICAgICAgICBzdGFydFBvc2l0aW9uOiAwLFxuICAgICAgICAgICAgcnRsOiAhMSxcbiAgICAgICAgICAgIHNtYXJ0U3BlZWQ6IDI1MCxcbiAgICAgICAgICAgIGZsdWlkU3BlZWQ6ICExLFxuICAgICAgICAgICAgZHJhZ0VuZFNwZWVkOiAhMSxcbiAgICAgICAgICAgIHJlc3BvbnNpdmU6IHt9LFxuICAgICAgICAgICAgcmVzcG9uc2l2ZVJlZnJlc2hSYXRlOiAyMDAsXG4gICAgICAgICAgICByZXNwb25zaXZlQmFzZUVsZW1lbnQ6IGIsXG4gICAgICAgICAgICBmYWxsYmFja0Vhc2luZzogXCJzd2luZ1wiLFxuICAgICAgICAgICAgaW5mbzogITEsXG4gICAgICAgICAgICBuZXN0ZWRJdGVtU2VsZWN0b3I6ICExLFxuICAgICAgICAgICAgaXRlbUVsZW1lbnQ6IFwiZGl2XCIsXG4gICAgICAgICAgICBzdGFnZUVsZW1lbnQ6IFwiZGl2XCIsXG4gICAgICAgICAgICByZWZyZXNoQ2xhc3M6IFwic2J5LW93bC1yZWZyZXNoXCIsXG4gICAgICAgICAgICBsb2FkZWRDbGFzczogXCJzYnktb3dsLWxvYWRlZFwiLFxuICAgICAgICAgICAgbG9hZGluZ0NsYXNzOiBcInNieS1vd2wtbG9hZGluZ1wiLFxuICAgICAgICAgICAgcnRsQ2xhc3M6IFwic2J5LW93bC1ydGxcIixcbiAgICAgICAgICAgIHJlc3BvbnNpdmVDbGFzczogXCJzYnktb3dsLXJlc3BvbnNpdmVcIixcbiAgICAgICAgICAgIGRyYWdDbGFzczogXCJzYnktb3dsLWRyYWdcIixcbiAgICAgICAgICAgIGl0ZW1DbGFzczogXCJzYnktb3dsLWl0ZW1cIixcbiAgICAgICAgICAgIHN0YWdlQ2xhc3M6IFwic2J5LW93bC1zdGFnZVwiLFxuICAgICAgICAgICAgc3RhZ2VPdXRlckNsYXNzOiBcInNieS1vd2wtc3RhZ2Utb3V0ZXJcIixcbiAgICAgICAgICAgIGdyYWJDbGFzczogXCJzYnktb3dsLWdyYWJcIlxuICAgICAgICB9LCBlLldpZHRoID0ge0RlZmF1bHQ6IFwiZGVmYXVsdFwiLCBJbm5lcjogXCJpbm5lclwiLCBPdXRlcjogXCJvdXRlclwifSwgZS5UeXBlID0ge1xuICAgICAgICAgICAgRXZlbnQ6IFwiZXZlbnRcIixcbiAgICAgICAgICAgIFN0YXRlOiBcInN0YXRlXCJcbiAgICAgICAgfSwgZS5QbHVnaW5zID0ge30sIGUuV29ya2VycyA9IFt7XG4gICAgICAgICAgICBmaWx0ZXI6IFtcIndpZHRoXCIsIFwic2V0dGluZ3NcIl0sIHJ1bjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX3dpZHRoID0gdGhpcy4kZWxlbWVudC53aWR0aCgpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIGZpbHRlcjogW1wid2lkdGhcIiwgXCJpdGVtc1wiLCBcInNldHRpbmdzXCJdLCBydW46IGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICAgICAgYS5jdXJyZW50ID0gdGhpcy5faXRlbXMgJiYgdGhpcy5faXRlbXNbdGhpcy5yZWxhdGl2ZSh0aGlzLl9jdXJyZW50KV1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwge1xuICAgICAgICAgICAgZmlsdGVyOiBbXCJpdGVtc1wiLCBcInNldHRpbmdzXCJdLCBydW46IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLiRzdGFnZS5jaGlsZHJlbihcIi5jbG9uZWRcIikucmVtb3ZlKClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwge1xuICAgICAgICAgICAgZmlsdGVyOiBbXCJ3aWR0aFwiLCBcIml0ZW1zXCIsIFwic2V0dGluZ3NcIl0sIHJ1bjogZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgICAgICAgICB2YXIgYiA9IHRoaXMuc2V0dGluZ3MubWFyZ2luIHx8IFwiXCIsIGMgPSAhdGhpcy5zZXR0aW5ncy5hdXRvV2lkdGgsIGQgPSB0aGlzLnNldHRpbmdzLnJ0bCxcbiAgICAgICAgICAgICAgICAgIGUgPSB7d2lkdGg6IFwiYXV0b1wiLCBcIm1hcmdpbi1sZWZ0XCI6IGQgPyBiIDogXCJcIiwgXCJtYXJnaW4tcmlnaHRcIjogZCA/IFwiXCIgOiBifTtcbiAgICAgICAgICAgICAgICAhYyAmJiB0aGlzLiRzdGFnZS5jaGlsZHJlbigpLmNzcyhlKSwgYS5jc3MgPSBlXG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIGZpbHRlcjogW1wid2lkdGhcIiwgXCJpdGVtc1wiLCBcInNldHRpbmdzXCJdLCBydW46IGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICAgICAgdmFyIGIgPSAodGhpcy53aWR0aCgpIC8gdGhpcy5zZXR0aW5ncy5pdGVtcykudG9GaXhlZCgzKSAtIHRoaXMuc2V0dGluZ3MubWFyZ2luLCBjID0gbnVsbCxcbiAgICAgICAgICAgICAgICAgIGQgPSB0aGlzLl9pdGVtcy5sZW5ndGgsIGUgPSAhdGhpcy5zZXR0aW5ncy5hdXRvV2lkdGgsIGYgPSBbXTtcbiAgICAgICAgICAgICAgICBmb3IgKGEuaXRlbXMgPSB7XG4gICAgICAgICAgICAgICAgICAgIG1lcmdlOiAhMSxcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IGJcbiAgICAgICAgICAgICAgICB9OyBkLS07KSBjID0gdGhpcy5fbWVyZ2Vyc1tkXSwgYyA9IHRoaXMuc2V0dGluZ3MubWVyZ2VGaXQgJiYgTWF0aC5taW4oYywgdGhpcy5zZXR0aW5ncy5pdGVtcykgfHwgYywgYS5pdGVtcy5tZXJnZSA9IGMgPiAxIHx8IGEuaXRlbXMubWVyZ2UsIGZbZF0gPSBlID8gYiAqIGMgOiB0aGlzLl9pdGVtc1tkXS53aWR0aCgpO1xuICAgICAgICAgICAgICAgIHRoaXMuX3dpZHRocyA9IGZcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwge1xuICAgICAgICAgICAgZmlsdGVyOiBbXCJpdGVtc1wiLCBcInNldHRpbmdzXCJdLCBydW46IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgYiA9IFtdLCBjID0gdGhpcy5faXRlbXMsIGQgPSB0aGlzLnNldHRpbmdzLCBlID0gTWF0aC5tYXgoMiAqIGQuaXRlbXMsIDQpLFxuICAgICAgICAgICAgICAgICAgZiA9IDIgKiBNYXRoLmNlaWwoYy5sZW5ndGggLyAyKSwgZyA9IGQubG9vcCAmJiBjLmxlbmd0aCA/IGQucmV3aW5kID8gZSA6IE1hdGgubWF4KGUsIGYpIDogMCwgaCA9IFwiXCIsXG4gICAgICAgICAgICAgICAgICBpID0gXCJcIjtcbiAgICAgICAgICAgICAgICBmb3IgKGcgLz0gMjsgZy0tOykgYi5wdXNoKHRoaXMubm9ybWFsaXplKGIubGVuZ3RoIC8gMiwgITApKSwgaCArPSBjW2JbYi5sZW5ndGggLSAxXV1bMF0ub3V0ZXJIVE1MLCBiLnB1c2godGhpcy5ub3JtYWxpemUoYy5sZW5ndGggLSAxIC0gKGIubGVuZ3RoIC0gMSkgLyAyLCAhMCkpLCBpID0gY1tiW2IubGVuZ3RoIC0gMV1dWzBdLm91dGVySFRNTCArIGk7XG4gICAgICAgICAgICAgICAgdGhpcy5fY2xvbmVzID0gYiwgYShoKS5hZGRDbGFzcyhcImNsb25lZFwiKS5hcHBlbmRUbyh0aGlzLiRzdGFnZSksIGEoaSkuYWRkQ2xhc3MoXCJjbG9uZWRcIikucHJlcGVuZFRvKHRoaXMuJHN0YWdlKVxuICAgICAgICAgICAgfVxuICAgICAgICB9LCB7XG4gICAgICAgICAgICBmaWx0ZXI6IFtcIndpZHRoXCIsIFwiaXRlbXNcIiwgXCJzZXR0aW5nc1wiXSwgcnVuOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgYSA9IHRoaXMuc2V0dGluZ3MucnRsID8gMSA6IC0xLCBiID0gdGhpcy5fY2xvbmVzLmxlbmd0aCArIHRoaXMuX2l0ZW1zLmxlbmd0aCwgYyA9IC0xLCBkID0gMCwgZSA9IDAsIGYgPSBbXTsgKytjIDwgYjspIGQgPSBmW2MgLSAxXSB8fCAwLCBlID0gdGhpcy5fd2lkdGhzW3RoaXMucmVsYXRpdmUoYyldICsgdGhpcy5zZXR0aW5ncy5tYXJnaW4sIGYucHVzaChkICsgZSAqIGEpO1xuICAgICAgICAgICAgICAgIHRoaXMuX2Nvb3JkaW5hdGVzID0gZlxuICAgICAgICAgICAgfVxuICAgICAgICB9LCB7XG4gICAgICAgICAgICBmaWx0ZXI6IFtcIndpZHRoXCIsIFwiaXRlbXNcIiwgXCJzZXR0aW5nc1wiXSwgcnVuOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGEgPSB0aGlzLnNldHRpbmdzLnN0YWdlUGFkZGluZywgYiA9IHRoaXMuX2Nvb3JkaW5hdGVzLCBjID0ge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogTWF0aC5jZWlsKE1hdGguYWJzKGJbYi5sZW5ndGggLSAxXSkpICsgMiAqIGEsXG4gICAgICAgICAgICAgICAgICAgIFwicGFkZGluZy1sZWZ0XCI6IGEgfHwgXCJcIixcbiAgICAgICAgICAgICAgICAgICAgXCJwYWRkaW5nLXJpZ2h0XCI6IGEgfHwgXCJcIlxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgdGhpcy4kc3RhZ2UuY3NzKGMpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIGZpbHRlcjogW1wid2lkdGhcIiwgXCJpdGVtc1wiLCBcInNldHRpbmdzXCJdLCBydW46IGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICAgICAgdmFyIGIgPSB0aGlzLl9jb29yZGluYXRlcy5sZW5ndGgsIGMgPSAhdGhpcy5zZXR0aW5ncy5hdXRvV2lkdGgsIGQgPSB0aGlzLiRzdGFnZS5jaGlsZHJlbigpO1xuICAgICAgICAgICAgICAgIGlmIChjICYmIGEuaXRlbXMubWVyZ2UpIGZvciAoOyBiLS07KSBhLmNzcy53aWR0aCA9IHRoaXMuX3dpZHRoc1t0aGlzLnJlbGF0aXZlKGIpXSwgZC5lcShiKS5jc3MoYS5jc3MpOyBlbHNlIGMgJiYgKGEuY3NzLndpZHRoID0gYS5pdGVtcy53aWR0aCwgZC5jc3MoYS5jc3MpKVxuICAgICAgICAgICAgfVxuICAgICAgICB9LCB7XG4gICAgICAgICAgICBmaWx0ZXI6IFtcIml0ZW1zXCJdLCBydW46IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jb29yZGluYXRlcy5sZW5ndGggPCAxICYmIHRoaXMuJHN0YWdlLnJlbW92ZUF0dHIoXCJzdHlsZVwiKVxuICAgICAgICAgICAgfVxuICAgICAgICB9LCB7XG4gICAgICAgICAgICBmaWx0ZXI6IFtcIndpZHRoXCIsIFwiaXRlbXNcIiwgXCJzZXR0aW5nc1wiXSwgcnVuOiBmdW5jdGlvbiAoYSkge1xuICAgICAgICAgICAgICAgIGEuY3VycmVudCA9IGEuY3VycmVudCA/IHRoaXMuJHN0YWdlLmNoaWxkcmVuKCkuaW5kZXgoYS5jdXJyZW50KSA6IDAsIGEuY3VycmVudCA9IE1hdGgubWF4KHRoaXMubWluaW11bSgpLCBNYXRoLm1pbih0aGlzLm1heGltdW0oKSwgYS5jdXJyZW50KSksIHRoaXMucmVzZXQoYS5jdXJyZW50KVxuICAgICAgICAgICAgfVxuICAgICAgICB9LCB7XG4gICAgICAgICAgICBmaWx0ZXI6IFtcInBvc2l0aW9uXCJdLCBydW46IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFuaW1hdGUodGhpcy5jb29yZGluYXRlcyh0aGlzLl9jdXJyZW50KSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwge1xuICAgICAgICAgICAgZmlsdGVyOiBbXCJ3aWR0aFwiLCBcInBvc2l0aW9uXCIsIFwiaXRlbXNcIiwgXCJzZXR0aW5nc1wiXSwgcnVuOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGEsIGIsIGMsIGQsIGUgPSB0aGlzLnNldHRpbmdzLnJ0bCA/IDEgOiAtMSwgZiA9IDIgKiB0aGlzLnNldHRpbmdzLnN0YWdlUGFkZGluZyxcbiAgICAgICAgICAgICAgICAgIGcgPSB0aGlzLmNvb3JkaW5hdGVzKHRoaXMuY3VycmVudCgpKSArIGYsIGggPSBnICsgdGhpcy53aWR0aCgpICogZSwgaSA9IFtdO1xuICAgICAgICAgICAgICAgIGZvciAoYyA9IDAsIGQgPSB0aGlzLl9jb29yZGluYXRlcy5sZW5ndGg7IGMgPCBkOyBjKyspIGEgPSB0aGlzLl9jb29yZGluYXRlc1tjIC0gMV0gfHwgMCwgYiA9IE1hdGguYWJzKHRoaXMuX2Nvb3JkaW5hdGVzW2NdKSArIGYgKiBlLCAodGhpcy5vcChhLCBcIjw9XCIsIGcpICYmIHRoaXMub3AoYSwgXCI+XCIsIGgpIHx8IHRoaXMub3AoYiwgXCI8XCIsIGcpICYmIHRoaXMub3AoYiwgXCI+XCIsIGgpKSAmJiBpLnB1c2goYyk7XG4gICAgICAgICAgICAgICAgdGhpcy4kc3RhZ2UuY2hpbGRyZW4oXCIuYWN0aXZlXCIpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpLCB0aGlzLiRzdGFnZS5jaGlsZHJlbihcIjplcShcIiArIGkuam9pbihcIiksIDplcShcIikgKyBcIilcIikuYWRkQ2xhc3MoXCJhY3RpdmVcIiksIHRoaXMuc2V0dGluZ3MuY2VudGVyICYmICh0aGlzLiRzdGFnZS5jaGlsZHJlbihcIi5jZW50ZXJcIikucmVtb3ZlQ2xhc3MoXCJjZW50ZXJcIiksIHRoaXMuJHN0YWdlLmNoaWxkcmVuKCkuZXEodGhpcy5jdXJyZW50KCkpLmFkZENsYXNzKFwiY2VudGVyXCIpKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XSwgZS5wcm90b3R5cGUuaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmVudGVyKFwiaW5pdGlhbGl6aW5nXCIpLCB0aGlzLnRyaWdnZXIoXCJpbml0aWFsaXplXCIpLCB0aGlzLiRlbGVtZW50LnRvZ2dsZUNsYXNzKHRoaXMuc2V0dGluZ3MucnRsQ2xhc3MsIHRoaXMuc2V0dGluZ3MucnRsKSwgdGhpcy5zZXR0aW5ncy5hdXRvV2lkdGggJiYgIXRoaXMuaXMoXCJwcmUtbG9hZGluZ1wiKSkge1xuICAgICAgICAgICAgICAgIHZhciBiLCBjLCBlO1xuICAgICAgICAgICAgICAgIGIgPSB0aGlzLiRlbGVtZW50LmZpbmQoXCJpbWdcIiksIGMgPSB0aGlzLnNldHRpbmdzLm5lc3RlZEl0ZW1TZWxlY3RvciA/IFwiLlwiICsgdGhpcy5zZXR0aW5ncy5uZXN0ZWRJdGVtU2VsZWN0b3IgOiBkLCBlID0gdGhpcy4kZWxlbWVudC5jaGlsZHJlbihjKS53aWR0aCgpLCBiLmxlbmd0aCAmJiBlIDw9IDAgJiYgdGhpcy5wcmVsb2FkQXV0b1dpZHRoSW1hZ2VzKGIpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLiRlbGVtZW50LmFkZENsYXNzKHRoaXMub3B0aW9ucy5sb2FkaW5nQ2xhc3MpLCB0aGlzLiRzdGFnZSA9IGEoXCI8XCIgKyB0aGlzLnNldHRpbmdzLnN0YWdlRWxlbWVudCArICcgY2xhc3M9XCInICsgdGhpcy5zZXR0aW5ncy5zdGFnZUNsYXNzICsgJ1wiLz4nKS53cmFwKCc8ZGl2IGNsYXNzPVwiJyArIHRoaXMuc2V0dGluZ3Muc3RhZ2VPdXRlckNsYXNzICsgJ1wiLz4nKSwgdGhpcy4kZWxlbWVudC5hcHBlbmQodGhpcy4kc3RhZ2UucGFyZW50KCkpLCB0aGlzLnJlcGxhY2UodGhpcy4kZWxlbWVudC5jaGlsZHJlbigpLm5vdCh0aGlzLiRzdGFnZS5wYXJlbnQoKSkpLCB0aGlzLiRlbGVtZW50LmlzKFwiOnZpc2libGVcIikgPyB0aGlzLnJlZnJlc2goKSA6IHRoaXMuaW52YWxpZGF0ZShcIndpZHRoXCIpLCB0aGlzLiRlbGVtZW50LnJlbW92ZUNsYXNzKHRoaXMub3B0aW9ucy5sb2FkaW5nQ2xhc3MpLmFkZENsYXNzKHRoaXMub3B0aW9ucy5sb2FkZWRDbGFzcyksIHRoaXMucmVnaXN0ZXJFdmVudEhhbmRsZXJzKCksIHRoaXMubGVhdmUoXCJpbml0aWFsaXppbmdcIiksIHRoaXMudHJpZ2dlcihcImluaXRpYWxpemVkXCIpXG4gICAgICAgIH0sIGUucHJvdG90eXBlLnNldHVwID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGIgPSB0aGlzLnZpZXdwb3J0KCksIGMgPSB0aGlzLm9wdGlvbnMucmVzcG9uc2l2ZSwgZCA9IC0xLCBlID0gbnVsbDtcbiAgICAgICAgICAgIGMgPyAoYS5lYWNoKGMsIGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICAgICAgYSA8PSBiICYmIGEgPiBkICYmIChkID0gTnVtYmVyKGEpKVxuICAgICAgICAgICAgfSksIGUgPSBhLmV4dGVuZCh7fSwgdGhpcy5vcHRpb25zLCBjW2RdKSwgXCJmdW5jdGlvblwiID09IHR5cGVvZiBlLnN0YWdlUGFkZGluZyAmJiAoZS5zdGFnZVBhZGRpbmcgPSBlLnN0YWdlUGFkZGluZygpKSwgZGVsZXRlIGUucmVzcG9uc2l2ZSwgZS5yZXNwb25zaXZlQ2xhc3MgJiYgdGhpcy4kZWxlbWVudC5hdHRyKFwiY2xhc3NcIiwgdGhpcy4kZWxlbWVudC5hdHRyKFwiY2xhc3NcIikucmVwbGFjZShuZXcgUmVnRXhwKFwiKFwiICsgdGhpcy5vcHRpb25zLnJlc3BvbnNpdmVDbGFzcyArIFwiLSlcXFxcUytcXFxcc1wiLCBcImdcIiksIFwiJDFcIiArIGQpKSkgOiBlID0gYS5leHRlbmQoe30sIHRoaXMub3B0aW9ucyksIHRoaXMudHJpZ2dlcihcImNoYW5nZVwiLCB7XG4gICAgICAgICAgICAgICAgcHJvcGVydHk6IHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJzZXR0aW5nc1wiLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLCB0aGlzLl9icmVha3BvaW50ID0gZCwgdGhpcy5zZXR0aW5ncyA9IGUsIHRoaXMuaW52YWxpZGF0ZShcInNldHRpbmdzXCIpLCB0aGlzLnRyaWdnZXIoXCJjaGFuZ2VkXCIsIHtcbiAgICAgICAgICAgICAgICBwcm9wZXJ0eToge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcInNldHRpbmdzXCIsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLnNldHRpbmdzXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSwgZS5wcm90b3R5cGUub3B0aW9uc0xvZ2ljID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGhpcy5zZXR0aW5ncy5hdXRvV2lkdGggJiYgKHRoaXMuc2V0dGluZ3Muc3RhZ2VQYWRkaW5nID0gITEsIHRoaXMuc2V0dGluZ3MubWVyZ2UgPSAhMSlcbiAgICAgICAgfSwgZS5wcm90b3R5cGUucHJlcGFyZSA9IGZ1bmN0aW9uIChiKSB7XG4gICAgICAgICAgICB2YXIgYyA9IHRoaXMudHJpZ2dlcihcInByZXBhcmVcIiwge2NvbnRlbnQ6IGJ9KTtcbiAgICAgICAgICAgIHJldHVybiBjLmRhdGEgfHwgKGMuZGF0YSA9IGEoXCI8XCIgKyB0aGlzLnNldHRpbmdzLml0ZW1FbGVtZW50ICsgXCIvPlwiKS5hZGRDbGFzcyh0aGlzLm9wdGlvbnMuaXRlbUNsYXNzKS5hcHBlbmQoYikpLCB0aGlzLnRyaWdnZXIoXCJwcmVwYXJlZFwiLCB7Y29udGVudDogYy5kYXRhfSksIGMuZGF0YVxuICAgICAgICB9LCBlLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBiID0gMCwgYyA9IHRoaXMuX3BpcGUubGVuZ3RoLCBkID0gYS5wcm94eShmdW5jdGlvbiAoYSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzW2FdXG4gICAgICAgICAgICB9LCB0aGlzLl9pbnZhbGlkYXRlZCksIGUgPSB7fTsgYiA8IGM7KSAodGhpcy5faW52YWxpZGF0ZWQuYWxsIHx8IGEuZ3JlcCh0aGlzLl9waXBlW2JdLmZpbHRlciwgZCkubGVuZ3RoID4gMCkgJiYgdGhpcy5fcGlwZVtiXS5ydW4oZSksIGIrKztcbiAgICAgICAgICAgIHRoaXMuX2ludmFsaWRhdGVkID0ge30sICF0aGlzLmlzKFwidmFsaWRcIikgJiYgdGhpcy5lbnRlcihcInZhbGlkXCIpXG4gICAgICAgIH0sIGUucHJvdG90eXBlLndpZHRoID0gZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgICAgIHN3aXRjaCAoYSA9IGEgfHwgZS5XaWR0aC5EZWZhdWx0KSB7XG4gICAgICAgICAgICAgICAgY2FzZSBlLldpZHRoLklubmVyOlxuICAgICAgICAgICAgICAgIGNhc2UgZS5XaWR0aC5PdXRlcjpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3dpZHRoO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl93aWR0aCAtIDIgKiB0aGlzLnNldHRpbmdzLnN0YWdlUGFkZGluZyArIHRoaXMuc2V0dGluZ3MubWFyZ2luXG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIGUucHJvdG90eXBlLnJlZnJlc2ggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aGlzLmVudGVyKFwicmVmcmVzaGluZ1wiKSwgdGhpcy50cmlnZ2VyKFwicmVmcmVzaFwiKSwgdGhpcy5zZXR1cCgpLCB0aGlzLm9wdGlvbnNMb2dpYygpLCB0aGlzLiRlbGVtZW50LmFkZENsYXNzKHRoaXMub3B0aW9ucy5yZWZyZXNoQ2xhc3MpLCB0aGlzLnVwZGF0ZSgpLCB0aGlzLiRlbGVtZW50LnJlbW92ZUNsYXNzKHRoaXMub3B0aW9ucy5yZWZyZXNoQ2xhc3MpLCB0aGlzLmxlYXZlKFwicmVmcmVzaGluZ1wiKSwgdGhpcy50cmlnZ2VyKFwicmVmcmVzaGVkXCIpXG4gICAgICAgIH0sIGUucHJvdG90eXBlLm9uVGhyb3R0bGVkUmVzaXplID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgYi5jbGVhclRpbWVvdXQodGhpcy5yZXNpemVUaW1lciksIHRoaXMucmVzaXplVGltZXIgPSBiLnNldFRpbWVvdXQodGhpcy5faGFuZGxlcnMub25SZXNpemUsIHRoaXMuc2V0dGluZ3MucmVzcG9uc2l2ZVJlZnJlc2hSYXRlKVxuICAgICAgICB9LCBlLnByb3RvdHlwZS5vblJlc2l6ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiAhIXRoaXMuX2l0ZW1zLmxlbmd0aCAmJiAodGhpcy5fd2lkdGggIT09IHRoaXMuJGVsZW1lbnQud2lkdGgoKSAmJiAoISF0aGlzLiRlbGVtZW50LmlzKFwiOnZpc2libGVcIikgJiYgKHRoaXMuZW50ZXIoXCJyZXNpemluZ1wiKSwgdGhpcy50cmlnZ2VyKFwicmVzaXplXCIpLmlzRGVmYXVsdFByZXZlbnRlZCgpID8gKHRoaXMubGVhdmUoXCJyZXNpemluZ1wiKSwgITEpIDogKHRoaXMuaW52YWxpZGF0ZShcIndpZHRoXCIpLCB0aGlzLnJlZnJlc2goKSwgdGhpcy5sZWF2ZShcInJlc2l6aW5nXCIpLCB2b2lkIHRoaXMudHJpZ2dlcihcInJlc2l6ZWRcIikpKSkpXG4gICAgICAgIH0sIGUucHJvdG90eXBlLnJlZ2lzdGVyRXZlbnRIYW5kbGVycyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGEuc3VwcG9ydC50cmFuc2l0aW9uICYmIHRoaXMuJHN0YWdlLm9uKGEuc3VwcG9ydC50cmFuc2l0aW9uLmVuZCArIFwiLm93bC5jb3JlXCIsIGEucHJveHkodGhpcy5vblRyYW5zaXRpb25FbmQsIHRoaXMpKSwgdGhpcy5zZXR0aW5ncy5yZXNwb25zaXZlICE9PSAhMSAmJiB0aGlzLm9uKGIsIFwicmVzaXplXCIsIHRoaXMuX2hhbmRsZXJzLm9uVGhyb3R0bGVkUmVzaXplKSwgdGhpcy5zZXR0aW5ncy5tb3VzZURyYWcgJiYgKHRoaXMuJGVsZW1lbnQuYWRkQ2xhc3ModGhpcy5vcHRpb25zLmRyYWdDbGFzcyksIHRoaXMuJHN0YWdlLm9uKFwibW91c2Vkb3duLm93bC5jb3JlXCIsIGEucHJveHkodGhpcy5vbkRyYWdTdGFydCwgdGhpcykpLCB0aGlzLiRzdGFnZS5vbihcImRyYWdzdGFydC5vd2wuY29yZSBzZWxlY3RzdGFydC5vd2wuY29yZVwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICExXG4gICAgICAgICAgICB9KSksIHRoaXMuc2V0dGluZ3MudG91Y2hEcmFnICYmICh0aGlzLiRzdGFnZS5vbihcInRvdWNoc3RhcnQub3dsLmNvcmVcIiwgYS5wcm94eSh0aGlzLm9uRHJhZ1N0YXJ0LCB0aGlzKSksIHRoaXMuJHN0YWdlLm9uKFwidG91Y2hjYW5jZWwub3dsLmNvcmVcIiwgYS5wcm94eSh0aGlzLm9uRHJhZ0VuZCwgdGhpcykpKVxuICAgICAgICB9LCBlLnByb3RvdHlwZS5vbkRyYWdTdGFydCA9IGZ1bmN0aW9uIChiKSB7XG4gICAgICAgICAgICB2YXIgZCA9IG51bGw7XG4gICAgICAgICAgICAzICE9PSBiLndoaWNoICYmIChhLnN1cHBvcnQudHJhbnNmb3JtID8gKGQgPSB0aGlzLiRzdGFnZS5jc3MoXCJ0cmFuc2Zvcm1cIikucmVwbGFjZSgvLipcXCh8XFwpfCAvZywgXCJcIikuc3BsaXQoXCIsXCIpLCBkID0ge1xuICAgICAgICAgICAgICAgIHg6IGRbMTYgPT09IGQubGVuZ3RoID8gMTIgOiA0XSxcbiAgICAgICAgICAgICAgICB5OiBkWzE2ID09PSBkLmxlbmd0aCA/IDEzIDogNV1cbiAgICAgICAgICAgIH0pIDogKGQgPSB0aGlzLiRzdGFnZS5wb3NpdGlvbigpLCBkID0ge1xuICAgICAgICAgICAgICAgIHg6IHRoaXMuc2V0dGluZ3MucnRsID8gZC5sZWZ0ICsgdGhpcy4kc3RhZ2Uud2lkdGgoKSAtIHRoaXMud2lkdGgoKSArIHRoaXMuc2V0dGluZ3MubWFyZ2luIDogZC5sZWZ0LFxuICAgICAgICAgICAgICAgIHk6IGQudG9wXG4gICAgICAgICAgICB9KSwgdGhpcy5pcyhcImFuaW1hdGluZ1wiKSAmJiAoYS5zdXBwb3J0LnRyYW5zZm9ybSA/IHRoaXMuYW5pbWF0ZShkLngpIDogdGhpcy4kc3RhZ2Uuc3RvcCgpLCB0aGlzLmludmFsaWRhdGUoXCJwb3NpdGlvblwiKSksIHRoaXMuJGVsZW1lbnQudG9nZ2xlQ2xhc3ModGhpcy5vcHRpb25zLmdyYWJDbGFzcywgXCJtb3VzZWRvd25cIiA9PT0gYi50eXBlKSwgdGhpcy5zcGVlZCgwKSwgdGhpcy5fZHJhZy50aW1lID0gKG5ldyBEYXRlKS5nZXRUaW1lKCksIHRoaXMuX2RyYWcudGFyZ2V0ID0gYShiLnRhcmdldCksIHRoaXMuX2RyYWcuc3RhZ2Uuc3RhcnQgPSBkLCB0aGlzLl9kcmFnLnN0YWdlLmN1cnJlbnQgPSBkLCB0aGlzLl9kcmFnLnBvaW50ZXIgPSB0aGlzLnBvaW50ZXIoYiksIGEoYykub24oXCJtb3VzZXVwLm93bC5jb3JlIHRvdWNoZW5kLm93bC5jb3JlXCIsIGEucHJveHkodGhpcy5vbkRyYWdFbmQsIHRoaXMpKSwgYShjKS5vbmUoXCJtb3VzZW1vdmUub3dsLmNvcmUgdG91Y2htb3ZlLm93bC5jb3JlXCIsIGEucHJveHkoZnVuY3Rpb24gKGIpIHtcbiAgICAgICAgICAgICAgICB2YXIgZCA9IHRoaXMuZGlmZmVyZW5jZSh0aGlzLl9kcmFnLnBvaW50ZXIsIHRoaXMucG9pbnRlcihiKSk7XG4gICAgICAgICAgICAgICAgYShjKS5vbihcIm1vdXNlbW92ZS5vd2wuY29yZSB0b3VjaG1vdmUub3dsLmNvcmVcIiwgYS5wcm94eSh0aGlzLm9uRHJhZ01vdmUsIHRoaXMpKSwgTWF0aC5hYnMoZC54KSA8IE1hdGguYWJzKGQueSkgJiYgdGhpcy5pcyhcInZhbGlkXCIpIHx8IChiLnByZXZlbnREZWZhdWx0KCksIHRoaXMuZW50ZXIoXCJkcmFnZ2luZ1wiKSwgdGhpcy50cmlnZ2VyKFwiZHJhZ1wiKSlcbiAgICAgICAgICAgIH0sIHRoaXMpKSlcbiAgICAgICAgfSwgZS5wcm90b3R5cGUub25EcmFnTW92ZSA9IGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICB2YXIgYiA9IG51bGwsIGMgPSBudWxsLCBkID0gbnVsbCwgZSA9IHRoaXMuZGlmZmVyZW5jZSh0aGlzLl9kcmFnLnBvaW50ZXIsIHRoaXMucG9pbnRlcihhKSksXG4gICAgICAgICAgICAgIGYgPSB0aGlzLmRpZmZlcmVuY2UodGhpcy5fZHJhZy5zdGFnZS5zdGFydCwgZSk7XG4gICAgICAgICAgICB0aGlzLmlzKFwiZHJhZ2dpbmdcIikgJiYgKGEucHJldmVudERlZmF1bHQoKSwgdGhpcy5zZXR0aW5ncy5sb29wID8gKGIgPSB0aGlzLmNvb3JkaW5hdGVzKHRoaXMubWluaW11bSgpKSwgYyA9IHRoaXMuY29vcmRpbmF0ZXModGhpcy5tYXhpbXVtKCkgKyAxKSAtIGIsIGYueCA9ICgoZi54IC0gYikgJSBjICsgYykgJSBjICsgYikgOiAoYiA9IHRoaXMuc2V0dGluZ3MucnRsID8gdGhpcy5jb29yZGluYXRlcyh0aGlzLm1heGltdW0oKSkgOiB0aGlzLmNvb3JkaW5hdGVzKHRoaXMubWluaW11bSgpKSwgYyA9IHRoaXMuc2V0dGluZ3MucnRsID8gdGhpcy5jb29yZGluYXRlcyh0aGlzLm1pbmltdW0oKSkgOiB0aGlzLmNvb3JkaW5hdGVzKHRoaXMubWF4aW11bSgpKSwgZCA9IHRoaXMuc2V0dGluZ3MucHVsbERyYWcgPyAtMSAqIGUueCAvIDUgOiAwLCBmLnggPSBNYXRoLm1heChNYXRoLm1pbihmLngsIGIgKyBkKSwgYyArIGQpKSwgdGhpcy5fZHJhZy5zdGFnZS5jdXJyZW50ID0gZiwgdGhpcy5hbmltYXRlKGYueCkpXG4gICAgICAgIH0sIGUucHJvdG90eXBlLm9uRHJhZ0VuZCA9IGZ1bmN0aW9uIChiKSB7XG4gICAgICAgICAgICB2YXIgZCA9IHRoaXMuZGlmZmVyZW5jZSh0aGlzLl9kcmFnLnBvaW50ZXIsIHRoaXMucG9pbnRlcihiKSksIGUgPSB0aGlzLl9kcmFnLnN0YWdlLmN1cnJlbnQsXG4gICAgICAgICAgICAgIGYgPSBkLnggPiAwIF4gdGhpcy5zZXR0aW5ncy5ydGwgPyBcImxlZnRcIiA6IFwicmlnaHRcIjtcbiAgICAgICAgICAgIGEoYykub2ZmKFwiLm93bC5jb3JlXCIpLCB0aGlzLiRlbGVtZW50LnJlbW92ZUNsYXNzKHRoaXMub3B0aW9ucy5ncmFiQ2xhc3MpLCAoMCAhPT0gZC54ICYmIHRoaXMuaXMoXCJkcmFnZ2luZ1wiKSB8fCAhdGhpcy5pcyhcInZhbGlkXCIpKSAmJiAodGhpcy5zcGVlZCh0aGlzLnNldHRpbmdzLmRyYWdFbmRTcGVlZCB8fCB0aGlzLnNldHRpbmdzLnNtYXJ0U3BlZWQpLCB0aGlzLmN1cnJlbnQodGhpcy5jbG9zZXN0KGUueCwgMCAhPT0gZC54ID8gZiA6IHRoaXMuX2RyYWcuZGlyZWN0aW9uKSksIHRoaXMuaW52YWxpZGF0ZShcInBvc2l0aW9uXCIpLCB0aGlzLnVwZGF0ZSgpLCB0aGlzLl9kcmFnLmRpcmVjdGlvbiA9IGYsIChNYXRoLmFicyhkLngpID4gMyB8fCAobmV3IERhdGUpLmdldFRpbWUoKSAtIHRoaXMuX2RyYWcudGltZSA+IDMwMCkgJiYgdGhpcy5fZHJhZy50YXJnZXQub25lKFwiY2xpY2sub3dsLmNvcmVcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAhMVxuICAgICAgICAgICAgfSkpLCB0aGlzLmlzKFwiZHJhZ2dpbmdcIikgJiYgKHRoaXMubGVhdmUoXCJkcmFnZ2luZ1wiKSwgdGhpcy50cmlnZ2VyKFwiZHJhZ2dlZFwiKSlcbiAgICAgICAgfSwgZS5wcm90b3R5cGUuY2xvc2VzdCA9IGZ1bmN0aW9uIChiLCBjKSB7XG4gICAgICAgICAgICB2YXIgZCA9IC0xLCBlID0gMzAsIGYgPSB0aGlzLndpZHRoKCksIGcgPSB0aGlzLmNvb3JkaW5hdGVzKCk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5zZXR0aW5ncy5mcmVlRHJhZyB8fCBhLmVhY2goZywgYS5wcm94eShmdW5jdGlvbiAoYSwgaCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcImxlZnRcIiA9PT0gYyAmJiBiID4gaCAtIGUgJiYgYiA8IGggKyBlID8gZCA9IGEgOiBcInJpZ2h0XCIgPT09IGMgJiYgYiA+IGggLSBmIC0gZSAmJiBiIDwgaCAtIGYgKyBlID8gZCA9IGEgKyAxIDogdGhpcy5vcChiLCBcIjxcIiwgaCkgJiYgdGhpcy5vcChiLCBcIj5cIiwgZ1thICsgMV0gfHwgaCAtIGYpICYmIChkID0gXCJsZWZ0XCIgPT09IGMgPyBhICsgMSA6IGEpLCBkID09PSAtMVxuICAgICAgICAgICAgfSwgdGhpcykpLCB0aGlzLnNldHRpbmdzLmxvb3AgfHwgKHRoaXMub3AoYiwgXCI+XCIsIGdbdGhpcy5taW5pbXVtKCldKSA/IGQgPSBiID0gdGhpcy5taW5pbXVtKCkgOiB0aGlzLm9wKGIsIFwiPFwiLCBnW3RoaXMubWF4aW11bSgpXSkgJiYgKGQgPSBiID0gdGhpcy5tYXhpbXVtKCkpKSwgZFxuICAgICAgICB9LCBlLnByb3RvdHlwZS5hbmltYXRlID0gZnVuY3Rpb24gKGIpIHtcbiAgICAgICAgICAgIHZhciBjID0gdGhpcy5zcGVlZCgpID4gMDtcbiAgICAgICAgICAgIHRoaXMuaXMoXCJhbmltYXRpbmdcIikgJiYgdGhpcy5vblRyYW5zaXRpb25FbmQoKSwgYyAmJiAodGhpcy5lbnRlcihcImFuaW1hdGluZ1wiKSwgdGhpcy50cmlnZ2VyKFwidHJhbnNsYXRlXCIpKSwgYS5zdXBwb3J0LnRyYW5zZm9ybTNkICYmIGEuc3VwcG9ydC50cmFuc2l0aW9uID8gdGhpcy4kc3RhZ2UuY3NzKHtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlM2QoXCIgKyBiICsgXCJweCwwcHgsMHB4KVwiLFxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IHRoaXMuc3BlZWQoKSAvIDFlMyArIFwic1wiXG4gICAgICAgICAgICB9KSA6IGMgPyB0aGlzLiRzdGFnZS5hbmltYXRlKHtsZWZ0OiBiICsgXCJweFwifSwgdGhpcy5zcGVlZCgpLCB0aGlzLnNldHRpbmdzLmZhbGxiYWNrRWFzaW5nLCBhLnByb3h5KHRoaXMub25UcmFuc2l0aW9uRW5kLCB0aGlzKSkgOiB0aGlzLiRzdGFnZS5jc3Moe2xlZnQ6IGIgKyBcInB4XCJ9KVxuICAgICAgICB9LCBlLnByb3RvdHlwZS5pcyA9IGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fc3RhdGVzLmN1cnJlbnRbYV0gJiYgdGhpcy5fc3RhdGVzLmN1cnJlbnRbYV0gPiAwXG4gICAgICAgIH0sIGUucHJvdG90eXBlLmN1cnJlbnQgPSBmdW5jdGlvbiAoYSkge1xuICAgICAgICAgICAgaWYgKGEgPT09IGQpIHJldHVybiB0aGlzLl9jdXJyZW50O1xuICAgICAgICAgICAgaWYgKDAgPT09IHRoaXMuX2l0ZW1zLmxlbmd0aCkgcmV0dXJuIGQ7XG4gICAgICAgICAgICBpZiAoYSA9IHRoaXMubm9ybWFsaXplKGEpLCB0aGlzLl9jdXJyZW50ICE9PSBhKSB7XG4gICAgICAgICAgICAgICAgdmFyIGIgPSB0aGlzLnRyaWdnZXIoXCJjaGFuZ2VcIiwge3Byb3BlcnR5OiB7bmFtZTogXCJwb3NpdGlvblwiLCB2YWx1ZTogYX19KTtcbiAgICAgICAgICAgICAgICBiLmRhdGEgIT09IGQgJiYgKGEgPSB0aGlzLm5vcm1hbGl6ZShiLmRhdGEpKSwgdGhpcy5fY3VycmVudCA9IGEsIHRoaXMuaW52YWxpZGF0ZShcInBvc2l0aW9uXCIpLCB0aGlzLnRyaWdnZXIoXCJjaGFuZ2VkXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgcHJvcGVydHk6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwicG9zaXRpb25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLl9jdXJyZW50XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2N1cnJlbnRcbiAgICAgICAgfSwgZS5wcm90b3R5cGUuaW52YWxpZGF0ZSA9IGZ1bmN0aW9uIChiKSB7XG4gICAgICAgICAgICByZXR1cm4gXCJzdHJpbmdcIiA9PT0gYS50eXBlKGIpICYmICh0aGlzLl9pbnZhbGlkYXRlZFtiXSA9ICEwLCB0aGlzLmlzKFwidmFsaWRcIikgJiYgdGhpcy5sZWF2ZShcInZhbGlkXCIpKSwgYS5tYXAodGhpcy5faW52YWxpZGF0ZWQsIGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGJcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0sIGUucHJvdG90eXBlLnJlc2V0ID0gZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgICAgIGEgPSB0aGlzLm5vcm1hbGl6ZShhKSwgYSAhPT0gZCAmJiAodGhpcy5fc3BlZWQgPSAwLCB0aGlzLl9jdXJyZW50ID0gYSwgdGhpcy5zdXBwcmVzcyhbXCJ0cmFuc2xhdGVcIiwgXCJ0cmFuc2xhdGVkXCJdKSwgdGhpcy5hbmltYXRlKHRoaXMuY29vcmRpbmF0ZXMoYSkpLCB0aGlzLnJlbGVhc2UoW1widHJhbnNsYXRlXCIsIFwidHJhbnNsYXRlZFwiXSkpXG4gICAgICAgIH0sIGUucHJvdG90eXBlLm5vcm1hbGl6ZSA9IGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgICAgICB2YXIgYyA9IHRoaXMuX2l0ZW1zLmxlbmd0aCwgZSA9IGIgPyAwIDogdGhpcy5fY2xvbmVzLmxlbmd0aDtcbiAgICAgICAgICAgIHJldHVybiAhdGhpcy5pc051bWVyaWMoYSkgfHwgYyA8IDEgPyBhID0gZCA6IChhIDwgMCB8fCBhID49IGMgKyBlKSAmJiAoYSA9ICgoYSAtIGUgLyAyKSAlIGMgKyBjKSAlIGMgKyBlIC8gMiksIGFcbiAgICAgICAgfSwgZS5wcm90b3R5cGUucmVsYXRpdmUgPSBmdW5jdGlvbiAoYSkge1xuICAgICAgICAgICAgcmV0dXJuIGEgLT0gdGhpcy5fY2xvbmVzLmxlbmd0aCAvIDIsIHRoaXMubm9ybWFsaXplKGEsICEwKVxuICAgICAgICB9LCBlLnByb3RvdHlwZS5tYXhpbXVtID0gZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgICAgIHZhciBiLCBjLCBkLCBlID0gdGhpcy5zZXR0aW5ncywgZiA9IHRoaXMuX2Nvb3JkaW5hdGVzLmxlbmd0aDtcbiAgICAgICAgICAgIGlmIChlLmxvb3ApIGYgPSB0aGlzLl9jbG9uZXMubGVuZ3RoIC8gMiArIHRoaXMuX2l0ZW1zLmxlbmd0aCAtIDE7IGVsc2UgaWYgKGUuYXV0b1dpZHRoIHx8IGUubWVyZ2UpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGIgPSB0aGlzLl9pdGVtcy5sZW5ndGgsIGMgPSB0aGlzLl9pdGVtc1stLWJdLndpZHRoKCksIGQgPSB0aGlzLiRlbGVtZW50LndpZHRoKCk7IGItLSAmJiAoYyArPSB0aGlzLl9pdGVtc1tiXS53aWR0aCgpICsgdGhpcy5zZXR0aW5ncy5tYXJnaW4sICEoYyA+IGQpKTspIDtcbiAgICAgICAgICAgICAgICBmID0gYiArIDFcbiAgICAgICAgICAgIH0gZWxzZSBmID0gZS5jZW50ZXIgPyB0aGlzLl9pdGVtcy5sZW5ndGggLSAxIDogdGhpcy5faXRlbXMubGVuZ3RoIC0gZS5pdGVtcztcbiAgICAgICAgICAgIHJldHVybiBhICYmIChmIC09IHRoaXMuX2Nsb25lcy5sZW5ndGggLyAyKSwgTWF0aC5tYXgoZiwgMClcbiAgICAgICAgfSwgZS5wcm90b3R5cGUubWluaW11bSA9IGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICByZXR1cm4gYSA/IDAgOiB0aGlzLl9jbG9uZXMubGVuZ3RoIC8gMlxuICAgICAgICB9LCBlLnByb3RvdHlwZS5pdGVtcyA9IGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICByZXR1cm4gYSA9PT0gZCA/IHRoaXMuX2l0ZW1zLnNsaWNlKCkgOiAoYSA9IHRoaXMubm9ybWFsaXplKGEsICEwKSwgdGhpcy5faXRlbXNbYV0pXG4gICAgICAgIH0sIGUucHJvdG90eXBlLm1lcmdlcnMgPSBmdW5jdGlvbiAoYSkge1xuICAgICAgICAgICAgcmV0dXJuIGEgPT09IGQgPyB0aGlzLl9tZXJnZXJzLnNsaWNlKCkgOiAoYSA9IHRoaXMubm9ybWFsaXplKGEsICEwKSwgdGhpcy5fbWVyZ2Vyc1thXSlcbiAgICAgICAgfSwgZS5wcm90b3R5cGUuY2xvbmVzID0gZnVuY3Rpb24gKGIpIHtcbiAgICAgICAgICAgIHZhciBjID0gdGhpcy5fY2xvbmVzLmxlbmd0aCAvIDIsIGUgPSBjICsgdGhpcy5faXRlbXMubGVuZ3RoLCBmID0gZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYSAlIDIgPT09IDAgPyBlICsgYSAvIDIgOiBjIC0gKGEgKyAxKSAvIDJcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gYiA9PT0gZCA/IGEubWFwKHRoaXMuX2Nsb25lcywgZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZihiKVxuICAgICAgICAgICAgfSkgOiBhLm1hcCh0aGlzLl9jbG9uZXMsIGZ1bmN0aW9uIChhLCBjKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGEgPT09IGIgPyBmKGMpIDogbnVsbFxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSwgZS5wcm90b3R5cGUuc3BlZWQgPSBmdW5jdGlvbiAoYSkge1xuICAgICAgICAgICAgcmV0dXJuIGEgIT09IGQgJiYgKHRoaXMuX3NwZWVkID0gYSksIHRoaXMuX3NwZWVkXG4gICAgICAgIH0sIGUucHJvdG90eXBlLmNvb3JkaW5hdGVzID0gZnVuY3Rpb24gKGIpIHtcbiAgICAgICAgICAgIHZhciBjLCBlID0gMSwgZiA9IGIgLSAxO1xuICAgICAgICAgICAgcmV0dXJuIGIgPT09IGQgPyBhLm1hcCh0aGlzLl9jb29yZGluYXRlcywgYS5wcm94eShmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNvb3JkaW5hdGVzKGIpXG4gICAgICAgICAgICB9LCB0aGlzKSkgOiAodGhpcy5zZXR0aW5ncy5jZW50ZXIgPyAodGhpcy5zZXR0aW5ncy5ydGwgJiYgKGUgPSAtMSwgZiA9IGIgKyAxKSwgYyA9IHRoaXMuX2Nvb3JkaW5hdGVzW2JdLCBjICs9ICh0aGlzLndpZHRoKCkgLSBjICsgKHRoaXMuX2Nvb3JkaW5hdGVzW2ZdIHx8IDApKSAvIDIgKiBlKSA6IGMgPSB0aGlzLl9jb29yZGluYXRlc1tmXSB8fCAwLCBjID0gTWF0aC5jZWlsKGMpKVxuICAgICAgICB9LCBlLnByb3RvdHlwZS5kdXJhdGlvbiA9IGZ1bmN0aW9uIChhLCBiLCBjKSB7XG4gICAgICAgICAgICByZXR1cm4gMCA9PT0gYyA/IDAgOiBNYXRoLm1pbihNYXRoLm1heChNYXRoLmFicyhiIC0gYSksIDEpLCA2KSAqIE1hdGguYWJzKGMgfHwgdGhpcy5zZXR0aW5ncy5zbWFydFNwZWVkKVxuICAgICAgICB9LCBlLnByb3RvdHlwZS50byA9IGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgICAgICB2YXIgYyA9IHRoaXMuY3VycmVudCgpLCBkID0gbnVsbCwgZSA9IGEgLSB0aGlzLnJlbGF0aXZlKGMpLCBmID0gKGUgPiAwKSAtIChlIDwgMCksIGcgPSB0aGlzLl9pdGVtcy5sZW5ndGgsXG4gICAgICAgICAgICAgIGggPSB0aGlzLm1pbmltdW0oKSwgaSA9IHRoaXMubWF4aW11bSgpO1xuICAgICAgICAgICAgdGhpcy5zZXR0aW5ncy5sb29wID8gKCF0aGlzLnNldHRpbmdzLnJld2luZCAmJiBNYXRoLmFicyhlKSA+IGcgLyAyICYmIChlICs9IGYgKiAtMSAqIGcpLCBhID0gYyArIGUsIGQgPSAoKGEgLSBoKSAlIGcgKyBnKSAlIGcgKyBoLCBkICE9PSBhICYmIGQgLSBlIDw9IGkgJiYgZCAtIGUgPiAwICYmIChjID0gZCAtIGUsIGEgPSBkLCB0aGlzLnJlc2V0KGMpKSkgOiB0aGlzLnNldHRpbmdzLnJld2luZCA/IChpICs9IDEsIGEgPSAoYSAlIGkgKyBpKSAlIGkpIDogYSA9IE1hdGgubWF4KGgsIE1hdGgubWluKGksIGEpKSwgdGhpcy5zcGVlZCh0aGlzLmR1cmF0aW9uKGMsIGEsIGIpKSwgdGhpcy5jdXJyZW50KGEpLCB0aGlzLiRlbGVtZW50LmlzKFwiOnZpc2libGVcIikgJiYgdGhpcy51cGRhdGUoKVxuICAgICAgICB9LCBlLnByb3RvdHlwZS5uZXh0ID0gZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgICAgIGEgPSBhIHx8ICExLCB0aGlzLnRvKHRoaXMucmVsYXRpdmUodGhpcy5jdXJyZW50KCkpICsgMSwgYSlcbiAgICAgICAgfSwgZS5wcm90b3R5cGUucHJldiA9IGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICBhID0gYSB8fCAhMSwgdGhpcy50byh0aGlzLnJlbGF0aXZlKHRoaXMuY3VycmVudCgpKSAtIDEsIGEpXG4gICAgICAgIH0sIGUucHJvdG90eXBlLm9uVHJhbnNpdGlvbkVuZCA9IGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICBpZiAoYSAhPT0gZCAmJiAoYS5zdG9wUHJvcGFnYXRpb24oKSwgKGEudGFyZ2V0IHx8IGEuc3JjRWxlbWVudCB8fCBhLm9yaWdpbmFsVGFyZ2V0KSAhPT0gdGhpcy4kc3RhZ2UuZ2V0KDApKSkgcmV0dXJuICExO1xuICAgICAgICAgICAgdGhpcy5sZWF2ZShcImFuaW1hdGluZ1wiKSwgdGhpcy50cmlnZ2VyKFwidHJhbnNsYXRlZFwiKVxuICAgICAgICB9LCBlLnByb3RvdHlwZS52aWV3cG9ydCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBkO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy5yZXNwb25zaXZlQmFzZUVsZW1lbnQgIT09IGIgPyBkID0gYSh0aGlzLm9wdGlvbnMucmVzcG9uc2l2ZUJhc2VFbGVtZW50KS53aWR0aCgpIDogYi5pbm5lcldpZHRoID8gZCA9IGIuaW5uZXJXaWR0aCA6IGMuZG9jdW1lbnRFbGVtZW50ICYmIGMuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoID8gZCA9IGMuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoIDogY29uc29sZS53YXJuKFwiQ2FuIG5vdCBkZXRlY3Qgdmlld3BvcnQgd2lkdGguXCIpLCBkXG4gICAgICAgIH0sIGUucHJvdG90eXBlLnJlcGxhY2UgPSBmdW5jdGlvbiAoYikge1xuICAgICAgICAgICAgdGhpcy4kc3RhZ2UuZW1wdHkoKSwgdGhpcy5faXRlbXMgPSBbXSwgYiAmJiAoYiA9IGIgaW5zdGFuY2VvZiBqUXVlcnkgPyBiIDogYShiKSksIHRoaXMuc2V0dGluZ3MubmVzdGVkSXRlbVNlbGVjdG9yICYmIChiID0gYi5maW5kKFwiLlwiICsgdGhpcy5zZXR0aW5ncy5uZXN0ZWRJdGVtU2VsZWN0b3IpKSwgYi5maWx0ZXIoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAxID09PSB0aGlzLm5vZGVUeXBlXG4gICAgICAgICAgICB9KS5lYWNoKGEucHJveHkoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgICAgICAgICAgICBiID0gdGhpcy5wcmVwYXJlKGIpLCB0aGlzLiRzdGFnZS5hcHBlbmQoYiksIHRoaXMuX2l0ZW1zLnB1c2goYiksIHRoaXMuX21lcmdlcnMucHVzaCgxICogYi5maW5kKFwiW2RhdGEtbWVyZ2VdXCIpLmFkZEJhY2soXCJbZGF0YS1tZXJnZV1cIikuYXR0cihcImRhdGEtbWVyZ2VcIikgfHwgMSlcbiAgICAgICAgICAgIH0sIHRoaXMpKSwgdGhpcy5yZXNldCh0aGlzLmlzTnVtZXJpYyh0aGlzLnNldHRpbmdzLnN0YXJ0UG9zaXRpb24pID8gdGhpcy5zZXR0aW5ncy5zdGFydFBvc2l0aW9uIDogMCksIHRoaXMuaW52YWxpZGF0ZShcIml0ZW1zXCIpXG4gICAgICAgIH0sIGUucHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uIChiLCBjKSB7XG4gICAgICAgICAgICB2YXIgZSA9IHRoaXMucmVsYXRpdmUodGhpcy5fY3VycmVudCk7XG4gICAgICAgICAgICBjID0gYyA9PT0gZCA/IHRoaXMuX2l0ZW1zLmxlbmd0aCA6IHRoaXMubm9ybWFsaXplKGMsICEwKSwgYiA9IGIgaW5zdGFuY2VvZiBqUXVlcnkgPyBiIDogYShiKSwgdGhpcy50cmlnZ2VyKFwiYWRkXCIsIHtcbiAgICAgICAgICAgICAgICBjb250ZW50OiBiLFxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBjXG4gICAgICAgICAgICB9KSwgYiA9IHRoaXMucHJlcGFyZShiKSwgMCA9PT0gdGhpcy5faXRlbXMubGVuZ3RoIHx8IGMgPT09IHRoaXMuX2l0ZW1zLmxlbmd0aCA/ICgwID09PSB0aGlzLl9pdGVtcy5sZW5ndGggJiYgdGhpcy4kc3RhZ2UuYXBwZW5kKGIpLCAwICE9PSB0aGlzLl9pdGVtcy5sZW5ndGggJiYgdGhpcy5faXRlbXNbYyAtIDFdLmFmdGVyKGIpLCB0aGlzLl9pdGVtcy5wdXNoKGIpLCB0aGlzLl9tZXJnZXJzLnB1c2goMSAqIGIuZmluZChcIltkYXRhLW1lcmdlXVwiKS5hZGRCYWNrKFwiW2RhdGEtbWVyZ2VdXCIpLmF0dHIoXCJkYXRhLW1lcmdlXCIpIHx8IDEpKSA6ICh0aGlzLl9pdGVtc1tjXS5iZWZvcmUoYiksIHRoaXMuX2l0ZW1zLnNwbGljZShjLCAwLCBiKSwgdGhpcy5fbWVyZ2Vycy5zcGxpY2UoYywgMCwgMSAqIGIuZmluZChcIltkYXRhLW1lcmdlXVwiKS5hZGRCYWNrKFwiW2RhdGEtbWVyZ2VdXCIpLmF0dHIoXCJkYXRhLW1lcmdlXCIpIHx8IDEpKSwgdGhpcy5faXRlbXNbZV0gJiYgdGhpcy5yZXNldCh0aGlzLl9pdGVtc1tlXS5pbmRleCgpKSwgdGhpcy5pbnZhbGlkYXRlKFwiaXRlbXNcIiksIHRoaXMudHJpZ2dlcihcImFkZGVkXCIsIHtcbiAgICAgICAgICAgICAgICBjb250ZW50OiBiLFxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBjXG4gICAgICAgICAgICB9KVxuICAgICAgICB9LCBlLnByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbiAoYSkge1xuICAgICAgICAgICAgYSA9IHRoaXMubm9ybWFsaXplKGEsICEwKSwgYSAhPT0gZCAmJiAodGhpcy50cmlnZ2VyKFwicmVtb3ZlXCIsIHtcbiAgICAgICAgICAgICAgICBjb250ZW50OiB0aGlzLl9pdGVtc1thXSxcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYVxuICAgICAgICAgICAgfSksIHRoaXMuX2l0ZW1zW2FdLnJlbW92ZSgpLCB0aGlzLl9pdGVtcy5zcGxpY2UoYSwgMSksIHRoaXMuX21lcmdlcnMuc3BsaWNlKGEsIDEpLCB0aGlzLmludmFsaWRhdGUoXCJpdGVtc1wiKSwgdGhpcy50cmlnZ2VyKFwicmVtb3ZlZFwiLCB7XG4gICAgICAgICAgICAgICAgY29udGVudDogbnVsbCxcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYVxuICAgICAgICAgICAgfSkpXG4gICAgICAgIH0sIGUucHJvdG90eXBlLnByZWxvYWRBdXRvV2lkdGhJbWFnZXMgPSBmdW5jdGlvbiAoYikge1xuICAgICAgICAgICAgYi5lYWNoKGEucHJveHkoZnVuY3Rpb24gKGIsIGMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmVudGVyKFwicHJlLWxvYWRpbmdcIiksIGMgPSBhKGMpLCBhKG5ldyBJbWFnZSkub25lKFwibG9hZFwiLCBhLnByb3h5KGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICAgICAgICAgIGMuYXR0cihcInNyY1wiLCBhLnRhcmdldC5zcmMpLCBjLmNzcyhcIm9wYWNpdHlcIiwgMSksIHRoaXMubGVhdmUoXCJwcmUtbG9hZGluZ1wiKSwgIXRoaXMuaXMoXCJwcmUtbG9hZGluZ1wiKSAmJiAhdGhpcy5pcyhcImluaXRpYWxpemluZ1wiKSAmJiB0aGlzLnJlZnJlc2goKVxuICAgICAgICAgICAgICAgIH0sIHRoaXMpKS5hdHRyKFwic3JjXCIsIGMuYXR0cihcInNyY1wiKSB8fCBjLmF0dHIoXCJkYXRhLXNyY1wiKSB8fCBjLmF0dHIoXCJkYXRhLXNyYy1yZXRpbmFcIikpXG4gICAgICAgICAgICB9LCB0aGlzKSlcbiAgICAgICAgfSwgZS5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRoaXMuJGVsZW1lbnQub2ZmKFwiLm93bC5jb3JlXCIpLCB0aGlzLiRzdGFnZS5vZmYoXCIub3dsLmNvcmVcIiksIGEoYykub2ZmKFwiLm93bC5jb3JlXCIpLCB0aGlzLnNldHRpbmdzLnJlc3BvbnNpdmUgIT09ICExICYmIChiLmNsZWFyVGltZW91dCh0aGlzLnJlc2l6ZVRpbWVyKSwgdGhpcy5vZmYoYiwgXCJyZXNpemVcIiwgdGhpcy5faGFuZGxlcnMub25UaHJvdHRsZWRSZXNpemUpKTtcbiAgICAgICAgICAgIGZvciAodmFyIGQgaW4gdGhpcy5fcGx1Z2lucykgdGhpcy5fcGx1Z2luc1tkXS5kZXN0cm95KCk7XG4gICAgICAgICAgICB0aGlzLiRzdGFnZS5jaGlsZHJlbihcIi5jbG9uZWRcIikucmVtb3ZlKCksIHRoaXMuJHN0YWdlLnVud3JhcCgpLCB0aGlzLiRzdGFnZS5jaGlsZHJlbigpLmNvbnRlbnRzKCkudW53cmFwKCksIHRoaXMuJHN0YWdlLmNoaWxkcmVuKCkudW53cmFwKCksIHRoaXMuJGVsZW1lbnQucmVtb3ZlQ2xhc3ModGhpcy5vcHRpb25zLnJlZnJlc2hDbGFzcykucmVtb3ZlQ2xhc3ModGhpcy5vcHRpb25zLmxvYWRpbmdDbGFzcykucmVtb3ZlQ2xhc3ModGhpcy5vcHRpb25zLmxvYWRlZENsYXNzKS5yZW1vdmVDbGFzcyh0aGlzLm9wdGlvbnMucnRsQ2xhc3MpLnJlbW92ZUNsYXNzKHRoaXMub3B0aW9ucy5kcmFnQ2xhc3MpLnJlbW92ZUNsYXNzKHRoaXMub3B0aW9ucy5ncmFiQ2xhc3MpLmF0dHIoXCJjbGFzc1wiLCB0aGlzLiRlbGVtZW50LmF0dHIoXCJjbGFzc1wiKS5yZXBsYWNlKG5ldyBSZWdFeHAodGhpcy5vcHRpb25zLnJlc3BvbnNpdmVDbGFzcyArIFwiLVxcXFxTK1xcXFxzXCIsIFwiZ1wiKSwgXCJcIikpLnJlbW92ZURhdGEoXCJvd2wuY2Fyb3VzZWxcIilcbiAgICAgICAgfSwgZS5wcm90b3R5cGUub3AgPSBmdW5jdGlvbiAoYSwgYiwgYykge1xuICAgICAgICAgICAgdmFyIGQgPSB0aGlzLnNldHRpbmdzLnJ0bDtcbiAgICAgICAgICAgIHN3aXRjaCAoYikge1xuICAgICAgICAgICAgICAgIGNhc2VcIjxcIjpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGQgPyBhID4gYyA6IGEgPCBjO1xuICAgICAgICAgICAgICAgIGNhc2VcIj5cIjpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGQgPyBhIDwgYyA6IGEgPiBjO1xuICAgICAgICAgICAgICAgIGNhc2VcIj49XCI6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkID8gYSA8PSBjIDogYSA+PSBjO1xuICAgICAgICAgICAgICAgIGNhc2VcIjw9XCI6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkID8gYSA+PSBjIDogYSA8PSBjXG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIGUucHJvdG90eXBlLm9uID0gZnVuY3Rpb24gKGEsIGIsIGMsIGQpIHtcbiAgICAgICAgICAgIGEuYWRkRXZlbnRMaXN0ZW5lciA/IGEuYWRkRXZlbnRMaXN0ZW5lcihiLCBjLCBkKSA6IGEuYXR0YWNoRXZlbnQgJiYgYS5hdHRhY2hFdmVudChcIm9uXCIgKyBiLCBjKVxuICAgICAgICB9LCBlLnByb3RvdHlwZS5vZmYgPSBmdW5jdGlvbiAoYSwgYiwgYywgZCkge1xuICAgICAgICAgICAgYS5yZW1vdmVFdmVudExpc3RlbmVyID8gYS5yZW1vdmVFdmVudExpc3RlbmVyKGIsIGMsIGQpIDogYS5kZXRhY2hFdmVudCAmJiBhLmRldGFjaEV2ZW50KFwib25cIiArIGIsIGMpXG4gICAgICAgIH0sIGUucHJvdG90eXBlLnRyaWdnZXIgPSBmdW5jdGlvbiAoYiwgYywgZCwgZiwgZykge1xuICAgICAgICAgICAgdmFyIGggPSB7aXRlbToge2NvdW50OiB0aGlzLl9pdGVtcy5sZW5ndGgsIGluZGV4OiB0aGlzLmN1cnJlbnQoKX19LFxuICAgICAgICAgICAgICBpID0gYS5jYW1lbENhc2UoYS5ncmVwKFtcIm9uXCIsIGIsIGRdLCBmdW5jdGlvbiAoYSkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGFcbiAgICAgICAgICAgICAgfSkuam9pbihcIi1cIikudG9Mb3dlckNhc2UoKSksXG4gICAgICAgICAgICAgIGogPSBhLkV2ZW50KFtiLCBcIm93bFwiLCBkIHx8IFwiY2Fyb3VzZWxcIl0uam9pbihcIi5cIikudG9Mb3dlckNhc2UoKSwgYS5leHRlbmQoe3JlbGF0ZWRUYXJnZXQ6IHRoaXN9LCBoLCBjKSk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fc3VwcmVzc1tiXSB8fCAoYS5lYWNoKHRoaXMuX3BsdWdpbnMsIGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgICAgICAgICAgYi5vblRyaWdnZXIgJiYgYi5vblRyaWdnZXIoailcbiAgICAgICAgICAgIH0pLCB0aGlzLnJlZ2lzdGVyKHtcbiAgICAgICAgICAgICAgICB0eXBlOiBlLlR5cGUuRXZlbnQsXG4gICAgICAgICAgICAgICAgbmFtZTogYlxuICAgICAgICAgICAgfSksIHRoaXMuJGVsZW1lbnQudHJpZ2dlcihqKSwgdGhpcy5zZXR0aW5ncyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIHRoaXMuc2V0dGluZ3NbaV0gJiYgdGhpcy5zZXR0aW5nc1tpXS5jYWxsKHRoaXMsIGopKSwgalxuICAgICAgICB9LCBlLnByb3RvdHlwZS5lbnRlciA9IGZ1bmN0aW9uIChiKSB7XG4gICAgICAgICAgICBhLmVhY2goW2JdLmNvbmNhdCh0aGlzLl9zdGF0ZXMudGFnc1tiXSB8fCBbXSksIGEucHJveHkoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9zdGF0ZXMuY3VycmVudFtiXSA9PT0gZCAmJiAodGhpcy5fc3RhdGVzLmN1cnJlbnRbYl0gPSAwKSwgdGhpcy5fc3RhdGVzLmN1cnJlbnRbYl0rK1xuICAgICAgICAgICAgfSwgdGhpcykpXG4gICAgICAgIH0sIGUucHJvdG90eXBlLmxlYXZlID0gZnVuY3Rpb24gKGIpIHtcbiAgICAgICAgICAgIGEuZWFjaChbYl0uY29uY2F0KHRoaXMuX3N0YXRlcy50YWdzW2JdIHx8IFtdKSwgYS5wcm94eShmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICAgICAgICAgIHRoaXMuX3N0YXRlcy5jdXJyZW50W2JdLS1cbiAgICAgICAgICAgIH0sIHRoaXMpKVxuICAgICAgICB9LCBlLnByb3RvdHlwZS5yZWdpc3RlciA9IGZ1bmN0aW9uIChiKSB7XG4gICAgICAgICAgICBpZiAoYi50eXBlID09PSBlLlR5cGUuRXZlbnQpIHtcbiAgICAgICAgICAgICAgICBpZiAoYS5ldmVudC5zcGVjaWFsW2IubmFtZV0gfHwgKGEuZXZlbnQuc3BlY2lhbFtiLm5hbWVdID0ge30pLCAhYS5ldmVudC5zcGVjaWFsW2IubmFtZV0ub3dsKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBjID0gYS5ldmVudC5zcGVjaWFsW2IubmFtZV0uX2RlZmF1bHQ7XG4gICAgICAgICAgICAgICAgICAgIGEuZXZlbnQuc3BlY2lhbFtiLm5hbWVdLl9kZWZhdWx0ID0gZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAhYyB8fCAhYy5hcHBseSB8fCBhLm5hbWVzcGFjZSAmJiBhLm5hbWVzcGFjZS5pbmRleE9mKFwib3dsXCIpICE9PSAtMSA/IGEubmFtZXNwYWNlICYmIGEubmFtZXNwYWNlLmluZGV4T2YoXCJvd2xcIikgPiAtMSA6IGMuYXBwbHkodGhpcywgYXJndW1lbnRzKVxuICAgICAgICAgICAgICAgICAgICB9LCBhLmV2ZW50LnNwZWNpYWxbYi5uYW1lXS5vd2wgPSAhMFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSBiLnR5cGUgPT09IGUuVHlwZS5TdGF0ZSAmJiAodGhpcy5fc3RhdGVzLnRhZ3NbYi5uYW1lXSA/IHRoaXMuX3N0YXRlcy50YWdzW2IubmFtZV0gPSB0aGlzLl9zdGF0ZXMudGFnc1tiLm5hbWVdLmNvbmNhdChiLnRhZ3MpIDogdGhpcy5fc3RhdGVzLnRhZ3NbYi5uYW1lXSA9IGIudGFncywgdGhpcy5fc3RhdGVzLnRhZ3NbYi5uYW1lXSA9IGEuZ3JlcCh0aGlzLl9zdGF0ZXMudGFnc1tiLm5hbWVdLCBhLnByb3h5KGZ1bmN0aW9uIChjLCBkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGEuaW5BcnJheShjLCB0aGlzLl9zdGF0ZXMudGFnc1tiLm5hbWVdKSA9PT0gZFxuICAgICAgICAgICAgfSwgdGhpcykpKVxuICAgICAgICB9LCBlLnByb3RvdHlwZS5zdXBwcmVzcyA9IGZ1bmN0aW9uIChiKSB7XG4gICAgICAgICAgICBhLmVhY2goYiwgYS5wcm94eShmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICAgICAgICAgIHRoaXMuX3N1cHJlc3NbYl0gPSAhMFxuICAgICAgICAgICAgfSwgdGhpcykpXG4gICAgICAgIH0sIGUucHJvdG90eXBlLnJlbGVhc2UgPSBmdW5jdGlvbiAoYikge1xuICAgICAgICAgICAgYS5lYWNoKGIsIGEucHJveHkoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgICAgICAgICAgICBkZWxldGUgdGhpcy5fc3VwcmVzc1tiXVxuICAgICAgICAgICAgfSwgdGhpcykpXG4gICAgICAgIH0sIGUucHJvdG90eXBlLnBvaW50ZXIgPSBmdW5jdGlvbiAoYSkge1xuICAgICAgICAgICAgdmFyIGMgPSB7eDogbnVsbCwgeTogbnVsbH07XG4gICAgICAgICAgICByZXR1cm4gYSA9IGEub3JpZ2luYWxFdmVudCB8fCBhIHx8IGIuZXZlbnQsIGEgPSBhLnRvdWNoZXMgJiYgYS50b3VjaGVzLmxlbmd0aCA/IGEudG91Y2hlc1swXSA6IGEuY2hhbmdlZFRvdWNoZXMgJiYgYS5jaGFuZ2VkVG91Y2hlcy5sZW5ndGggPyBhLmNoYW5nZWRUb3VjaGVzWzBdIDogYSwgYS5wYWdlWCA/IChjLnggPSBhLnBhZ2VYLCBjLnkgPSBhLnBhZ2VZKSA6IChjLnggPSBhLmNsaWVudFgsIGMueSA9IGEuY2xpZW50WSksIGNcbiAgICAgICAgfSwgZS5wcm90b3R5cGUuaXNOdW1lcmljID0gZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgICAgIHJldHVybiAhaXNOYU4ocGFyc2VGbG9hdChhKSlcbiAgICAgICAgfSwgZS5wcm90b3R5cGUuZGlmZmVyZW5jZSA9IGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgICAgICByZXR1cm4ge3g6IGEueCAtIGIueCwgeTogYS55IC0gYi55fVxuICAgICAgICB9LCBhLmZuLnNieU93bENhcm91c2VsID0gZnVuY3Rpb24gKGIpIHtcbiAgICAgICAgICAgIHZhciBjID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBkID0gYSh0aGlzKSwgZiA9IGQuZGF0YShcIm93bC5jYXJvdXNlbFwiKTtcbiAgICAgICAgICAgICAgICBmIHx8IChmID0gbmV3IGUodGhpcywgXCJvYmplY3RcIiA9PSB0eXBlb2YgYiAmJiBiKSwgZC5kYXRhKFwib3dsLmNhcm91c2VsXCIsIGYpLCBhLmVhY2goW1wibmV4dFwiLCBcInByZXZcIiwgXCJ0b1wiLCBcImRlc3Ryb3lcIiwgXCJyZWZyZXNoXCIsIFwicmVwbGFjZVwiLCBcImFkZFwiLCBcInJlbW92ZVwiXSwgZnVuY3Rpb24gKGIsIGMpIHtcbiAgICAgICAgICAgICAgICAgICAgZi5yZWdpc3Rlcih7XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBlLlR5cGUuRXZlbnQsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBjXG4gICAgICAgICAgICAgICAgICAgIH0pLCBmLiRlbGVtZW50Lm9uKGMgKyBcIi5vd2wuY2Fyb3VzZWwuY29yZVwiLCBhLnByb3h5KGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhLm5hbWVzcGFjZSAmJiBhLnJlbGF0ZWRUYXJnZXQgIT09IHRoaXMgJiYgKHRoaXMuc3VwcHJlc3MoW2NdKSwgZltjXS5hcHBseSh0aGlzLCBbXS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSkpLCB0aGlzLnJlbGVhc2UoW2NdKSlcbiAgICAgICAgICAgICAgICAgICAgfSwgZikpXG4gICAgICAgICAgICAgICAgfSkpLCBcInN0cmluZ1wiID09IHR5cGVvZiBiICYmIFwiX1wiICE9PSBiLmNoYXJBdCgwKSAmJiBmW2JdLmFwcGx5KGYsIGMpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9LCBhLmZuLnNieU93bENhcm91c2VsLkNvbnN0cnVjdG9yID0gZVxuICAgIH0od2luZG93LlplcHRvIHx8IHdpbmRvdy5qUXVlcnksIHdpbmRvdywgZG9jdW1lbnQpLCBmdW5jdGlvbiAoYSwgYiwgYywgZCkge1xuICAgICAgICB2YXIgZSA9IGZ1bmN0aW9uIChiKSB7XG4gICAgICAgICAgICB0aGlzLl9jb3JlID0gYiwgdGhpcy5faW50ZXJ2YWwgPSBudWxsLCB0aGlzLl92aXNpYmxlID0gbnVsbCwgdGhpcy5faGFuZGxlcnMgPSB7XG4gICAgICAgICAgICAgICAgXCJpbml0aWFsaXplZC5vd2wuY2Fyb3VzZWxcIjogYS5wcm94eShmdW5jdGlvbiAoYSkge1xuICAgICAgICAgICAgICAgICAgICBhLm5hbWVzcGFjZSAmJiB0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9SZWZyZXNoICYmIHRoaXMud2F0Y2goKVxuICAgICAgICAgICAgICAgIH0sIHRoaXMpXG4gICAgICAgICAgICB9LCB0aGlzLl9jb3JlLm9wdGlvbnMgPSBhLmV4dGVuZCh7fSwgZS5EZWZhdWx0cywgdGhpcy5fY29yZS5vcHRpb25zKSwgdGhpcy5fY29yZS4kZWxlbWVudC5vbih0aGlzLl9oYW5kbGVycylcbiAgICAgICAgfTtcbiAgICAgICAgZS5EZWZhdWx0cyA9IHthdXRvUmVmcmVzaDogITAsIGF1dG9SZWZyZXNoSW50ZXJ2YWw6IDUwMH0sIGUucHJvdG90eXBlLndhdGNoID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGhpcy5faW50ZXJ2YWwgfHwgKHRoaXMuX3Zpc2libGUgPSB0aGlzLl9jb3JlLiRlbGVtZW50LmlzKFwiOnZpc2libGVcIiksIHRoaXMuX2ludGVydmFsID0gYi5zZXRJbnRlcnZhbChhLnByb3h5KHRoaXMucmVmcmVzaCwgdGhpcyksIHRoaXMuX2NvcmUuc2V0dGluZ3MuYXV0b1JlZnJlc2hJbnRlcnZhbCkpXG4gICAgICAgIH0sIGUucHJvdG90eXBlLnJlZnJlc2ggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aGlzLl9jb3JlLiRlbGVtZW50LmlzKFwiOnZpc2libGVcIikgIT09IHRoaXMuX3Zpc2libGUgJiYgKHRoaXMuX3Zpc2libGUgPSAhdGhpcy5fdmlzaWJsZSwgdGhpcy5fY29yZS4kZWxlbWVudC50b2dnbGVDbGFzcyhcInNieS1vd2wtaGlkZGVuXCIsICF0aGlzLl92aXNpYmxlKSwgdGhpcy5fdmlzaWJsZSAmJiB0aGlzLl9jb3JlLmludmFsaWRhdGUoXCJ3aWR0aFwiKSAmJiB0aGlzLl9jb3JlLnJlZnJlc2goKSlcbiAgICAgICAgfSwgZS5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBhLCBjO1xuICAgICAgICAgICAgYi5jbGVhckludGVydmFsKHRoaXMuX2ludGVydmFsKTtcbiAgICAgICAgICAgIGZvciAoYSBpbiB0aGlzLl9oYW5kbGVycykgdGhpcy5fY29yZS4kZWxlbWVudC5vZmYoYSwgdGhpcy5faGFuZGxlcnNbYV0pO1xuICAgICAgICAgICAgZm9yIChjIGluIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRoaXMpKSBcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIHRoaXNbY10gJiYgKHRoaXNbY10gPSBudWxsKVxuICAgICAgICB9LCBhLmZuLnNieU93bENhcm91c2VsLkNvbnN0cnVjdG9yLlBsdWdpbnMuQXV0b1JlZnJlc2ggPSBlXG4gICAgfSh3aW5kb3cuWmVwdG8gfHwgd2luZG93LmpRdWVyeSwgd2luZG93LCBkb2N1bWVudCksIGZ1bmN0aW9uIChhLCBiLCBjLCBkKSB7XG4gICAgICAgIHZhciBlID0gZnVuY3Rpb24gKGIpIHtcbiAgICAgICAgICAgIHRoaXMuX2NvcmUgPSBiLCB0aGlzLl9sb2FkZWQgPSBbXSwgdGhpcy5faGFuZGxlcnMgPSB7XG4gICAgICAgICAgICAgICAgXCJpbml0aWFsaXplZC5vd2wuY2Fyb3VzZWwgY2hhbmdlLm93bC5jYXJvdXNlbCByZXNpemVkLm93bC5jYXJvdXNlbFwiOiBhLnByb3h5KGZ1bmN0aW9uIChiKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChiLm5hbWVzcGFjZSAmJiB0aGlzLl9jb3JlLnNldHRpbmdzICYmIHRoaXMuX2NvcmUuc2V0dGluZ3MubGF6eUxvYWQgJiYgKGIucHJvcGVydHkgJiYgXCJwb3NpdGlvblwiID09IGIucHJvcGVydHkubmFtZSB8fCBcImluaXRpYWxpemVkXCIgPT0gYi50eXBlKSkgZm9yICh2YXIgYyA9IHRoaXMuX2NvcmUuc2V0dGluZ3MsIGUgPSBjLmNlbnRlciAmJiBNYXRoLmNlaWwoYy5pdGVtcyAvIDIpIHx8IGMuaXRlbXMsIGYgPSBjLmNlbnRlciAmJiBlICogLTEgfHwgMCwgZyA9IChiLnByb3BlcnR5ICYmIGIucHJvcGVydHkudmFsdWUgIT09IGQgPyBiLnByb3BlcnR5LnZhbHVlIDogdGhpcy5fY29yZS5jdXJyZW50KCkpICsgZiwgaCA9IHRoaXMuX2NvcmUuY2xvbmVzKCkubGVuZ3RoLCBpID0gYS5wcm94eShmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2FkKGIpXG4gICAgICAgICAgICAgICAgICAgIH0sIHRoaXMpOyBmKysgPCBlOykgdGhpcy5sb2FkKGggLyAyICsgdGhpcy5fY29yZS5yZWxhdGl2ZShnKSksIGggJiYgYS5lYWNoKHRoaXMuX2NvcmUuY2xvbmVzKHRoaXMuX2NvcmUucmVsYXRpdmUoZykpLCBpKSwgZysrXG4gICAgICAgICAgICAgICAgfSwgdGhpcylcbiAgICAgICAgICAgIH0sIHRoaXMuX2NvcmUub3B0aW9ucyA9IGEuZXh0ZW5kKHt9LCBlLkRlZmF1bHRzLCB0aGlzLl9jb3JlLm9wdGlvbnMpLCB0aGlzLl9jb3JlLiRlbGVtZW50Lm9uKHRoaXMuX2hhbmRsZXJzKVxuICAgICAgICB9O1xuICAgICAgICBlLkRlZmF1bHRzID0ge2xhenlMb2FkOiAhMX0sIGUucHJvdG90eXBlLmxvYWQgPSBmdW5jdGlvbiAoYykge1xuICAgICAgICAgICAgdmFyIGQgPSB0aGlzLl9jb3JlLiRzdGFnZS5jaGlsZHJlbigpLmVxKGMpLCBlID0gZCAmJiBkLmZpbmQoXCIuc2J5LW93bC1sYXp5XCIpO1xuICAgICAgICAgICAgIWUgfHwgYS5pbkFycmF5KGQuZ2V0KDApLCB0aGlzLl9sb2FkZWQpID4gLTEgfHwgKGUuZWFjaChhLnByb3h5KGZ1bmN0aW9uIChjLCBkKSB7XG4gICAgICAgICAgICAgICAgdmFyIGUsIGYgPSBhKGQpLCBnID0gYi5kZXZpY2VQaXhlbFJhdGlvID4gMSAmJiBmLmF0dHIoXCJkYXRhLXNyYy1yZXRpbmFcIikgfHwgZi5hdHRyKFwiZGF0YS1zcmNcIik7XG4gICAgICAgICAgICAgICAgdGhpcy5fY29yZS50cmlnZ2VyKFwibG9hZFwiLCB7XG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQ6IGYsXG4gICAgICAgICAgICAgICAgICAgIHVybDogZ1xuICAgICAgICAgICAgICAgIH0sIFwibGF6eVwiKSwgZi5pcyhcImltZ1wiKSA/IGYub25lKFwibG9hZC5vd2wubGF6eVwiLCBhLnByb3h5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgZi5jc3MoXCJvcGFjaXR5XCIsIDEpLCB0aGlzLl9jb3JlLnRyaWdnZXIoXCJsb2FkZWRcIiwge2VsZW1lbnQ6IGYsIHVybDogZ30sIFwibGF6eVwiKVxuICAgICAgICAgICAgICAgIH0sIHRoaXMpKS5hdHRyKFwic3JjXCIsIGcpIDogKGUgPSBuZXcgSW1hZ2UsIGUub25sb2FkID0gYS5wcm94eShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGYuY3NzKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiYmFja2dyb3VuZC1pbWFnZVwiOiAndXJsKFwiJyArIGcgKyAnXCIpJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IFwiMVwiXG4gICAgICAgICAgICAgICAgICAgIH0pLCB0aGlzLl9jb3JlLnRyaWdnZXIoXCJsb2FkZWRcIiwge2VsZW1lbnQ6IGYsIHVybDogZ30sIFwibGF6eVwiKVxuICAgICAgICAgICAgICAgIH0sIHRoaXMpLCBlLnNyYyA9IGcpXG4gICAgICAgICAgICB9LCB0aGlzKSksIHRoaXMuX2xvYWRlZC5wdXNoKGQuZ2V0KDApKSlcbiAgICAgICAgfSwgZS5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBhLCBiO1xuICAgICAgICAgICAgZm9yIChhIGluIHRoaXMuaGFuZGxlcnMpIHRoaXMuX2NvcmUuJGVsZW1lbnQub2ZmKGEsIHRoaXMuaGFuZGxlcnNbYV0pO1xuICAgICAgICAgICAgZm9yIChiIGluIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRoaXMpKSBcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIHRoaXNbYl0gJiYgKHRoaXNbYl0gPSBudWxsKVxuICAgICAgICB9LCBhLmZuLnNieU93bENhcm91c2VsLkNvbnN0cnVjdG9yLlBsdWdpbnMuTGF6eSA9IGVcbiAgICB9KHdpbmRvdy5aZXB0byB8fCB3aW5kb3cualF1ZXJ5LCB3aW5kb3csIGRvY3VtZW50KSwgZnVuY3Rpb24gKGEsIGIsIGMsIGQpIHtcbiAgICAgICAgdmFyIGUgPSBmdW5jdGlvbiAoYikge1xuICAgICAgICAgICAgdGhpcy5fY29yZSA9IGIsIHRoaXMuX2hhbmRsZXJzID0ge1xuICAgICAgICAgICAgICAgIFwiaW5pdGlhbGl6ZWQub3dsLmNhcm91c2VsIHJlZnJlc2hlZC5vd2wuY2Fyb3VzZWxcIjogYS5wcm94eShmdW5jdGlvbiAoYSkge1xuICAgICAgICAgICAgICAgICAgICBhLm5hbWVzcGFjZSAmJiB0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9IZWlnaHQgJiYgdGhpcy51cGRhdGUoKVxuICAgICAgICAgICAgICAgIH0sIHRoaXMpLCBcImNoYW5nZWQub3dsLmNhcm91c2VsXCI6IGEucHJveHkoZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgICAgICAgICAgICAgYS5uYW1lc3BhY2UgJiYgdGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvSGVpZ2h0ICYmIFwicG9zaXRpb25cIiA9PSBhLnByb3BlcnR5Lm5hbWUgJiYgdGhpcy51cGRhdGUoKVxuICAgICAgICAgICAgICAgIH0sIHRoaXMpLCBcImxvYWRlZC5vd2wubGF6eVwiOiBhLnByb3h5KGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICAgICAgICAgIGEubmFtZXNwYWNlICYmIHRoaXMuX2NvcmUuc2V0dGluZ3MuYXV0b0hlaWdodCAmJiBhLmVsZW1lbnQuY2xvc2VzdChcIi5cIiArIHRoaXMuX2NvcmUuc2V0dGluZ3MuaXRlbUNsYXNzKS5pbmRleCgpID09PSB0aGlzLl9jb3JlLmN1cnJlbnQoKSAmJiB0aGlzLnVwZGF0ZSgpXG4gICAgICAgICAgICAgICAgfSwgdGhpcylcbiAgICAgICAgICAgIH0sIHRoaXMuX2NvcmUub3B0aW9ucyA9IGEuZXh0ZW5kKHt9LCBlLkRlZmF1bHRzLCB0aGlzLl9jb3JlLm9wdGlvbnMpLCB0aGlzLl9jb3JlLiRlbGVtZW50Lm9uKHRoaXMuX2hhbmRsZXJzKVxuICAgICAgICB9O1xuICAgICAgICBlLkRlZmF1bHRzID0ge2F1dG9IZWlnaHQ6ICExLCBhdXRvSGVpZ2h0Q2xhc3M6IFwic2J5LW93bC1oZWlnaHRcIn0sIGUucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBiID0gdGhpcy5fY29yZS5fY3VycmVudCwgYyA9IGIgKyB0aGlzLl9jb3JlLnNldHRpbmdzLml0ZW1zLFxuICAgICAgICAgICAgICBkID0gdGhpcy5fY29yZS4kc3RhZ2UuY2hpbGRyZW4oKS50b0FycmF5KCkuc2xpY2UoYiwgYyksIGUgPSBbXSwgZiA9IDA7XG4gICAgICAgICAgICBhLmVhY2goZCwgZnVuY3Rpb24gKGIsIGMpIHtcbiAgICAgICAgICAgICAgICBlLnB1c2goYShjKS5oZWlnaHQoKSlcbiAgICAgICAgICAgIH0pLCBmID0gTWF0aC5tYXguYXBwbHkobnVsbCwgZSksIHRoaXMuX2NvcmUuJHN0YWdlLnBhcmVudCgpLmhlaWdodChmKS5hZGRDbGFzcyh0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9IZWlnaHRDbGFzcylcbiAgICAgICAgfSwgZS5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBhLCBiO1xuICAgICAgICAgICAgZm9yIChhIGluIHRoaXMuX2hhbmRsZXJzKSB0aGlzLl9jb3JlLiRlbGVtZW50Lm9mZihhLCB0aGlzLl9oYW5kbGVyc1thXSk7XG4gICAgICAgICAgICBmb3IgKGIgaW4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpIFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgdGhpc1tiXSAmJiAodGhpc1tiXSA9IG51bGwpXG4gICAgICAgIH0sIGEuZm4uc2J5T3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5BdXRvSGVpZ2h0ID0gZVxuICAgIH0od2luZG93LlplcHRvIHx8IHdpbmRvdy5qUXVlcnksIHdpbmRvdywgZG9jdW1lbnQpLCBmdW5jdGlvbiAoYSwgYiwgYywgZCkge1xuICAgICAgICB2YXIgZSA9IGZ1bmN0aW9uIChiKSB7XG4gICAgICAgICAgICB0aGlzLl9jb3JlID0gYiwgdGhpcy5fdmlkZW9zID0ge30sIHRoaXMuX3BsYXlpbmcgPSBudWxsLCB0aGlzLl9oYW5kbGVycyA9IHtcbiAgICAgICAgICAgICAgICBcImluaXRpYWxpemVkLm93bC5jYXJvdXNlbFwiOiBhLnByb3h5KGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICAgICAgICAgIGEubmFtZXNwYWNlICYmIHRoaXMuX2NvcmUucmVnaXN0ZXIoe3R5cGU6IFwic3RhdGVcIiwgbmFtZTogXCJwbGF5aW5nXCIsIHRhZ3M6IFtcImludGVyYWN0aW5nXCJdfSlcbiAgICAgICAgICAgICAgICB9LCB0aGlzKSwgXCJyZXNpemUub3dsLmNhcm91c2VsXCI6IGEucHJveHkoZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgICAgICAgICAgICAgYS5uYW1lc3BhY2UgJiYgdGhpcy5fY29yZS5zZXR0aW5ncy52aWRlbyAmJiB0aGlzLmlzSW5GdWxsU2NyZWVuKCkgJiYgYS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgICAgICAgICAgfSwgdGhpcyksIFwicmVmcmVzaGVkLm93bC5jYXJvdXNlbFwiOiBhLnByb3h5KGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICAgICAgICAgIGEubmFtZXNwYWNlICYmIHRoaXMuX2NvcmUuaXMoXCJyZXNpemluZ1wiKSAmJiB0aGlzLl9jb3JlLiRzdGFnZS5maW5kKFwiLmNsb25lZCAuc2J5LW93bC12aWRlby1mcmFtZVwiKS5yZW1vdmUoKVxuICAgICAgICAgICAgICAgIH0sIHRoaXMpLCBcImNoYW5nZWQub3dsLmNhcm91c2VsXCI6IGEucHJveHkoZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgICAgICAgICAgICAgYS5uYW1lc3BhY2UgJiYgXCJwb3NpdGlvblwiID09PSBhLnByb3BlcnR5Lm5hbWUgJiYgdGhpcy5fcGxheWluZyAmJiB0aGlzLnN0b3AoKVxuICAgICAgICAgICAgICAgIH0sIHRoaXMpLCBcInByZXBhcmVkLm93bC5jYXJvdXNlbFwiOiBhLnByb3h5KGZ1bmN0aW9uIChiKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChiLm5hbWVzcGFjZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGMgPSBhKGIuY29udGVudCkuZmluZChcIi5zYnktb3dsLXZpZGVvXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYy5sZW5ndGggJiYgKGMuY3NzKFwiZGlzcGxheVwiLCBcIm5vbmVcIiksIHRoaXMuZmV0Y2goYywgYShiLmNvbnRlbnQpKSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sIHRoaXMpXG4gICAgICAgICAgICB9LCB0aGlzLl9jb3JlLm9wdGlvbnMgPSBhLmV4dGVuZCh7fSwgZS5EZWZhdWx0cywgdGhpcy5fY29yZS5vcHRpb25zKSwgdGhpcy5fY29yZS4kZWxlbWVudC5vbih0aGlzLl9oYW5kbGVycyksIHRoaXMuX2NvcmUuJGVsZW1lbnQub24oXCJjbGljay5vd2wudmlkZW9cIiwgXCIuc2J5LW93bC12aWRlby1wbGF5LWljb25cIiwgYS5wcm94eShmdW5jdGlvbiAoYSkge1xuICAgICAgICAgICAgICAgIHRoaXMucGxheShhKVxuICAgICAgICAgICAgfSwgdGhpcykpXG4gICAgICAgIH07XG4gICAgICAgIGUuRGVmYXVsdHMgPSB7dmlkZW86ICExLCB2aWRlb0hlaWdodDogITEsIHZpZGVvV2lkdGg6ICExfSwgZS5wcm90b3R5cGUuZmV0Y2ggPSBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICAgICAgdmFyIGMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gYS5hdHRyKFwiZGF0YS12aW1lby1pZFwiKSA/IFwidmltZW9cIiA6IGEuYXR0cihcImRhdGEtdnphYXItaWRcIikgPyBcInZ6YWFyXCIgOiBcInlvdXR1YmVcIlxuICAgICAgICAgICAgICB9KCksIGQgPSBhLmF0dHIoXCJkYXRhLXZpbWVvLWlkXCIpIHx8IGEuYXR0cihcImRhdGEteW91dHViZS1pZFwiKSB8fCBhLmF0dHIoXCJkYXRhLXZ6YWFyLWlkXCIpLFxuICAgICAgICAgICAgICBlID0gYS5hdHRyKFwiZGF0YS13aWR0aFwiKSB8fCB0aGlzLl9jb3JlLnNldHRpbmdzLnZpZGVvV2lkdGgsXG4gICAgICAgICAgICAgIGYgPSBhLmF0dHIoXCJkYXRhLWhlaWdodFwiKSB8fCB0aGlzLl9jb3JlLnNldHRpbmdzLnZpZGVvSGVpZ2h0LCBnID0gYS5hdHRyKFwiaHJlZlwiKTtcbiAgICAgICAgICAgIGlmICghZykgdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyB2aWRlbyBVUkwuXCIpO1xuICAgICAgICAgICAgaWYgKGQgPSBnLm1hdGNoKC8oaHR0cDp8aHR0cHM6fClcXC9cXC8ocGxheWVyLnx3d3cufGFwcC4pPyh2aW1lb1xcLmNvbXx5b3V0dShiZVxcLmNvbXxcXC5iZXxiZVxcLmdvb2dsZWFwaXNcXC5jb20pfHZ6YWFyXFwuY29tKVxcLyh2aWRlb1xcL3x2aWRlb3NcXC98ZW1iZWRcXC98Y2hhbm5lbHNcXC8uK1xcL3xncm91cHNcXC8uK1xcL3x3YXRjaFxcP3Y9fHZcXC8pPyhbQS1aYS16MC05Ll8lLV0qKShcXCZcXFMrKT8vKSwgZFszXS5pbmRleE9mKFwieW91dHVcIikgPiAtMSkgYyA9IFwieW91dHViZVwiOyBlbHNlIGlmIChkWzNdLmluZGV4T2YoXCJ2aW1lb1wiKSA+IC0xKSBjID0gXCJ2aW1lb1wiOyBlbHNlIHtcbiAgICAgICAgICAgICAgICBpZiAoIShkWzNdLmluZGV4T2YoXCJ2emFhclwiKSA+IC0xKSkgdGhyb3cgbmV3IEVycm9yKFwiVmlkZW8gVVJMIG5vdCBzdXBwb3J0ZWQuXCIpO1xuICAgICAgICAgICAgICAgIGMgPSBcInZ6YWFyXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGQgPSBkWzZdLCB0aGlzLl92aWRlb3NbZ10gPSB7XG4gICAgICAgICAgICAgICAgdHlwZTogYyxcbiAgICAgICAgICAgICAgICBpZDogZCxcbiAgICAgICAgICAgICAgICB3aWR0aDogZSxcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IGZcbiAgICAgICAgICAgIH0sIGIuYXR0cihcImRhdGEtdmlkZW9cIiwgZyksIHRoaXMudGh1bWJuYWlsKGEsIHRoaXMuX3ZpZGVvc1tnXSlcbiAgICAgICAgfSwgZS5wcm90b3R5cGUudGh1bWJuYWlsID0gZnVuY3Rpb24gKGIsIGMpIHtcbiAgICAgICAgICAgIHZhciBkLCBlLCBmLCBnID0gYy53aWR0aCAmJiBjLmhlaWdodCA/ICdzdHlsZT1cIndpZHRoOicgKyBjLndpZHRoICsgXCJweDtoZWlnaHQ6XCIgKyBjLmhlaWdodCArICdweDtcIicgOiBcIlwiLFxuICAgICAgICAgICAgICBoID0gYi5maW5kKFwiaW1nXCIpLCBpID0gXCJzcmNcIiwgaiA9IFwiXCIsIGsgPSB0aGlzLl9jb3JlLnNldHRpbmdzLCBsID0gZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgICAgICAgICAgIGUgPSAnPGRpdiBjbGFzcz1cInNieS1vd2wtdmlkZW8tcGxheS1pY29uXCI+PC9kaXY+JywgZCA9IGsubGF6eUxvYWQgPyAnPGRpdiBjbGFzcz1cInNieS1vd2wtdmlkZW8tdG4gJyArIGogKyAnXCIgJyArIGkgKyAnPVwiJyArIGEgKyAnXCI+PC9kaXY+JyA6ICc8ZGl2IGNsYXNzPVwic2J5LW93bC12aWRlby10blwiIHN0eWxlPVwib3BhY2l0eToxO2JhY2tncm91bmQtaW1hZ2U6dXJsKCcgKyBhICsgJylcIj48L2Rpdj4nLCBiLmFmdGVyKGQpLCBiLmFmdGVyKGUpXG4gICAgICAgICAgICAgIH07XG4gICAgICAgICAgICBpZiAoYi53cmFwKCc8ZGl2IGNsYXNzPVwic2J5LW93bC12aWRlby13cmFwcGVyXCInICsgZyArIFwiPjwvZGl2PlwiKSwgdGhpcy5fY29yZS5zZXR0aW5ncy5sYXp5TG9hZCAmJiAoaSA9IFwiZGF0YS1zcmNcIiwgaiA9IFwic2J5LW93bC1sYXp5XCIpLCBoLmxlbmd0aCkgcmV0dXJuIGwoaC5hdHRyKGkpKSwgaC5yZW1vdmUoKSwgITE7XG4gICAgICAgICAgICBcInlvdXR1YmVcIiA9PT0gYy50eXBlID8gKGYgPSBcIi8vaW1nLnlvdXR1YmUuY29tL3ZpL1wiICsgYy5pZCArIFwiL2hxZGVmYXVsdC5qcGdcIiwgbChmKSkgOiBcInZpbWVvXCIgPT09IGMudHlwZSA/IGEuYWpheCh7XG4gICAgICAgICAgICAgICAgdHlwZTogXCJHRVRcIixcbiAgICAgICAgICAgICAgICB1cmw6IFwiLy92aW1lby5jb20vYXBpL3YyL3ZpZGVvL1wiICsgYy5pZCArIFwiLmpzb25cIixcbiAgICAgICAgICAgICAgICBqc29ucDogXCJjYWxsYmFja1wiLFxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25wXCIsXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgICAgICAgICAgICAgZiA9IGFbMF0udGh1bWJuYWlsX2xhcmdlLCBsKGYpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkgOiBcInZ6YWFyXCIgPT09IGMudHlwZSAmJiBhLmFqYXgoe1xuICAgICAgICAgICAgICAgIHR5cGU6IFwiR0VUXCIsXG4gICAgICAgICAgICAgICAgdXJsOiBcIi8vdnphYXIuY29tL2FwaS92aWRlb3MvXCIgKyBjLmlkICsgXCIuanNvblwiLFxuICAgICAgICAgICAgICAgIGpzb25wOiBcImNhbGxiYWNrXCIsXG4gICAgICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvbnBcIixcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoYSkge1xuICAgICAgICAgICAgICAgICAgICBmID0gYS5mcmFtZWdyYWJfdXJsLCBsKGYpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSwgZS5wcm90b3R5cGUuc3RvcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRoaXMuX2NvcmUudHJpZ2dlcihcInN0b3BcIiwgbnVsbCwgXCJ2aWRlb1wiKSwgdGhpcy5fcGxheWluZy5maW5kKFwiLnNieS1vd2wtdmlkZW8tZnJhbWVcIikucmVtb3ZlKCksIHRoaXMuX3BsYXlpbmcucmVtb3ZlQ2xhc3MoXCJzYnktb3dsLXZpZGVvLXBsYXlpbmdcIiksIHRoaXMuX3BsYXlpbmcgPSBudWxsLCB0aGlzLl9jb3JlLmxlYXZlKFwicGxheWluZ1wiKSwgdGhpcy5fY29yZS50cmlnZ2VyKFwic3RvcHBlZFwiLCBudWxsLCBcInZpZGVvXCIpXG4gICAgICAgIH0sIGUucHJvdG90eXBlLnBsYXkgPSBmdW5jdGlvbiAoYikge1xuICAgICAgICAgICAgdmFyIGMsIGQgPSBhKGIudGFyZ2V0KSwgZSA9IGQuY2xvc2VzdChcIi5cIiArIHRoaXMuX2NvcmUuc2V0dGluZ3MuaXRlbUNsYXNzKSxcbiAgICAgICAgICAgICAgZiA9IHRoaXMuX3ZpZGVvc1tlLmF0dHIoXCJkYXRhLXZpZGVvXCIpXSwgZyA9IGYud2lkdGggfHwgXCIxMDAlXCIsXG4gICAgICAgICAgICAgIGggPSBmLmhlaWdodCB8fCB0aGlzLl9jb3JlLiRzdGFnZS5oZWlnaHQoKTtcbiAgICAgICAgICAgIHRoaXMuX3BsYXlpbmcgfHwgKHRoaXMuX2NvcmUuZW50ZXIoXCJwbGF5aW5nXCIpLCB0aGlzLl9jb3JlLnRyaWdnZXIoXCJwbGF5XCIsIG51bGwsIFwidmlkZW9cIiksIGUgPSB0aGlzLl9jb3JlLml0ZW1zKHRoaXMuX2NvcmUucmVsYXRpdmUoZS5pbmRleCgpKSksIHRoaXMuX2NvcmUucmVzZXQoZS5pbmRleCgpKSwgXCJ5b3V0dWJlXCIgPT09IGYudHlwZSA/IGMgPSAnPGlmcmFtZSB3aWR0aD1cIicgKyBnICsgJ1wiIGhlaWdodD1cIicgKyBoICsgJ1wiIHNyYz1cIi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkLycgKyBmLmlkICsgXCI/YXV0b3BsYXk9MSZyZWw9MCZ2PVwiICsgZi5pZCArICdcIiBmcmFtZWJvcmRlcj1cIjBcIiBhbGxvd2Z1bGxzY3JlZW4+PC9pZnJhbWU+JyA6IFwidmltZW9cIiA9PT0gZi50eXBlID8gYyA9ICc8aWZyYW1lIHNyYz1cIi8vcGxheWVyLnZpbWVvLmNvbS92aWRlby8nICsgZi5pZCArICc/YXV0b3BsYXk9MVwiIHdpZHRoPVwiJyArIGcgKyAnXCIgaGVpZ2h0PVwiJyArIGggKyAnXCIgZnJhbWVib3JkZXI9XCIwXCIgd2Via2l0YWxsb3dmdWxsc2NyZWVuIG1vemFsbG93ZnVsbHNjcmVlbiBhbGxvd2Z1bGxzY3JlZW4+PC9pZnJhbWU+JyA6IFwidnphYXJcIiA9PT0gZi50eXBlICYmIChjID0gJzxpZnJhbWUgZnJhbWVib3JkZXI9XCIwXCJoZWlnaHQ9XCInICsgaCArICdcIndpZHRoPVwiJyArIGcgKyAnXCIgYWxsb3dmdWxsc2NyZWVuIG1vemFsbG93ZnVsbHNjcmVlbiB3ZWJraXRBbGxvd0Z1bGxTY3JlZW4gc3JjPVwiLy92aWV3LnZ6YWFyLmNvbS8nICsgZi5pZCArICcvcGxheWVyP2F1dG9wbGF5PXRydWVcIj48L2lmcmFtZT4nKSwgYSgnPGRpdiBjbGFzcz1cInNieS1vd2wtdmlkZW8tZnJhbWVcIj4nICsgYyArIFwiPC9kaXY+XCIpLmluc2VydEFmdGVyKGUuZmluZChcIi5zYnktb3dsLXZpZGVvXCIpKSwgdGhpcy5fcGxheWluZyA9IGUuYWRkQ2xhc3MoXCJzYnktb3dsLXZpZGVvLXBsYXlpbmdcIikpXG4gICAgICAgIH0sIGUucHJvdG90eXBlLmlzSW5GdWxsU2NyZWVuID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGIgPSBjLmZ1bGxzY3JlZW5FbGVtZW50IHx8IGMubW96RnVsbFNjcmVlbkVsZW1lbnQgfHwgYy53ZWJraXRGdWxsc2NyZWVuRWxlbWVudDtcbiAgICAgICAgICAgIHJldHVybiBiICYmIGEoYikucGFyZW50KCkuaGFzQ2xhc3MoXCJzYnktb3dsLXZpZGVvLWZyYW1lXCIpXG4gICAgICAgIH0sIGUucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgYSwgYjtcbiAgICAgICAgICAgIHRoaXMuX2NvcmUuJGVsZW1lbnQub2ZmKFwiY2xpY2sub3dsLnZpZGVvXCIpO1xuICAgICAgICAgICAgZm9yIChhIGluIHRoaXMuX2hhbmRsZXJzKSB0aGlzLl9jb3JlLiRlbGVtZW50Lm9mZihhLCB0aGlzLl9oYW5kbGVyc1thXSk7XG4gICAgICAgICAgICBmb3IgKGIgaW4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpIFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgdGhpc1tiXSAmJiAodGhpc1tiXSA9IG51bGwpXG4gICAgICAgIH0sIGEuZm4uc2J5T3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5WaWRlbyA9IGVcbiAgICB9KHdpbmRvdy5aZXB0byB8fCB3aW5kb3cualF1ZXJ5LCB3aW5kb3csIGRvY3VtZW50KSwgZnVuY3Rpb24gKGEsIGIsIGMsIGQpIHtcbiAgICAgICAgdmFyIGUgPSBmdW5jdGlvbiAoYikge1xuICAgICAgICAgICAgdGhpcy5jb3JlID0gYiwgdGhpcy5jb3JlLm9wdGlvbnMgPSBhLmV4dGVuZCh7fSwgZS5EZWZhdWx0cywgdGhpcy5jb3JlLm9wdGlvbnMpLCB0aGlzLnN3YXBwaW5nID0gITAsIHRoaXMucHJldmlvdXMgPSBkLCB0aGlzLm5leHQgPSBkLCB0aGlzLmhhbmRsZXJzID0ge1xuICAgICAgICAgICAgICAgIFwiY2hhbmdlLm93bC5jYXJvdXNlbFwiOiBhLnByb3h5KGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICAgICAgICAgIGEubmFtZXNwYWNlICYmIFwicG9zaXRpb25cIiA9PSBhLnByb3BlcnR5Lm5hbWUgJiYgKHRoaXMucHJldmlvdXMgPSB0aGlzLmNvcmUuY3VycmVudCgpLCB0aGlzLm5leHQgPSBhLnByb3BlcnR5LnZhbHVlKVxuICAgICAgICAgICAgICAgIH0sIHRoaXMpLCBcImRyYWcub3dsLmNhcm91c2VsIGRyYWdnZWQub3dsLmNhcm91c2VsIHRyYW5zbGF0ZWQub3dsLmNhcm91c2VsXCI6IGEucHJveHkoZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgICAgICAgICAgICAgYS5uYW1lc3BhY2UgJiYgKHRoaXMuc3dhcHBpbmcgPSBcInRyYW5zbGF0ZWRcIiA9PSBhLnR5cGUpXG4gICAgICAgICAgICAgICAgfSwgdGhpcyksIFwidHJhbnNsYXRlLm93bC5jYXJvdXNlbFwiOiBhLnByb3h5KGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICAgICAgICAgIGEubmFtZXNwYWNlICYmIHRoaXMuc3dhcHBpbmcgJiYgKHRoaXMuY29yZS5vcHRpb25zLmFuaW1hdGVPdXQgfHwgdGhpcy5jb3JlLm9wdGlvbnMuYW5pbWF0ZUluKSAmJiB0aGlzLnN3YXAoKVxuICAgICAgICAgICAgICAgIH0sIHRoaXMpXG4gICAgICAgICAgICB9LCB0aGlzLmNvcmUuJGVsZW1lbnQub24odGhpcy5oYW5kbGVycylcbiAgICAgICAgfTtcbiAgICAgICAgZS5EZWZhdWx0cyA9IHthbmltYXRlT3V0OiAhMSwgYW5pbWF0ZUluOiAhMX0sIGUucHJvdG90eXBlLnN3YXAgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoMSA9PT0gdGhpcy5jb3JlLnNldHRpbmdzLml0ZW1zICYmIGEuc3VwcG9ydC5hbmltYXRpb24gJiYgYS5zdXBwb3J0LnRyYW5zaXRpb24pIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNvcmUuc3BlZWQoMCk7XG4gICAgICAgICAgICAgICAgdmFyIGIsIGMgPSBhLnByb3h5KHRoaXMuY2xlYXIsIHRoaXMpLCBkID0gdGhpcy5jb3JlLiRzdGFnZS5jaGlsZHJlbigpLmVxKHRoaXMucHJldmlvdXMpLFxuICAgICAgICAgICAgICAgICAgZSA9IHRoaXMuY29yZS4kc3RhZ2UuY2hpbGRyZW4oKS5lcSh0aGlzLm5leHQpLCBmID0gdGhpcy5jb3JlLnNldHRpbmdzLmFuaW1hdGVJbixcbiAgICAgICAgICAgICAgICAgIGcgPSB0aGlzLmNvcmUuc2V0dGluZ3MuYW5pbWF0ZU91dDtcbiAgICAgICAgICAgICAgICB0aGlzLmNvcmUuY3VycmVudCgpICE9PSB0aGlzLnByZXZpb3VzICYmIChnICYmIChiID0gdGhpcy5jb3JlLmNvb3JkaW5hdGVzKHRoaXMucHJldmlvdXMpIC0gdGhpcy5jb3JlLmNvb3JkaW5hdGVzKHRoaXMubmV4dCksIGQub25lKGEuc3VwcG9ydC5hbmltYXRpb24uZW5kLCBjKS5jc3Moe2xlZnQ6IGIgKyBcInB4XCJ9KS5hZGRDbGFzcyhcImFuaW1hdGVkIHNieS1vd2wtYW5pbWF0ZWQtb3V0XCIpLmFkZENsYXNzKGcpKSwgZiAmJiBlLm9uZShhLnN1cHBvcnQuYW5pbWF0aW9uLmVuZCwgYykuYWRkQ2xhc3MoXCJhbmltYXRlZCBzYnktb3dsLWFuaW1hdGVkLWluXCIpLmFkZENsYXNzKGYpKVxuICAgICAgICAgICAgfVxuICAgICAgICB9LCBlLnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uIChiKSB7XG4gICAgICAgICAgICBhKGIudGFyZ2V0KS5jc3Moe2xlZnQ6IFwiXCJ9KS5yZW1vdmVDbGFzcyhcImFuaW1hdGVkIHNieS1vd2wtYW5pbWF0ZWQtb3V0IHNieS1vd2wtYW5pbWF0ZWQtaW5cIikucmVtb3ZlQ2xhc3ModGhpcy5jb3JlLnNldHRpbmdzLmFuaW1hdGVJbikucmVtb3ZlQ2xhc3ModGhpcy5jb3JlLnNldHRpbmdzLmFuaW1hdGVPdXQpLCB0aGlzLmNvcmUub25UcmFuc2l0aW9uRW5kKClcbiAgICAgICAgfSwgZS5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBhLCBiO1xuICAgICAgICAgICAgZm9yIChhIGluIHRoaXMuaGFuZGxlcnMpIHRoaXMuY29yZS4kZWxlbWVudC5vZmYoYSwgdGhpcy5oYW5kbGVyc1thXSk7XG4gICAgICAgICAgICBmb3IgKGIgaW4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpIFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgdGhpc1tiXSAmJiAodGhpc1tiXSA9IG51bGwpXG4gICAgICAgIH0sXG4gICAgICAgICAgYS5mbi5zYnlPd2xDYXJvdXNlbC5Db25zdHJ1Y3Rvci5QbHVnaW5zLkFuaW1hdGUgPSBlXG4gICAgfSh3aW5kb3cuWmVwdG8gfHwgd2luZG93LmpRdWVyeSwgd2luZG93LCBkb2N1bWVudCksIGZ1bmN0aW9uIChhLCBiLCBjLCBkKSB7XG4gICAgICAgIHZhciBlID0gZnVuY3Rpb24gKGIpIHtcbiAgICAgICAgICAgIHRoaXMuX2NvcmUgPSBiLCB0aGlzLl90aW1lb3V0ID0gbnVsbCwgdGhpcy5fcGF1c2VkID0gITEsIHRoaXMuX2hhbmRsZXJzID0ge1xuICAgICAgICAgICAgICAgIFwiY2hhbmdlZC5vd2wuY2Fyb3VzZWxcIjogYS5wcm94eShmdW5jdGlvbiAoYSkge1xuICAgICAgICAgICAgICAgICAgICBhLm5hbWVzcGFjZSAmJiBcInNldHRpbmdzXCIgPT09IGEucHJvcGVydHkubmFtZSA/IHRoaXMuX2NvcmUuc2V0dGluZ3MuYXV0b3BsYXkgPyB0aGlzLnBsYXkoKSA6IHRoaXMuc3RvcCgpIDogYS5uYW1lc3BhY2UgJiYgXCJwb3NpdGlvblwiID09PSBhLnByb3BlcnR5Lm5hbWUgJiYgdGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvcGxheSAmJiB0aGlzLl9zZXRBdXRvUGxheUludGVydmFsKClcbiAgICAgICAgICAgICAgICB9LCB0aGlzKSwgXCJpbml0aWFsaXplZC5vd2wuY2Fyb3VzZWxcIjogYS5wcm94eShmdW5jdGlvbiAoYSkge1xuICAgICAgICAgICAgICAgICAgICBhLm5hbWVzcGFjZSAmJiB0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9wbGF5ICYmIHRoaXMucGxheSgpXG4gICAgICAgICAgICAgICAgfSwgdGhpcyksIFwicGxheS5vd2wuYXV0b3BsYXlcIjogYS5wcm94eShmdW5jdGlvbiAoYSwgYiwgYykge1xuICAgICAgICAgICAgICAgICAgICBhLm5hbWVzcGFjZSAmJiB0aGlzLnBsYXkoYiwgYylcbiAgICAgICAgICAgICAgICB9LCB0aGlzKSwgXCJzdG9wLm93bC5hdXRvcGxheVwiOiBhLnByb3h5KGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICAgICAgICAgIGEubmFtZXNwYWNlICYmIHRoaXMuc3RvcCgpXG4gICAgICAgICAgICAgICAgfSwgdGhpcyksIFwibW91c2VvdmVyLm93bC5hdXRvcGxheVwiOiBhLnByb3h5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvcGxheUhvdmVyUGF1c2UgJiYgdGhpcy5fY29yZS5pcyhcInJvdGF0aW5nXCIpICYmIHRoaXMucGF1c2UoKVxuICAgICAgICAgICAgICAgIH0sIHRoaXMpLCBcIm1vdXNlbGVhdmUub3dsLmF1dG9wbGF5XCI6IGEucHJveHkoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9wbGF5SG92ZXJQYXVzZSAmJiB0aGlzLl9jb3JlLmlzKFwicm90YXRpbmdcIikgJiYgdGhpcy5wbGF5KClcbiAgICAgICAgICAgICAgICB9LCB0aGlzKSwgXCJ0b3VjaHN0YXJ0Lm93bC5jb3JlXCI6IGEucHJveHkoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9wbGF5SG92ZXJQYXVzZSAmJiB0aGlzLl9jb3JlLmlzKFwicm90YXRpbmdcIikgJiYgdGhpcy5wYXVzZSgpXG4gICAgICAgICAgICAgICAgfSwgdGhpcyksIFwidG91Y2hlbmQub3dsLmNvcmVcIjogYS5wcm94eShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2NvcmUuc2V0dGluZ3MuYXV0b3BsYXlIb3ZlclBhdXNlICYmIHRoaXMucGxheSgpXG4gICAgICAgICAgICAgICAgfSwgdGhpcylcbiAgICAgICAgICAgIH0sIHRoaXMuX2NvcmUuJGVsZW1lbnQub24odGhpcy5faGFuZGxlcnMpLCB0aGlzLl9jb3JlLm9wdGlvbnMgPSBhLmV4dGVuZCh7fSwgZS5EZWZhdWx0cywgdGhpcy5fY29yZS5vcHRpb25zKVxuICAgICAgICB9O1xuICAgICAgICBlLkRlZmF1bHRzID0ge1xuICAgICAgICAgICAgYXV0b3BsYXk6ICExLFxuICAgICAgICAgICAgYXV0b3BsYXlUaW1lb3V0OiA1ZTMsXG4gICAgICAgICAgICBhdXRvcGxheUhvdmVyUGF1c2U6ICExLFxuICAgICAgICAgICAgYXV0b3BsYXlTcGVlZDogITFcbiAgICAgICAgfSwgZS5wcm90b3R5cGUucGxheSA9IGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgICAgICB0aGlzLl9wYXVzZWQgPSAhMSwgdGhpcy5fY29yZS5pcyhcInJvdGF0aW5nXCIpIHx8ICh0aGlzLl9jb3JlLmVudGVyKFwicm90YXRpbmdcIiksIHRoaXMuX3NldEF1dG9QbGF5SW50ZXJ2YWwoKSlcbiAgICAgICAgfSwgZS5wcm90b3R5cGUuX2dldE5leHRUaW1lb3V0ID0gZnVuY3Rpb24gKGQsIGUpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl90aW1lb3V0ICYmIGIuY2xlYXJUaW1lb3V0KHRoaXMuX3RpbWVvdXQpLCBiLnNldFRpbWVvdXQoYS5wcm94eShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fcGF1c2VkIHx8IHRoaXMuX2NvcmUuaXMoXCJidXN5XCIpIHx8IHRoaXMuX2NvcmUuaXMoXCJpbnRlcmFjdGluZ1wiKSB8fCBjLmhpZGRlbiB8fCB0aGlzLl9jb3JlLm5leHQoZSB8fCB0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9wbGF5U3BlZWQpXG4gICAgICAgICAgICB9LCB0aGlzKSwgZCB8fCB0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9wbGF5VGltZW91dClcbiAgICAgICAgfSwgZS5wcm90b3R5cGUuX3NldEF1dG9QbGF5SW50ZXJ2YWwgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aGlzLl90aW1lb3V0ID0gdGhpcy5fZ2V0TmV4dFRpbWVvdXQoKVxuICAgICAgICB9LCBlLnByb3RvdHlwZS5zdG9wID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGhpcy5fY29yZS5pcyhcInJvdGF0aW5nXCIpICYmIChiLmNsZWFyVGltZW91dCh0aGlzLl90aW1lb3V0KSwgdGhpcy5fY29yZS5sZWF2ZShcInJvdGF0aW5nXCIpKVxuICAgICAgICB9LCBlLnByb3RvdHlwZS5wYXVzZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRoaXMuX2NvcmUuaXMoXCJyb3RhdGluZ1wiKSAmJiAodGhpcy5fcGF1c2VkID0gITApXG4gICAgICAgIH0sIGUucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgYSwgYjtcbiAgICAgICAgICAgIHRoaXMuc3RvcCgpO1xuICAgICAgICAgICAgZm9yIChhIGluIHRoaXMuX2hhbmRsZXJzKSB0aGlzLl9jb3JlLiRlbGVtZW50Lm9mZihhLCB0aGlzLl9oYW5kbGVyc1thXSk7XG4gICAgICAgICAgICBmb3IgKGIgaW4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpIFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgdGhpc1tiXSAmJiAodGhpc1tiXSA9IG51bGwpXG4gICAgICAgIH0sIGEuZm4uc2J5T3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5hdXRvcGxheSA9IGVcbiAgICB9KHdpbmRvdy5aZXB0byB8fCB3aW5kb3cualF1ZXJ5LCB3aW5kb3csIGRvY3VtZW50KSwgZnVuY3Rpb24gKGEsIGIsIGMsIGQpIHtcbiAgICAgICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgICAgIHZhciBlID0gZnVuY3Rpb24gKGIpIHtcbiAgICAgICAgICAgIHRoaXMuX2NvcmUgPSBiLCB0aGlzLl9pbml0aWFsaXplZCA9ICExLCB0aGlzLl9wYWdlcyA9IFtdLCB0aGlzLl9jb250cm9scyA9IHt9LCB0aGlzLl90ZW1wbGF0ZXMgPSBbXSwgdGhpcy4kZWxlbWVudCA9IHRoaXMuX2NvcmUuJGVsZW1lbnQsIHRoaXMuX292ZXJyaWRlcyA9IHtcbiAgICAgICAgICAgICAgICBuZXh0OiB0aGlzLl9jb3JlLm5leHQsXG4gICAgICAgICAgICAgICAgcHJldjogdGhpcy5fY29yZS5wcmV2LFxuICAgICAgICAgICAgICAgIHRvOiB0aGlzLl9jb3JlLnRvXG4gICAgICAgICAgICB9LCB0aGlzLl9oYW5kbGVycyA9IHtcbiAgICAgICAgICAgICAgICBcInByZXBhcmVkLm93bC5jYXJvdXNlbFwiOiBhLnByb3h5KGZ1bmN0aW9uIChiKSB7XG4gICAgICAgICAgICAgICAgICAgIGIubmFtZXNwYWNlICYmIHRoaXMuX2NvcmUuc2V0dGluZ3MuZG90c0RhdGEgJiYgdGhpcy5fdGVtcGxhdGVzLnB1c2goJzxkaXYgY2xhc3M9XCInICsgdGhpcy5fY29yZS5zZXR0aW5ncy5kb3RDbGFzcyArICdcIj4nICsgYShiLmNvbnRlbnQpLmZpbmQoXCJbZGF0YS1kb3RdXCIpLmFkZEJhY2soXCJbZGF0YS1kb3RdXCIpLmF0dHIoXCJkYXRhLWRvdFwiKSArIFwiPC9kaXY+XCIpXG4gICAgICAgICAgICAgICAgfSwgdGhpcyksIFwiYWRkZWQub3dsLmNhcm91c2VsXCI6IGEucHJveHkoZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgICAgICAgICAgICAgYS5uYW1lc3BhY2UgJiYgdGhpcy5fY29yZS5zZXR0aW5ncy5kb3RzRGF0YSAmJiB0aGlzLl90ZW1wbGF0ZXMuc3BsaWNlKGEucG9zaXRpb24sIDAsIHRoaXMuX3RlbXBsYXRlcy5wb3AoKSlcbiAgICAgICAgICAgICAgICB9LCB0aGlzKSwgXCJyZW1vdmUub3dsLmNhcm91c2VsXCI6IGEucHJveHkoZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgICAgICAgICAgICAgYS5uYW1lc3BhY2UgJiYgdGhpcy5fY29yZS5zZXR0aW5ncy5kb3RzRGF0YSAmJiB0aGlzLl90ZW1wbGF0ZXMuc3BsaWNlKGEucG9zaXRpb24sIDEpXG4gICAgICAgICAgICAgICAgfSwgdGhpcyksIFwiY2hhbmdlZC5vd2wuY2Fyb3VzZWxcIjogYS5wcm94eShmdW5jdGlvbiAoYSkge1xuICAgICAgICAgICAgICAgICAgICBhLm5hbWVzcGFjZSAmJiBcInBvc2l0aW9uXCIgPT0gYS5wcm9wZXJ0eS5uYW1lICYmIHRoaXMuZHJhdygpXG4gICAgICAgICAgICAgICAgfSwgdGhpcyksIFwiaW5pdGlhbGl6ZWQub3dsLmNhcm91c2VsXCI6IGEucHJveHkoZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgICAgICAgICAgICAgYS5uYW1lc3BhY2UgJiYgIXRoaXMuX2luaXRpYWxpemVkICYmICh0aGlzLl9jb3JlLnRyaWdnZXIoXCJpbml0aWFsaXplXCIsIG51bGwsIFwibmF2aWdhdGlvblwiKSwgdGhpcy5pbml0aWFsaXplKCksIHRoaXMudXBkYXRlKCksIHRoaXMuZHJhdygpLCB0aGlzLl9pbml0aWFsaXplZCA9ICEwLCB0aGlzLl9jb3JlLnRyaWdnZXIoXCJpbml0aWFsaXplZFwiLCBudWxsLCBcIm5hdmlnYXRpb25cIikpXG4gICAgICAgICAgICAgICAgfSwgdGhpcyksIFwicmVmcmVzaGVkLm93bC5jYXJvdXNlbFwiOiBhLnByb3h5KGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICAgICAgICAgIGEubmFtZXNwYWNlICYmIHRoaXMuX2luaXRpYWxpemVkICYmICh0aGlzLl9jb3JlLnRyaWdnZXIoXCJyZWZyZXNoXCIsIG51bGwsIFwibmF2aWdhdGlvblwiKSwgdGhpcy51cGRhdGUoKSwgdGhpcy5kcmF3KCksIHRoaXMuX2NvcmUudHJpZ2dlcihcInJlZnJlc2hlZFwiLCBudWxsLCBcIm5hdmlnYXRpb25cIikpXG4gICAgICAgICAgICAgICAgfSwgdGhpcylcbiAgICAgICAgICAgIH0sIHRoaXMuX2NvcmUub3B0aW9ucyA9IGEuZXh0ZW5kKHt9LCBlLkRlZmF1bHRzLCB0aGlzLl9jb3JlLm9wdGlvbnMpLCB0aGlzLiRlbGVtZW50Lm9uKHRoaXMuX2hhbmRsZXJzKVxuICAgICAgICB9O1xuICAgICAgICBlLkRlZmF1bHRzID0ge1xuICAgICAgICAgICAgbmF2OiAhMSxcbiAgICAgICAgICAgIG5hdlRleHQ6IFtcInByZXZcIiwgXCJuZXh0XCJdLFxuICAgICAgICAgICAgbmF2U3BlZWQ6ICExLFxuICAgICAgICAgICAgbmF2RWxlbWVudDogXCJkaXZcIixcbiAgICAgICAgICAgIG5hdkNvbnRhaW5lcjogITEsXG4gICAgICAgICAgICBuYXZDb250YWluZXJDbGFzczogXCJzYnktb3dsLW5hdlwiLFxuICAgICAgICAgICAgbmF2Q2xhc3M6IFtcInNieS1vd2wtcHJldlwiLCBcInNieS1vd2wtbmV4dFwiXSxcbiAgICAgICAgICAgIHNsaWRlQnk6IDEsXG4gICAgICAgICAgICBkb3RDbGFzczogXCJzYnktb3dsLWRvdFwiLFxuICAgICAgICAgICAgZG90c0NsYXNzOiBcInNieS1vd2wtZG90c1wiLFxuICAgICAgICAgICAgZG90czogITAsXG4gICAgICAgICAgICBkb3RzRWFjaDogITEsXG4gICAgICAgICAgICBkb3RzRGF0YTogITEsXG4gICAgICAgICAgICBkb3RzU3BlZWQ6ICExLFxuICAgICAgICAgICAgZG90c0NvbnRhaW5lcjogITFcbiAgICAgICAgfSwgZS5wcm90b3R5cGUuaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBiLCBjID0gdGhpcy5fY29yZS5zZXR0aW5ncztcbiAgICAgICAgICAgIHRoaXMuX2NvbnRyb2xzLiRyZWxhdGl2ZSA9IChjLm5hdkNvbnRhaW5lciA/IGEoYy5uYXZDb250YWluZXIpIDogYShcIjxkaXY+XCIpLmFkZENsYXNzKGMubmF2Q29udGFpbmVyQ2xhc3MpLmFwcGVuZFRvKHRoaXMuJGVsZW1lbnQpKS5hZGRDbGFzcyhcImRpc2FibGVkXCIpLCB0aGlzLl9jb250cm9scy4kcHJldmlvdXMgPSBhKFwiPFwiICsgYy5uYXZFbGVtZW50ICsgXCI+XCIpLmFkZENsYXNzKGMubmF2Q2xhc3NbMF0pLmh0bWwoYy5uYXZUZXh0WzBdKS5wcmVwZW5kVG8odGhpcy5fY29udHJvbHMuJHJlbGF0aXZlKS5vbihcImNsaWNrXCIsIGEucHJveHkoZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnByZXYoYy5uYXZTcGVlZClcbiAgICAgICAgICAgIH0sIHRoaXMpKSwgdGhpcy5fY29udHJvbHMuJG5leHQgPSBhKFwiPFwiICsgYy5uYXZFbGVtZW50ICsgXCI+XCIpLmFkZENsYXNzKGMubmF2Q2xhc3NbMV0pLmh0bWwoYy5uYXZUZXh0WzFdKS5hcHBlbmRUbyh0aGlzLl9jb250cm9scy4kcmVsYXRpdmUpLm9uKFwiY2xpY2tcIiwgYS5wcm94eShmdW5jdGlvbiAoYSkge1xuICAgICAgICAgICAgICAgIHRoaXMubmV4dChjLm5hdlNwZWVkKVxuICAgICAgICAgICAgfSwgdGhpcykpLCBjLmRvdHNEYXRhIHx8ICh0aGlzLl90ZW1wbGF0ZXMgPSBbYShcIjxkaXY+XCIpLmFkZENsYXNzKGMuZG90Q2xhc3MpLmFwcGVuZChhKFwiPHNwYW4+XCIpKS5wcm9wKFwib3V0ZXJIVE1MXCIpXSksIHRoaXMuX2NvbnRyb2xzLiRhYnNvbHV0ZSA9IChjLmRvdHNDb250YWluZXIgPyBhKGMuZG90c0NvbnRhaW5lcikgOiBhKFwiPGRpdj5cIikuYWRkQ2xhc3MoYy5kb3RzQ2xhc3MpLmFwcGVuZFRvKHRoaXMuJGVsZW1lbnQpKS5hZGRDbGFzcyhcImRpc2FibGVkXCIpLCB0aGlzLl9jb250cm9scy4kYWJzb2x1dGUub24oXCJjbGlja1wiLCBcImRpdlwiLCBhLnByb3h5KGZ1bmN0aW9uIChiKSB7XG4gICAgICAgICAgICAgICAgdmFyIGQgPSBhKGIudGFyZ2V0KS5wYXJlbnQoKS5pcyh0aGlzLl9jb250cm9scy4kYWJzb2x1dGUpID8gYShiLnRhcmdldCkuaW5kZXgoKSA6IGEoYi50YXJnZXQpLnBhcmVudCgpLmluZGV4KCk7XG4gICAgICAgICAgICAgICAgYi5wcmV2ZW50RGVmYXVsdCgpLCB0aGlzLnRvKGQsIGMuZG90c1NwZWVkKVxuICAgICAgICAgICAgfSwgdGhpcykpO1xuICAgICAgICAgICAgZm9yIChiIGluIHRoaXMuX292ZXJyaWRlcykgdGhpcy5fY29yZVtiXSA9IGEucHJveHkodGhpc1tiXSwgdGhpcylcbiAgICAgICAgfSwgZS5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBhLCBiLCBjLCBkO1xuICAgICAgICAgICAgZm9yIChhIGluIHRoaXMuX2hhbmRsZXJzKSB0aGlzLiRlbGVtZW50Lm9mZihhLCB0aGlzLl9oYW5kbGVyc1thXSk7XG4gICAgICAgICAgICBmb3IgKGIgaW4gdGhpcy5fY29udHJvbHMpIHRoaXMuX2NvbnRyb2xzW2JdLnJlbW92ZSgpO1xuICAgICAgICAgICAgZm9yIChkIGluIHRoaXMub3ZlcmlkZXMpIHRoaXMuX2NvcmVbZF0gPSB0aGlzLl9vdmVycmlkZXNbZF07XG4gICAgICAgICAgICBmb3IgKGMgaW4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpIFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgdGhpc1tjXSAmJiAodGhpc1tjXSA9IG51bGwpXG4gICAgICAgIH0sIGUucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBhLCBiLCBjLCBkID0gdGhpcy5fY29yZS5jbG9uZXMoKS5sZW5ndGggLyAyLCBlID0gZCArIHRoaXMuX2NvcmUuaXRlbXMoKS5sZW5ndGgsXG4gICAgICAgICAgICAgIGYgPSB0aGlzLl9jb3JlLm1heGltdW0oITApLCBnID0gdGhpcy5fY29yZS5zZXR0aW5ncyxcbiAgICAgICAgICAgICAgaCA9IGcuY2VudGVyIHx8IGcuYXV0b1dpZHRoIHx8IGcuZG90c0RhdGEgPyAxIDogZy5kb3RzRWFjaCB8fCBnLml0ZW1zO1xuICAgICAgICAgICAgaWYgKFwicGFnZVwiICE9PSBnLnNsaWRlQnkgJiYgKGcuc2xpZGVCeSA9IE1hdGgubWluKGcuc2xpZGVCeSwgZy5pdGVtcykpLCBnLmRvdHMgfHwgXCJwYWdlXCIgPT0gZy5zbGlkZUJ5KSBmb3IgKHRoaXMuX3BhZ2VzID0gW10sIGEgPSBkLCBiID0gMCwgYyA9IDA7IGEgPCBlOyBhKyspIHtcbiAgICAgICAgICAgICAgICBpZiAoYiA+PSBoIHx8IDAgPT09IGIpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuX3BhZ2VzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQ6IE1hdGgubWluKGYsIGEgLSBkKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuZDogYSAtIGQgKyBoIC0gMVxuICAgICAgICAgICAgICAgICAgICB9KSwgTWF0aC5taW4oZiwgYSAtIGQpID09PSBmKSBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgYiA9IDAsICsrY1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBiICs9IHRoaXMuX2NvcmUubWVyZ2Vycyh0aGlzLl9jb3JlLnJlbGF0aXZlKGEpKVxuICAgICAgICAgICAgfVxuICAgICAgICB9LCBlLnByb3RvdHlwZS5kcmF3ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGIsIGMgPSB0aGlzLl9jb3JlLnNldHRpbmdzLCBkID0gdGhpcy5fY29yZS5pdGVtcygpLmxlbmd0aCA8PSBjLml0ZW1zLFxuICAgICAgICAgICAgICBlID0gdGhpcy5fY29yZS5yZWxhdGl2ZSh0aGlzLl9jb3JlLmN1cnJlbnQoKSksIGYgPSBjLmxvb3AgfHwgYy5yZXdpbmQ7XG4gICAgICAgICAgICB0aGlzLl9jb250cm9scy4kcmVsYXRpdmUudG9nZ2xlQ2xhc3MoXCJkaXNhYmxlZFwiLCAhYy5uYXYgfHwgZCksIGMubmF2ICYmICh0aGlzLl9jb250cm9scy4kcHJldmlvdXMudG9nZ2xlQ2xhc3MoXCJkaXNhYmxlZFwiLCAhZiAmJiBlIDw9IHRoaXMuX2NvcmUubWluaW11bSghMCkpLCB0aGlzLl9jb250cm9scy4kbmV4dC50b2dnbGVDbGFzcyhcImRpc2FibGVkXCIsICFmICYmIGUgPj0gdGhpcy5fY29yZS5tYXhpbXVtKCEwKSkpLCB0aGlzLl9jb250cm9scy4kYWJzb2x1dGUudG9nZ2xlQ2xhc3MoXCJkaXNhYmxlZFwiLCAhYy5kb3RzIHx8IGQpLCBjLmRvdHMgJiYgKGIgPSB0aGlzLl9wYWdlcy5sZW5ndGggLSB0aGlzLl9jb250cm9scy4kYWJzb2x1dGUuY2hpbGRyZW4oKS5sZW5ndGgsIGMuZG90c0RhdGEgJiYgMCAhPT0gYiA/IHRoaXMuX2NvbnRyb2xzLiRhYnNvbHV0ZS5odG1sKHRoaXMuX3RlbXBsYXRlcy5qb2luKFwiXCIpKSA6IGIgPiAwID8gdGhpcy5fY29udHJvbHMuJGFic29sdXRlLmFwcGVuZChuZXcgQXJyYXkoYiArIDEpLmpvaW4odGhpcy5fdGVtcGxhdGVzWzBdKSkgOiBiIDwgMCAmJiB0aGlzLl9jb250cm9scy4kYWJzb2x1dGUuY2hpbGRyZW4oKS5zbGljZShiKS5yZW1vdmUoKSwgdGhpcy5fY29udHJvbHMuJGFic29sdXRlLmZpbmQoXCIuYWN0aXZlXCIpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpLCB0aGlzLl9jb250cm9scy4kYWJzb2x1dGUuY2hpbGRyZW4oKS5lcShhLmluQXJyYXkodGhpcy5jdXJyZW50KCksIHRoaXMuX3BhZ2VzKSkuYWRkQ2xhc3MoXCJhY3RpdmVcIikpXG4gICAgICAgIH0sIGUucHJvdG90eXBlLm9uVHJpZ2dlciA9IGZ1bmN0aW9uIChiKSB7XG4gICAgICAgICAgICB2YXIgYyA9IHRoaXMuX2NvcmUuc2V0dGluZ3M7XG4gICAgICAgICAgICBiLnBhZ2UgPSB7XG4gICAgICAgICAgICAgICAgaW5kZXg6IGEuaW5BcnJheSh0aGlzLmN1cnJlbnQoKSwgdGhpcy5fcGFnZXMpLFxuICAgICAgICAgICAgICAgIGNvdW50OiB0aGlzLl9wYWdlcy5sZW5ndGgsXG4gICAgICAgICAgICAgICAgc2l6ZTogYyAmJiAoYy5jZW50ZXIgfHwgYy5hdXRvV2lkdGggfHwgYy5kb3RzRGF0YSA/IDEgOiBjLmRvdHNFYWNoIHx8IGMuaXRlbXMpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIGUucHJvdG90eXBlLmN1cnJlbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgYiA9IHRoaXMuX2NvcmUucmVsYXRpdmUodGhpcy5fY29yZS5jdXJyZW50KCkpO1xuICAgICAgICAgICAgcmV0dXJuIGEuZ3JlcCh0aGlzLl9wYWdlcywgYS5wcm94eShmdW5jdGlvbiAoYSwgYykge1xuICAgICAgICAgICAgICAgIHJldHVybiBhLnN0YXJ0IDw9IGIgJiYgYS5lbmQgPj0gYlxuICAgICAgICAgICAgfSwgdGhpcykpLnBvcCgpXG4gICAgICAgIH0sIGUucHJvdG90eXBlLmdldFBvc2l0aW9uID0gZnVuY3Rpb24gKGIpIHtcbiAgICAgICAgICAgIHZhciBjLCBkLCBlID0gdGhpcy5fY29yZS5zZXR0aW5ncztcbiAgICAgICAgICAgIHJldHVybiBcInBhZ2VcIiA9PSBlLnNsaWRlQnkgPyAoYyA9IGEuaW5BcnJheSh0aGlzLmN1cnJlbnQoKSwgdGhpcy5fcGFnZXMpLCBkID0gdGhpcy5fcGFnZXMubGVuZ3RoLCBiID8gKytjIDogLS1jLCBjID0gdGhpcy5fcGFnZXNbKGMgJSBkICsgZCkgJSBkXS5zdGFydCkgOiAoYyA9IHRoaXMuX2NvcmUucmVsYXRpdmUodGhpcy5fY29yZS5jdXJyZW50KCkpLCBkID0gdGhpcy5fY29yZS5pdGVtcygpLmxlbmd0aCwgYiA/IGMgKz0gZS5zbGlkZUJ5IDogYyAtPSBlLnNsaWRlQnkpLCBjXG4gICAgICAgIH0sIGUucHJvdG90eXBlLm5leHQgPSBmdW5jdGlvbiAoYikge1xuICAgICAgICAgICAgYS5wcm94eSh0aGlzLl9vdmVycmlkZXMudG8sIHRoaXMuX2NvcmUpKHRoaXMuZ2V0UG9zaXRpb24oITApLCBiKVxuICAgICAgICB9LCBlLnByb3RvdHlwZS5wcmV2ID0gZnVuY3Rpb24gKGIpIHtcbiAgICAgICAgICAgIGEucHJveHkodGhpcy5fb3ZlcnJpZGVzLnRvLCB0aGlzLl9jb3JlKSh0aGlzLmdldFBvc2l0aW9uKCExKSwgYilcbiAgICAgICAgfSwgZS5wcm90b3R5cGUudG8gPSBmdW5jdGlvbiAoYiwgYywgZCkge1xuICAgICAgICAgICAgdmFyIGU7XG4gICAgICAgICAgICAhZCAmJiB0aGlzLl9wYWdlcy5sZW5ndGggPyAoZSA9IHRoaXMuX3BhZ2VzLmxlbmd0aCwgYS5wcm94eSh0aGlzLl9vdmVycmlkZXMudG8sIHRoaXMuX2NvcmUpKHRoaXMuX3BhZ2VzWyhiICUgZSArIGUpICUgZV0uc3RhcnQsIGMpKSA6IGEucHJveHkodGhpcy5fb3ZlcnJpZGVzLnRvLCB0aGlzLl9jb3JlKShiLCBjKVxuICAgICAgICB9LCBhLmZuLnNieU93bENhcm91c2VsLkNvbnN0cnVjdG9yLlBsdWdpbnMuTmF2aWdhdGlvbiA9IGVcbiAgICB9KHdpbmRvdy5aZXB0byB8fCB3aW5kb3cualF1ZXJ5LCB3aW5kb3csIGRvY3VtZW50KSwgZnVuY3Rpb24gKGEsIGIsIGMsIGQpIHtcbiAgICAgICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgICAgIHZhciBlID0gZnVuY3Rpb24gKGMpIHtcbiAgICAgICAgICAgIHRoaXMuX2NvcmUgPSBjLCB0aGlzLl9oYXNoZXMgPSB7fSwgdGhpcy4kZWxlbWVudCA9IHRoaXMuX2NvcmUuJGVsZW1lbnQsIHRoaXMuX2hhbmRsZXJzID0ge1xuICAgICAgICAgICAgICAgIFwiaW5pdGlhbGl6ZWQub3dsLmNhcm91c2VsXCI6IGEucHJveHkoZnVuY3Rpb24gKGMpIHtcbiAgICAgICAgICAgICAgICAgICAgYy5uYW1lc3BhY2UgJiYgXCJVUkxIYXNoXCIgPT09IHRoaXMuX2NvcmUuc2V0dGluZ3Muc3RhcnRQb3NpdGlvbiAmJiBhKGIpLnRyaWdnZXIoXCJoYXNoY2hhbmdlLm93bC5uYXZpZ2F0aW9uXCIpXG4gICAgICAgICAgICAgICAgfSwgdGhpcyksIFwicHJlcGFyZWQub3dsLmNhcm91c2VsXCI6IGEucHJveHkoZnVuY3Rpb24gKGIpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGIubmFtZXNwYWNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYyA9IGEoYi5jb250ZW50KS5maW5kKFwiW2RhdGEtaGFzaF1cIikuYWRkQmFjayhcIltkYXRhLWhhc2hdXCIpLmF0dHIoXCJkYXRhLWhhc2hcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWMpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2hhc2hlc1tjXSA9IGIuY29udGVudFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSwgdGhpcyksIFwiY2hhbmdlZC5vd2wuY2Fyb3VzZWxcIjogYS5wcm94eShmdW5jdGlvbiAoYykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoYy5uYW1lc3BhY2UgJiYgXCJwb3NpdGlvblwiID09PSBjLnByb3BlcnR5Lm5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkID0gdGhpcy5fY29yZS5pdGVtcyh0aGlzLl9jb3JlLnJlbGF0aXZlKHRoaXMuX2NvcmUuY3VycmVudCgpKSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGUgPSBhLm1hcCh0aGlzLl9oYXNoZXMsIGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYSA9PT0gZCA/IGIgOiBudWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pLmpvaW4oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZSB8fCBiLmxvY2F0aW9uLmhhc2guc2xpY2UoMSkgPT09IGUpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGIubG9jYXRpb24uaGFzaCA9IGVcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sIHRoaXMpXG4gICAgICAgICAgICB9LCB0aGlzLl9jb3JlLm9wdGlvbnMgPSBhLmV4dGVuZCh7fSwgZS5EZWZhdWx0cywgdGhpcy5fY29yZS5vcHRpb25zKSwgdGhpcy4kZWxlbWVudC5vbih0aGlzLl9oYW5kbGVycyksIGEoYikub24oXCJoYXNoY2hhbmdlLm93bC5uYXZpZ2F0aW9uXCIsIGEucHJveHkoZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgICAgICAgICB2YXIgYyA9IGIubG9jYXRpb24uaGFzaC5zdWJzdHJpbmcoMSksIGUgPSB0aGlzLl9jb3JlLiRzdGFnZS5jaGlsZHJlbigpLFxuICAgICAgICAgICAgICAgICAgZiA9IHRoaXMuX2hhc2hlc1tjXSAmJiBlLmluZGV4KHRoaXMuX2hhc2hlc1tjXSk7XG4gICAgICAgICAgICAgICAgZiAhPT0gZCAmJiBmICE9PSB0aGlzLl9jb3JlLmN1cnJlbnQoKSAmJiB0aGlzLl9jb3JlLnRvKHRoaXMuX2NvcmUucmVsYXRpdmUoZiksICExLCAhMClcbiAgICAgICAgICAgIH0sIHRoaXMpKVxuICAgICAgICB9O1xuICAgICAgICBlLkRlZmF1bHRzID0ge1VSTGhhc2hMaXN0ZW5lcjogITF9LCBlLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGMsIGQ7XG4gICAgICAgICAgICBhKGIpLm9mZihcImhhc2hjaGFuZ2Uub3dsLm5hdmlnYXRpb25cIik7XG4gICAgICAgICAgICBmb3IgKGMgaW4gdGhpcy5faGFuZGxlcnMpIHRoaXMuX2NvcmUuJGVsZW1lbnQub2ZmKGMsIHRoaXMuX2hhbmRsZXJzW2NdKTtcbiAgICAgICAgICAgIGZvciAoZCBpbiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0aGlzKSkgXCJmdW5jdGlvblwiICE9IHR5cGVvZiB0aGlzW2RdICYmICh0aGlzW2RdID0gbnVsbClcbiAgICAgICAgfSwgYS5mbi5zYnlPd2xDYXJvdXNlbC5Db25zdHJ1Y3Rvci5QbHVnaW5zLkhhc2ggPSBlXG4gICAgfSh3aW5kb3cuWmVwdG8gfHwgd2luZG93LmpRdWVyeSwgd2luZG93LCBkb2N1bWVudCksIGZ1bmN0aW9uIChhLCBiLCBjLCBkKSB7XG4gICAgICAgIGZ1bmN0aW9uIGUoYiwgYykge1xuICAgICAgICAgICAgdmFyIGUgPSAhMSwgZiA9IGIuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBiLnNsaWNlKDEpO1xuICAgICAgICAgICAgcmV0dXJuIGEuZWFjaCgoYiArIFwiIFwiICsgaC5qb2luKGYgKyBcIiBcIikgKyBmKS5zcGxpdChcIiBcIiksIGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgICAgICAgICAgaWYgKGdbYl0gIT09IGQpIHJldHVybiBlID0gIWMgfHwgYiwgITFcbiAgICAgICAgICAgIH0pLCBlXG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBmKGEpIHtcbiAgICAgICAgICAgIHJldHVybiBlKGEsICEwKVxuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGcgPSBhKFwiPHN1cHBvcnQ+XCIpLmdldCgwKS5zdHlsZSwgaCA9IFwiV2Via2l0IE1veiBPIG1zXCIuc3BsaXQoXCIgXCIpLCBpID0ge1xuICAgICAgICAgICAgdHJhbnNpdGlvbjoge1xuICAgICAgICAgICAgICAgIGVuZDoge1xuICAgICAgICAgICAgICAgICAgICBXZWJraXRUcmFuc2l0aW9uOiBcIndlYmtpdFRyYW5zaXRpb25FbmRcIixcbiAgICAgICAgICAgICAgICAgICAgTW96VHJhbnNpdGlvbjogXCJ0cmFuc2l0aW9uZW5kXCIsXG4gICAgICAgICAgICAgICAgICAgIE9UcmFuc2l0aW9uOiBcIm9UcmFuc2l0aW9uRW5kXCIsXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IFwidHJhbnNpdGlvbmVuZFwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGFuaW1hdGlvbjoge1xuICAgICAgICAgICAgICAgIGVuZDoge1xuICAgICAgICAgICAgICAgICAgICBXZWJraXRBbmltYXRpb246IFwid2Via2l0QW5pbWF0aW9uRW5kXCIsXG4gICAgICAgICAgICAgICAgICAgIE1vekFuaW1hdGlvbjogXCJhbmltYXRpb25lbmRcIixcbiAgICAgICAgICAgICAgICAgICAgT0FuaW1hdGlvbjogXCJvQW5pbWF0aW9uRW5kXCIsXG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdGlvbjogXCJhbmltYXRpb25lbmRcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgaiA9IHtcbiAgICAgICAgICAgIGNzc3RyYW5zZm9ybXM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gISFlKFwidHJhbnNmb3JtXCIpXG4gICAgICAgICAgICB9LCBjc3N0cmFuc2Zvcm1zM2Q6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gISFlKFwicGVyc3BlY3RpdmVcIilcbiAgICAgICAgICAgIH0sIGNzc3RyYW5zaXRpb25zOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICEhZShcInRyYW5zaXRpb25cIilcbiAgICAgICAgICAgIH0sIGNzc2FuaW1hdGlvbnM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gISFlKFwiYW5pbWF0aW9uXCIpXG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGouY3NzdHJhbnNpdGlvbnMoKSAmJiAoYS5zdXBwb3J0LnRyYW5zaXRpb24gPSBuZXcgU3RyaW5nKGYoXCJ0cmFuc2l0aW9uXCIpKSwgYS5zdXBwb3J0LnRyYW5zaXRpb24uZW5kID0gaS50cmFuc2l0aW9uLmVuZFthLnN1cHBvcnQudHJhbnNpdGlvbl0pLCBqLmNzc2FuaW1hdGlvbnMoKSAmJiAoYS5zdXBwb3J0LmFuaW1hdGlvbiA9IG5ldyBTdHJpbmcoZihcImFuaW1hdGlvblwiKSksIGEuc3VwcG9ydC5hbmltYXRpb24uZW5kID0gaS5hbmltYXRpb24uZW5kW2Euc3VwcG9ydC5hbmltYXRpb25dKSwgai5jc3N0cmFuc2Zvcm1zKCkgJiYgKGEuc3VwcG9ydC50cmFuc2Zvcm0gPSBuZXcgU3RyaW5nKGYoXCJ0cmFuc2Zvcm1cIikpLCBhLnN1cHBvcnQudHJhbnNmb3JtM2QgPSBqLmNzc3RyYW5zZm9ybXMzZCgpKVxuICAgIH0od2luZG93LlplcHRvIHx8IHdpbmRvdy5qUXVlcnksIHdpbmRvdywgZG9jdW1lbnQpO1xuXG4gICAgLy8gVHdvIFJvdyBDYXJvdXNlbFxuICAgIDsoZnVuY3Rpb24gKCQsIHdpbmRvdywgZG9jdW1lbnQsIHVuZGVmaW5lZCkge1xuICAgICAgICBPd2wycm93ID0gZnVuY3Rpb24gKHNjb3BlKSB7XG4gICAgICAgICAgICB0aGlzLm93bCA9IHNjb3BlO1xuICAgICAgICAgICAgdGhpcy5vd2wub3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCBPd2wycm93LkRlZmF1bHRzLCB0aGlzLm93bC5vcHRpb25zKTtcbiAgICAgICAgICAgIC8vbGluayBjYWxsYmFjayBldmVudHMgd2l0aCBvd2wgY2Fyb3VzZWwgaGVyZVxuXG4gICAgICAgICAgICB0aGlzLmhhbmRsZXJzID0ge1xuICAgICAgICAgICAgICAgICdpbml0aWFsaXplLm93bC5jYXJvdXNlbCc6ICQucHJveHkoZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMub3dsLnNldHRpbmdzLm93bDJyb3cpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYnVpbGQycm93KHRoaXMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSwgdGhpcylcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHRoaXMub3dsLiRlbGVtZW50Lm9uKHRoaXMuaGFuZGxlcnMpO1xuICAgICAgICB9O1xuXG4gICAgICAgIE93bDJyb3cuRGVmYXVsdHMgPSB7XG4gICAgICAgICAgICBvd2wycm93OiBmYWxzZSxcbiAgICAgICAgICAgIG93bDJyb3dUYXJnZXQ6ICdzYnlfaXRlbScsXG4gICAgICAgICAgICBvd2wycm93Q29udGFpbmVyOiAnc2J5X293bDJyb3ctaXRlbScsXG4gICAgICAgICAgICBvd2wycm93RGlyZWN0aW9uOiAndXRkJyAvLyBsdHJcbiAgICAgICAgfTtcblxuICAgICAgICAvL21laHRvZHM6XG4gICAgICAgIE93bDJyb3cucHJvdG90eXBlLmJ1aWxkMnJvdyA9IGZ1bmN0aW9uICh0aGlzU2NvcGUpIHtcblxuICAgICAgICAgICAgdmFyIGNhcm91c2VsID0gJCh0aGlzU2NvcGUub3dsLiRlbGVtZW50KTtcbiAgICAgICAgICAgIHZhciBjYXJvdXNlbEl0ZW1zID0gY2Fyb3VzZWwuZmluZCgnLicgKyB0aGlzU2NvcGUub3dsLm9wdGlvbnMub3dsMnJvd1RhcmdldCk7XG5cbiAgICAgICAgICAgIHZhciBhRXZlbkVsZW1lbnRzID0gW107XG4gICAgICAgICAgICB2YXIgYU9kZEVsZW1lbnRzID0gW107XG5cbiAgICAgICAgICAgICQuZWFjaChjYXJvdXNlbEl0ZW1zLCBmdW5jdGlvbiAoaW5kZXgsIGl0ZW0pIHtcbiAgICAgICAgICAgICAgICBpZiAoaW5kZXggJSAyID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGFFdmVuRWxlbWVudHMucHVzaChpdGVtKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBhT2RkRWxlbWVudHMucHVzaChpdGVtKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgLy9jYXJvdXNlbC5lbXB0eSgpO1xuXG4gICAgICAgICAgICBzd2l0Y2ggKHRoaXNTY29wZS5vd2wub3B0aW9ucy5vd2wycm93RGlyZWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAnbHRyJzpcbiAgICAgICAgICAgICAgICAgICAgdGhpc1Njb3BlLmxlZnRUb3JpZ2h0KHRoaXNTY29wZSwgY2Fyb3VzZWwsIGNhcm91c2VsSXRlbXMpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGRlZmF1bHQgOlxuICAgICAgICAgICAgICAgICAgICB0aGlzU2NvcGUudXBUb2Rvd24odGhpc1Njb3BlLCBhRXZlbkVsZW1lbnRzLCBhT2RkRWxlbWVudHMsIGNhcm91c2VsKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9O1xuXG4gICAgICAgIE93bDJyb3cucHJvdG90eXBlLmxlZnRUb3JpZ2h0ID0gZnVuY3Rpb24gKHRoaXNTY29wZSwgY2Fyb3VzZWwsIGNhcm91c2VsSXRlbXMpIHtcblxuICAgICAgICAgICAgdmFyIG8yd0NvbnRhaW5lckNsYXNzID0gdGhpc1Njb3BlLm93bC5vcHRpb25zLm93bDJyb3dDb250YWluZXI7XG4gICAgICAgICAgICB2YXIgb3dsTWFyZ2luID0gdGhpc1Njb3BlLm93bC5vcHRpb25zLm1hcmdpbjtcbiAgICAgICAgICAgIHZhciBjYXJvdXNlbEl0ZW1zTGVuZ3RoID0gY2Fyb3VzZWxJdGVtcy5sZW5ndGg7XG4gICAgICAgICAgICB2YXIgZmlyc0FyciA9IFtdO1xuICAgICAgICAgICAgdmFyIHNlY29uZEFyciA9IFtdO1xuXG4gICAgICAgICAgICBpZiAoY2Fyb3VzZWxJdGVtc0xlbmd0aCAlIDIgPT09IDEpIHtcbiAgICAgICAgICAgICAgICBjYXJvdXNlbEl0ZW1zTGVuZ3RoID0gKChjYXJvdXNlbEl0ZW1zTGVuZ3RoIC0gMSkgLyAyKSArIDE7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNhcm91c2VsSXRlbXNMZW5ndGggPSBjYXJvdXNlbEl0ZW1zTGVuZ3RoIC8gMjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJC5lYWNoKGNhcm91c2VsSXRlbXMsIGZ1bmN0aW9uIChpbmRleCwgaXRlbSkge1xuXG5cbiAgICAgICAgICAgICAgICBpZiAoaW5kZXggPCBjYXJvdXNlbEl0ZW1zTGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIGZpcnNBcnIucHVzaChpdGVtKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzZWNvbmRBcnIucHVzaChpdGVtKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgJC5lYWNoKGZpcnNBcnIsIGZ1bmN0aW9uIChpbmRleCwgaXRlbSkge1xuICAgICAgICAgICAgICAgIHZhciByb3dDb250YWluZXIgPSAkKCc8ZGl2IGNsYXNzPVwiJyArIG8yd0NvbnRhaW5lckNsYXNzICsgJ1wiLz4nKTtcblxuICAgICAgICAgICAgICAgIHZhciBmaXJzdFJvd0VsZW1lbnQgPSBmaXJzQXJyW2luZGV4XTtcbiAgICAgICAgICAgICAgICBmaXJzdFJvd0VsZW1lbnQuc3R5bGUubWFyZ2luQm90dG9tID0gb3dsTWFyZ2luICsgJ3B4JztcblxuICAgICAgICAgICAgICAgIHJvd0NvbnRhaW5lclxuICAgICAgICAgICAgICAgICAgLmFwcGVuZChmaXJzdFJvd0VsZW1lbnQpXG4gICAgICAgICAgICAgICAgICAuYXBwZW5kKHNlY29uZEFycltpbmRleF0pO1xuXG4gICAgICAgICAgICAgICAgY2Fyb3VzZWwuYXBwZW5kKHJvd0NvbnRhaW5lcik7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICB9O1xuXG4gICAgICAgIE93bDJyb3cucHJvdG90eXBlLnVwVG9kb3duID0gZnVuY3Rpb24gKHRoaXNTY29wZSwgYUV2ZW5FbGVtZW50cywgYU9kZEVsZW1lbnRzLCBjYXJvdXNlbCkge1xuXG4gICAgICAgICAgICB2YXIgbzJ3Q29udGFpbmVyQ2xhc3MgPSB0aGlzU2NvcGUub3dsLm9wdGlvbnMub3dsMnJvd0NvbnRhaW5lcjtcbiAgICAgICAgICAgIHZhciBvd2xNYXJnaW4gPSB0aGlzU2NvcGUub3dsLm9wdGlvbnMubWFyZ2luO1xuXG4gICAgICAgICAgICAkLmVhY2goYUV2ZW5FbGVtZW50cywgZnVuY3Rpb24gKGluZGV4LCBpdGVtKSB7XG5cbiAgICAgICAgICAgICAgICB2YXIgcm93Q29udGFpbmVyID0gJCgnPGRpdiBjbGFzcz1cIicgKyBvMndDb250YWluZXJDbGFzcyArICdcIi8+Jyk7XG4gICAgICAgICAgICAgICAgdmFyIGV2ZW5FbGVtZW50ID0gYUV2ZW5FbGVtZW50c1tpbmRleF07XG5cbiAgICAgICAgICAgICAgICBldmVuRWxlbWVudC5zdHlsZS5tYXJnaW5Cb3R0b20gPSBvd2xNYXJnaW4gKyAncHgnO1xuXG4gICAgICAgICAgICAgICAgcm93Q29udGFpbmVyXG4gICAgICAgICAgICAgICAgICAuYXBwZW5kKGV2ZW5FbGVtZW50KVxuICAgICAgICAgICAgICAgICAgLmFwcGVuZChhT2RkRWxlbWVudHNbaW5kZXhdKTtcblxuICAgICAgICAgICAgICAgIGNhcm91c2VsLmFwcGVuZChyb3dDb250YWluZXIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIERlc3Ryb3lzIHRoZSBwbHVnaW4uXG4gICAgICAgICAqL1xuICAgICAgICBPd2wycm93LnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGhhbmRsZXIsIHByb3BlcnR5O1xuICAgICAgICB9O1xuXG4gICAgICAgICQuZm4uc2J5T3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2luc1snb3dsMnJvdyddID0gT3dsMnJvdztcbiAgICB9KSh3aW5kb3cuWmVwdG8gfHwgd2luZG93LmpRdWVyeSwgd2luZG93LCBkb2N1bWVudCk7XG5cbiAgICAoZnVuY3Rpb24oJCl7XG5cbiAgICAgICAgZnVuY3Rpb24gc2J5QWRkVmlzaWJpbGl0eUxpc3RlbmVyKCkge1xuICAgICAgICAgICAgLyogRGV0ZWN0IHdoZW4gZWxlbWVudCBiZWNvbWVzIHZpc2libGUuIFVzZWQgZm9yIHdoZW4gdGhlIGZlZWQgaXMgaW5pdGlhbGx5IGhpZGRlbiwgaW4gYSB0YWIgZm9yIGV4YW1wbGUuIGh0dHBzOi8vZ2l0aHViLmNvbS9zaGF1bmJvd2UvanF1ZXJ5LnZpc2liaWxpdHlDaGFuZ2VkICovXG4gICAgICAgICAgICAhZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgICAgICAgICB2YXIgbiA9IHtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgfSwgcnVuT25Mb2FkOiAhMCwgZnJlcXVlbmN5OiAxMDAsIHNieVByZXZpb3VzVmlzaWJpbGl0eTogbnVsbFxuICAgICAgICAgICAgICAgIH0sIGMgPSB7fTtcbiAgICAgICAgICAgICAgICBjLnNieUNoZWNrVmlzaWJpbGl0eSA9IGZ1bmN0aW9uIChpLCBuKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChqUXVlcnkuY29udGFpbnMoZG9jdW1lbnQsIGlbMF0pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZSA9IG4uc2J5UHJldmlvdXNWaXNpYmlsaXR5LCB0ID0gaS5pcyhcIjp2aXNpYmxlXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbi5zYnlQcmV2aW91c1Zpc2liaWxpdHkgPSB0LCBudWxsID09IGUgPyBuLnJ1bk9uTG9hZCAmJiBuLmNhbGxiYWNrKGksIHQpIDogZSAhPT0gdCAmJiBuLmNhbGxiYWNrKGksIHQpLCBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjLnNieUNoZWNrVmlzaWJpbGl0eShpLCBuKVxuICAgICAgICAgICAgICAgICAgICAgICAgfSwgbi5mcmVxdWVuY3kpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LCBpLmZuLnNieVZpc2liaWxpdHlDaGFuZ2VkID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHQgPSBpLmV4dGVuZCh7fSwgbiwgZSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYy5zYnlDaGVja1Zpc2liaWxpdHkoaSh0aGlzKSwgdClcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KGpRdWVyeSk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBTYnkoKSB7XG4gICAgICAgICAgICB0aGlzLmZlZWRzID0ge307XG4gICAgICAgICAgICB0aGlzLmN0YXMgPSB7fTtcbiAgICAgICAgICAgIHRoaXMub3B0aW9ucyA9IHNieU9wdGlvbnM7XG4gICAgICAgICAgICB0aGlzLmlzVG91Y2ggPSBzYnlJc1RvdWNoKCk7XG4gICAgICAgIH1cblxuICAgICAgICBTYnkucHJvdG90eXBlID0ge1xuICAgICAgICAgICAgY3JlYXRlUGFnZTogZnVuY3Rpb24gKGNyZWF0ZUZlZWRzLCBjcmVhdGVGZWVkc0FyZ3MpIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHdpbmRvdy5zYnlhamF4dXJsID09PSAndW5kZWZpbmVkJyB8fCB3aW5kb3cuc2J5YWpheHVybC5pbmRleE9mKHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZSkgPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5zYnlhamF4dXJsID0gd2luZG93LmxvY2F0aW9uLmhvc3RuYW1lICsgJy93cC1hZG1pbi9hZG1pbi1hamF4LnBocCc7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgJCgnLnNieV9ub19qc19lcnJvcl9tZXNzYWdlJykucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgJCgnLnNieV9ub19qcycpLnJlbW92ZUNsYXNzKCdzYnlfbm9fanMnKTtcblxuICAgICAgICAgICAgICAgIGNyZWF0ZUZlZWRzKGNyZWF0ZUZlZWRzQXJncyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbWF5YmVBZGRZVEFQSTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyIHlvdXR1YmVTY3JpcHRJZCA9IFwic2J5LXlvdXR1YmUtYXBpXCI7XG4gICAgICAgICAgICAgICAgdmFyIHlvdXR1YmVTY3JpcHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh5b3V0dWJlU2NyaXB0SWQpO1xuXG4gICAgICAgICAgICAgICAgaWYgKHlvdXR1YmVTY3JpcHQgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XG4gICAgICAgICAgICAgICAgICAgIHZhciBmaXJzdFNjcmlwdCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpWzBdO1xuXG4gICAgICAgICAgICAgICAgICAgIHRhZy5zcmMgPSBcImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2lmcmFtZV9hcGlcIjtcbiAgICAgICAgICAgICAgICAgICAgdGFnLmlkID0geW91dHViZVNjcmlwdElkO1xuICAgICAgICAgICAgICAgICAgICBmaXJzdFNjcmlwdC5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0YWcsIGZpcnN0U2NyaXB0KTtcblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjcmVhdGVMaWdodGJveDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyIGxiQnVpbGRlciA9IHNieUdldGxpZ2h0Ym94QnVpbGRlcigpO1xuICAgICAgICAgICAgICAgIHZhciBzYnlfbGJfZGVsYXkgPSAoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc2J5X3RpbWVyID0gMDtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChzYnlfY2FsbGJhY2ssIHNieV9tcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHNieV90aW1lcik7XG4gICAgICAgICAgICAgICAgICAgICAgICBzYnlfdGltZXIgPSBzZXRUaW1lb3V0KHNieV9jYWxsYmFjaywgc2J5X21zKTtcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9KSgpO1xuICAgICAgICAgICAgICAgIGpRdWVyeSh3aW5kb3cpLm9uKCdyZXNpemUnLGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgc2J5X2xiX2RlbGF5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxiQnVpbGRlci5hZnRlclJlc2l6ZSgpO1xuICAgICAgICAgICAgICAgICAgICB9LCAyMDApO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIC8qIExpZ2h0Ym94IHYyLjcuMSBieSBMb2tlc2ggRGhha2FyIC0gaHR0cDovL2xva2VzaGRoYWthci5jb20vcHJvamVjdHMvbGlnaHRib3gyLyAtIEhlYXZpbHkgbW9kaWZpZWQgc3BlY2lmaWNhbGx5IGZvciB0aGlzIHBsdWdpbiAqL1xuICAgICAgICAgICAgICAgIChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGEgPSBqUXVlcnksXG4gICAgICAgICAgICAgICAgICAgICAgYiA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiBhKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5mYWRlRHVyYXRpb24gPSA1MDAsIHRoaXMuZml0SW1hZ2VzSW5WaWV3cG9ydCA9ICEwLCB0aGlzLnJlc2l6ZUR1cmF0aW9uID0gNzAwLCB0aGlzLnBvc2l0aW9uRnJvbVRvcCA9IDUwLCB0aGlzLnNob3dJbWFnZU51bWJlckxhYmVsID0gITAsIHRoaXMuYWx3YXlzU2hvd05hdk9uVG91Y2hEZXZpY2VzID0gITEsIHRoaXMud3JhcEFyb3VuZCA9ICExXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGEucHJvdG90eXBlLmFsYnVtTGFiZWwgPSBmdW5jdGlvbihhLCBiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYSArIFwiIC8gXCIgKyBiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sIGFcbiAgICAgICAgICAgICAgICAgICAgICB9KCksXG4gICAgICAgICAgICAgICAgICAgICAgYyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiBiKGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub3B0aW9ucyA9IGEsIHRoaXMuYWxidW0gPSBbXSwgdGhpcy5jdXJyZW50SW1hZ2VJbmRleCA9IHZvaWQgMCwgdGhpcy5pbml0KClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYi5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5lbmFibGUoKSwgdGhpcy5idWlsZCgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sIGIucHJvdG90eXBlLmVuYWJsZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGIgPSB0aGlzO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYShcImJvZHlcIikub24oXCJjbGlja1wiLCBcImFbZGF0YS1zYnktbGlnaHRib3hdXCIsIGZ1bmN0aW9uKGMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYi5zdGFydChhKGMuY3VycmVudFRhcmdldCkpLCAhMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgYi5wcm90b3R5cGUuYnVpbGQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBiID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGEoXCJcIitcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGJCdWlsZGVyLnRlbXBsYXRlKCkpLmFwcGVuZFRvKGEoXCJib2R5XCIpKSwgdGhpcy4kbGlnaHRib3ggPSBhKFwiI3NieV9saWdodGJveFwiKSwgdGhpcy4kb3ZlcmxheSA9IGEoXCIjc2J5X2xpZ2h0Ym94T3ZlcmxheVwiKSwgdGhpcy4kb3V0ZXJDb250YWluZXIgPSB0aGlzLiRsaWdodGJveC5maW5kKFwiLnNieV9sYi1vdXRlckNvbnRhaW5lclwiKSwgdGhpcy4kY29udGFpbmVyID0gdGhpcy4kbGlnaHRib3guZmluZChcIi5zYnlfbGItY29udGFpbmVyXCIpLCB0aGlzLmNvbnRhaW5lclRvcFBhZGRpbmcgPSBwYXJzZUludCh0aGlzLiRjb250YWluZXIuY3NzKFwicGFkZGluZy10b3BcIiksIDEwKSwgdGhpcy5jb250YWluZXJSaWdodFBhZGRpbmcgPSBwYXJzZUludCh0aGlzLiRjb250YWluZXIuY3NzKFwicGFkZGluZy1yaWdodFwiKSwgMTApLCB0aGlzLmNvbnRhaW5lckJvdHRvbVBhZGRpbmcgPSBwYXJzZUludCh0aGlzLiRjb250YWluZXIuY3NzKFwicGFkZGluZy1ib3R0b21cIiksIDEwKSwgdGhpcy5jb250YWluZXJMZWZ0UGFkZGluZyA9IHBhcnNlSW50KHRoaXMuJGNvbnRhaW5lci5jc3MoXCJwYWRkaW5nLWxlZnRcIiksIDEwKSwgdGhpcy4kb3ZlcmxheS5oaWRlKCkub24oXCJjbGlja1wiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYi5lbmQoKSwgITFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLCBqUXVlcnkoZG9jdW1lbnQpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50LCBiLCBjKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9GYWRlIG91dCB0aGUgbGlnaHRib3ggaWYgY2xpY2sgYW55d2hlcmUgb3V0c2lkZSBvZiB0aGUgdHdvIGVsZW1lbnRzIGRlZmluZWQgYmVsb3dcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWpRdWVyeShldmVudC50YXJnZXQpLmNsb3Nlc3QoJy5zYnlfbGItb3V0ZXJDb250YWluZXInKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFqUXVlcnkoZXZlbnQudGFyZ2V0KS5jbG9zZXN0KCcuc2J5X2xiLWRhdGFDb250YWluZXInKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vRmFkZSBvdXQgbGlnaHRib3hcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxiQnVpbGRlci5wYXVzZVBsYXllcigpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBqUXVlcnkoJyNzYnlfbGlnaHRib3hPdmVybGF5LCAjc2J5X2xpZ2h0Ym94JykuZmFkZU91dCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksIHRoaXMuJGxpZ2h0Ym94LmhpZGUoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KCcjc2J5X2xpZ2h0Ym94T3ZlcmxheScpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24oYykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGJCdWlsZGVyLnBhdXNlUGxheWVyKCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBcInNieV9saWdodGJveFwiID09PSBhKGMudGFyZ2V0KS5hdHRyKFwiaWRcIikgJiYgYi5lbmQoKSwgITFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksIHRoaXMuJGxpZ2h0Ym94LmZpbmQoXCIuc2J5X2xiLXByZXZcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYkJ1aWxkZXIucGF1c2VQbGF5ZXIoKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBiLmNoYW5nZUltYWdlKDAgPT09IGIuY3VycmVudEltYWdlSW5kZXggPyBiLmFsYnVtLmxlbmd0aCAtIDEgOiBiLmN1cnJlbnRJbWFnZUluZGV4IC0gMSksICExXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwgdGhpcy4kbGlnaHRib3guZmluZChcIi5zYnlfbGItY29udGFpbmVyXCIpLm9uKFwic3dpcGVyaWdodFwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYkJ1aWxkZXIucGF1c2VQbGF5ZXIoKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBiLmNoYW5nZUltYWdlKDAgPT09IGIuY3VycmVudEltYWdlSW5kZXggPyBiLmFsYnVtLmxlbmd0aCAtIDEgOiBiLmN1cnJlbnRJbWFnZUluZGV4IC0gMSksICExXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwgdGhpcy4kbGlnaHRib3guZmluZChcIi5zYnlfbGItbmV4dFwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxiQnVpbGRlci5wYXVzZVBsYXllcigpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGIuY2hhbmdlSW1hZ2UoYi5jdXJyZW50SW1hZ2VJbmRleCA9PT0gYi5hbGJ1bS5sZW5ndGggLSAxID8gMCA6IGIuY3VycmVudEltYWdlSW5kZXggKyAxKSwgITFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLCB0aGlzLiRsaWdodGJveC5maW5kKFwiLnNieV9sYi1jb250YWluZXJcIikub24oXCJzd2lwZWxlZnRcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGJCdWlsZGVyLnBhdXNlUGxheWVyKCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYi5jaGFuZ2VJbWFnZShiLmN1cnJlbnRJbWFnZUluZGV4ID09PSBiLmFsYnVtLmxlbmd0aCAtIDEgPyAwIDogYi5jdXJyZW50SW1hZ2VJbmRleCArIDEpLCAhMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksIHRoaXMuJGxpZ2h0Ym94LmZpbmQoXCIuc2J5X2xiLWxvYWRlciwgLnNieV9sYi1jbG9zZVwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGJCdWlsZGVyLnBhdXNlUGxheWVyKCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYi5lbmQoKSwgITFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sIGIucHJvdG90eXBlLnN0YXJ0ID0gZnVuY3Rpb24oYikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gYyhhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZC5hbGJ1bS5wdXNoKGxiQnVpbGRlci5nZXREYXRhKGEpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGQgPSB0aGlzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlID0gYSh3aW5kb3cpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZS5vbihcInJlc2l6ZVwiLCBhLnByb3h5KHRoaXMuc2l6ZU92ZXJsYXksIHRoaXMpKSwgYShcInNlbGVjdCwgb2JqZWN0LCBlbWJlZFwiKS5jc3Moe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpc2liaWxpdHk6IFwiaGlkZGVuXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLCB0aGlzLnNpemVPdmVybGF5KCksIHRoaXMuYWxidW0gPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmLCBnID0gMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaCA9IGIuYXR0cihcImRhdGEtc2J5LWxpZ2h0Ym94XCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmID0gYShiLnByb3AoXCJ0YWdOYW1lXCIpICsgJ1tkYXRhLXNieS1saWdodGJveD1cIicgKyBoICsgJ1wiXScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZi5sZW5ndGg7IGkgPSArK2kpIGMoYShmW2ldKSksIGZbaV0gPT09IGJbMF0gJiYgKGcgPSBpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChcImxpZ2h0Ym94XCIgPT09IGIuYXR0cihcInJlbFwiKSkgYyhiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGYgPSBhKGIucHJvcChcInRhZ05hbWVcIikgKyAnW3JlbD1cIicgKyBiLmF0dHIoXCJyZWxcIikgKyAnXCJdJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBmLmxlbmd0aDsgaiA9ICsraikgYyhhKGZbal0pKSwgZltqXSA9PT0gYlswXSAmJiAoZyA9IGopXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgayA9IGUuc2Nyb2xsVG9wKCkgKyB0aGlzLm9wdGlvbnMucG9zaXRpb25Gcm9tVG9wLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsID0gZS5zY3JvbGxMZWZ0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRsaWdodGJveC5jc3Moe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogayArIFwicHhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiBsICsgXCJweFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KS5mYWRlSW4odGhpcy5vcHRpb25zLmZhZGVEdXJhdGlvbiksIHRoaXMuY2hhbmdlSW1hZ2UoZylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgYi5wcm90b3R5cGUuY2hhbmdlSW1hZ2UgPSBmdW5jdGlvbihiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYyA9IHRoaXM7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRpc2FibGVLZXlib2FyZE5hdigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGQgPSB0aGlzLiRsaWdodGJveC5maW5kKFwiLnNieV9sYi1pbWFnZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJG92ZXJsYXkuZmFkZUluKHRoaXMub3B0aW9ucy5mYWRlRHVyYXRpb24pLCBhKFwiLnNieV9sYi1sb2FkZXJcIikuZmFkZUluKFwic2xvd1wiKSwgdGhpcy4kbGlnaHRib3guZmluZChcIi5zYnlfbGItaW1hZ2UsIC5zYnlfbGItbmF2LCAuc2J5X2xiLXByZXYsIC5zYnlfbGItbmV4dCwgLnNieV9sYi1kYXRhQ29udGFpbmVyLCAuc2J5X2xiLW51bWJlcnMsIC5zYnlfbGItY2FwdGlvblwiKS5oaWRlKCksIHRoaXMuJG91dGVyQ29udGFpbmVyLmFkZENsYXNzKFwiYW5pbWF0aW5nXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGUgPSBuZXcgSW1hZ2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmLCBnLCBoLCBpLCBqLCBrLCBsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzYnlBcnJvd1dpZHRoID0gMTAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQuYXR0cihcInNyY1wiLCBjLmFsYnVtW2JdLmxpbmspLCBmID0gYShlKSwgZC53aWR0aChlLndpZHRoKSwgZC5oZWlnaHQoZS5oZWlnaHQpLCBjLm9wdGlvbnMuZml0SW1hZ2VzSW5WaWV3cG9ydCAmJiAobCA9IGEod2luZG93KS53aWR0aCgpLCBrID0gYSh3aW5kb3cpLmhlaWdodCgpLCBqID0gbCAtIGMuY29udGFpbmVyTGVmdFBhZGRpbmcgLSBjLmNvbnRhaW5lclJpZ2h0UGFkZGluZyAtIDIwIC0gc2J5QXJyb3dXaWR0aCwgaSA9IGsgLSBjLmNvbnRhaW5lclRvcFBhZGRpbmcgLSBjLmNvbnRhaW5lckJvdHRvbVBhZGRpbmcgLSAxNTAsIChlLndpZHRoID4gaiB8fCBlLmhlaWdodCA+IGkpICYmIChlLndpZHRoIC8gaiA+IGUuaGVpZ2h0IC8gaSA/IChoID0gaiwgZyA9IHBhcnNlSW50KGUuaGVpZ2h0IC8gKGUud2lkdGggLyBoKSwgMTApLCBkLndpZHRoKGgpLCBkLmhlaWdodChnKSkgOiAoZyA9IGksIGggPSBwYXJzZUludChlLndpZHRoIC8gKGUuaGVpZ2h0IC8gZyksIDEwKSwgZC53aWR0aChoKSwgZC5oZWlnaHQoZykpKSksIGMuc2l6ZUNvbnRhaW5lcihkLndpZHRoKCksIGQuaGVpZ2h0KCkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBlLnNyYyA9IHRoaXMuYWxidW1bYl0ubGluaywgdGhpcy5jdXJyZW50SW1hZ2VJbmRleCA9IGJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgYi5wcm90b3R5cGUuc2l6ZU92ZXJsYXkgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJG92ZXJsYXkud2lkdGgoYSh3aW5kb3cpLndpZHRoKCkpLmhlaWdodChhKGRvY3VtZW50KS5oZWlnaHQoKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgYi5wcm90b3R5cGUuc2l6ZUNvbnRhaW5lciA9IGZ1bmN0aW9uKGEsIGIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGMoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZC4kbGlnaHRib3guZmluZChcIi5zYnlfbGItZGF0YUNvbnRhaW5lclwiKS53aWR0aChnKSwgZC4kbGlnaHRib3guZmluZChcIi5zYnlfbGItcHJldkxpbmtcIikuaGVpZ2h0KGgpLCBkLiRsaWdodGJveC5maW5kKFwiLnNieV9sYi1uZXh0TGlua1wiKS5oZWlnaHQoaCksIGQuc2hvd0ltYWdlKClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkID0gdGhpcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZSA9IHRoaXMuJG91dGVyQ29udGFpbmVyLm91dGVyV2lkdGgoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZiA9IHRoaXMuJG91dGVyQ29udGFpbmVyLm91dGVySGVpZ2h0KCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGcgPSBhICsgdGhpcy5jb250YWluZXJMZWZ0UGFkZGluZyArIHRoaXMuY29udGFpbmVyUmlnaHRQYWRkaW5nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoID0gYiArIHRoaXMuY29udGFpbmVyVG9wUGFkZGluZyArIHRoaXMuY29udGFpbmVyQm90dG9tUGFkZGluZztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUgIT09IGcgfHwgZiAhPT0gaCA/IHRoaXMuJG91dGVyQ29udGFpbmVyLmFuaW1hdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiBnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogaFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgdGhpcy5vcHRpb25zLnJlc2l6ZUR1cmF0aW9uLCBcInN3aW5nXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGMoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkgOiBjKClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgYi5wcm90b3R5cGUuc2hvd0ltYWdlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRsaWdodGJveC5maW5kKFwiLnNieV9sYi1sb2FkZXJcIikuaGlkZSgpLCB0aGlzLiRsaWdodGJveC5maW5kKFwiLnNieV9sYi1pbWFnZVwiKS5mYWRlSW4oXCJzbG93XCIpLCB0aGlzLnVwZGF0ZU5hdigpLCB0aGlzLnVwZGF0ZURldGFpbHMoKSwgdGhpcy5wcmVsb2FkTmVpZ2hib3JpbmdJbWFnZXMoKSwgdGhpcy5lbmFibGVLZXlib2FyZE5hdigpXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sIGIucHJvdG90eXBlLnVwZGF0ZU5hdiA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGEgPSAhMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuY3JlYXRlRXZlbnQoXCJUb3VjaEV2ZW50XCIpLCBhID0gdGhpcy5vcHRpb25zLmFsd2F5c1Nob3dOYXZPblRvdWNoRGV2aWNlcyA/ICEwIDogITFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGIpIHt9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRsaWdodGJveC5maW5kKFwiLnNieV9sYi1uYXZcIikuc2hvdygpLCB0aGlzLmFsYnVtLmxlbmd0aCA+IDEgJiYgKHRoaXMub3B0aW9ucy53cmFwQXJvdW5kID8gKGEgJiYgdGhpcy4kbGlnaHRib3guZmluZChcIi5zYnlfbGItcHJldiwgLnNieV9sYi1uZXh0XCIpLmNzcyhcIm9wYWNpdHlcIiwgXCIxXCIpLCB0aGlzLiRsaWdodGJveC5maW5kKFwiLnNieV9sYi1wcmV2LCAuc2J5X2xiLW5leHRcIikuc2hvdygpKSA6ICh0aGlzLmN1cnJlbnRJbWFnZUluZGV4ID4gMCAmJiAodGhpcy4kbGlnaHRib3guZmluZChcIi5zYnlfbGItcHJldlwiKS5zaG93KCksIGEgJiYgdGhpcy4kbGlnaHRib3guZmluZChcIi5zYnlfbGItcHJldlwiKS5jc3MoXCJvcGFjaXR5XCIsIFwiMVwiKSksIHRoaXMuY3VycmVudEltYWdlSW5kZXggPCB0aGlzLmFsYnVtLmxlbmd0aCAtIDEgJiYgKHRoaXMuJGxpZ2h0Ym94LmZpbmQoXCIuc2J5X2xiLW5leHRcIikuc2hvdygpLCBhICYmIHRoaXMuJGxpZ2h0Ym94LmZpbmQoXCIuc2J5X2xiLW5leHRcIikuY3NzKFwib3BhY2l0eVwiLCBcIjFcIikpKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgYi5wcm90b3R5cGUudXBkYXRlRGV0YWlscyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGIgPSB0aGlzO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiogTkVXIFBIT1RPIEFDVElPTiAqKi9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKGpRdWVyeSgnaWZyYW1lLnNieV9sYi1wbGF5ZXItbG9hZGVkJykubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KCcuc2J5X2xiLXBsYXllci1wbGFjZWhvbGRlcicpLnJlcGxhY2VXaXRoKGpRdWVyeSgnaWZyYW1lLnNieV9sYi1wbGF5ZXItbG9hZGVkJykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGpRdWVyeSgnaWZyYW1lLnNieV9sYi1wbGF5ZXItbG9hZGVkJykucmVtb3ZlQ2xhc3MoJ3NieV9sYi1wbGF5ZXItbG9hZGVkJykuc2hvdygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9Td2l0Y2ggdmlkZW8gd2hlbiBlaXRoZXIgYSBuZXcgcG9wdXAgb3IgbmF2aWdhdGluZyB0byBuZXcgb25lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZmVlZCA9IHdpbmRvdy5zYnkuZmVlZHNbdGhpcy5hbGJ1bVt0aGlzLmN1cnJlbnRJbWFnZUluZGV4XS5mZWVkSW5kZXhdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGJCdWlsZGVyLmJlZm9yZVBsYXllclNldHVwKHRoaXMuJGxpZ2h0Ym94LHRoaXMuYWxidW1bdGhpcy5jdXJyZW50SW1hZ2VJbmRleF0sdGhpcy5jdXJyZW50SW1hZ2VJbmRleCx0aGlzLmFsYnVtLGZlZWQpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiggc2J5X3N1cHBvcnRzX3ZpZGVvKCkgKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBqUXVlcnkoJyNzYnlfbGlnaHRib3gnKS5yZW1vdmVDbGFzcygnc2J5X3ZpZGVvX2xpZ2h0Ym94Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZlZWQuc2V0dGluZ3MuY29uc2VudEdpdmVuICYmIHRoaXMuYWxidW1bdGhpcy5jdXJyZW50SW1hZ2VJbmRleF0udmlkZW8ubGVuZ3RoKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KCcuc2J5X2dkcHJfbm90aWNlJykucmVtb3ZlKCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBsYXllcklEID0gJ3NieV9sYi1wbGF5ZXInO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBqUXVlcnkoJyNzYnlfbGlnaHRib3gnKS5hZGRDbGFzcygnc2J5X3ZpZGVvX2xpZ2h0Ym94Jyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZpZGVvSUQgPSB0aGlzLmFsYnVtW3RoaXMuY3VycmVudEltYWdlSW5kZXhdLnZpZGVvLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1dG9wbGF5ID0gc2J5T3B0aW9ucy5hdXRvcGxheTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cuc2J5TGlnaHRib3hQbGF5ZXIgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYXJncyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBob3N0OiB3aW5kb3cubG9jYXRpb24ucHJvdG9jb2wgKyBmZWVkLmVtYmVkVVJMLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZGVvSWQ6IHZpZGVvSUQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxheWVyVmFyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2Rlc3RicmFuZGluZzogMSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVsOiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRvcGxheTogYXV0b3BsYXlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50czoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnb25TdGF0ZUNoYW5nZSc6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB2aWRlb0lEID0gZGF0YS50YXJnZXQuZ2V0VmlkZW9EYXRhKClbJ3ZpZGVvX2lkJ107XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZWVkLmFmdGVyU3RhdGVDaGFuZ2UocGxheWVySUQsdmlkZW9JRCxkYXRhLCQoJyMnICsgcGxheWVySUQpLmNsb3Nlc3QoJy5zYnlfdmlkZW9fdGh1bWJuYWlsX3dyYXAnKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmVlZC5tYXliZUFkZENUQShwbGF5ZXJJRCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5zYnlMaWdodGJveFBsYXllciA9IG5ldyB3aW5kb3cuWVQuUGxheWVyKHBsYXllcklELCBhcmdzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5zYnlMaWdodGJveFBsYXllci5sb2FkVmlkZW9CeUlkKHZpZGVvSUQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kb3V0ZXJDb250YWluZXIucmVtb3ZlQ2xhc3MoXCJhbmltYXRpbmdcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJGxpZ2h0Ym94LmZpbmQoXCIuc2J5X2xiLWRhdGFDb250YWluZXJcIikuZmFkZUluKHRoaXMub3B0aW9ucy5yZXNpemVEdXJhdGlvbiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYi5zaXplT3ZlcmxheSgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjc2J5X2xpZ2h0Ym94IC5zYnlfbGItcGxheWVyJykuY3NzKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnaGVpZ2h0JyA6ICQoJyNzYnlfbGlnaHRib3ggLnNieV9sYi1vdXRlckNvbnRhaW5lcicpLmhlaWdodCgpKydweCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3dpZHRoJyA6ICQoJyNzYnlfbGlnaHRib3ggLnNieV9sYi1vdXRlckNvbnRhaW5lcicpLndpZHRoKCkrJ3B4JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAndG9wJzogMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sMSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuJGxpZ2h0Ym94LmZpbmQoJ2lmcmFtZScpLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kbGlnaHRib3guZmluZCgnaWZyYW1lJykuYXR0cigndGl0bGUnLHRoaXMuYWxidW1bdGhpcy5jdXJyZW50SW1hZ2VJbmRleF0udmlkZW9UaXRsZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGZ1bGxJbWFnZSA9ICQoJy5zYnlfaXRlbVtkYXRhLXZpZGVvLWlkPScgKyB0aGlzLmFsYnVtW3RoaXMuY3VycmVudEltYWdlSW5kZXhdLnZpZGVvKyddJykuZmluZCgnLnNieV92aWRlb190aHVtYm5haWwnKS5hdHRyKCdkYXRhLWZ1bGwtcmVzJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJy5zYnlfbGItaW1hZ2UnKS5hdHRyKCdzcmMnLGZ1bGxJbWFnZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJG91dGVyQ29udGFpbmVyLnJlbW92ZUNsYXNzKFwiYW5pbWF0aW5nXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRsaWdodGJveC5maW5kKFwiLnNieV9sYi1kYXRhQ29udGFpbmVyXCIpLmZhZGVJbih0aGlzLm9wdGlvbnMucmVzaXplRHVyYXRpb24sIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGIuc2l6ZU92ZXJsYXkoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KFwiLnNieV9sYi1jb250YWluZXJcIikucHJlcGVuZCgnPGEgaHJlZj1cImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9Jyt0aGlzLmFsYnVtW3RoaXMuY3VycmVudEltYWdlSW5kZXhdLnZpZGVvKydcIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCIgY2xhc3M9XCJzYnlfZ2Rwcl9ub3RpY2VcIj48c3ZnIHN0eWxlPVwiY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsMSlcIiBjbGFzcz1cInN2Zy1pbmxpbmUtLWZhIGZhLXBsYXkgZmEtdy0xNCBzYnlfcGxheWJ0blwiIGFyaWEtbGFiZWw9XCJQbGF5XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgZGF0YS1mYS1wcm9jZXNzZWQ9XCJcIiBkYXRhLXByZWZpeD1cImZhXCIgZGF0YS1pY29uPVwicGxheVwiIHJvbGU9XCJwcmVzZW50YXRpb25cIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCA0NDggNTEyXCI+PHBhdGggZmlsbD1cImN1cnJlbnRDb2xvclwiIGQ9XCJNNDI0LjQgMjE0LjdMNzIuNCA2LjZDNDMuOC0xMC4zIDAgNi4xIDAgNDcuOVY0NjRjMCAzNy41IDQwLjcgNjAuMSA3Mi40IDQxLjNsMzUyLTIwOGMzMS40LTE4LjUgMzEuNS02NC4xIDAtODIuNnpcIj48L3BhdGg+PC9zdmc+PC9hPicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYkJ1aWxkZXIuYWZ0ZXJQbGF5ZXJTZXR1cCh0aGlzLiRsaWdodGJveCx0aGlzLmFsYnVtW3RoaXMuY3VycmVudEltYWdlSW5kZXhdLHRoaXMuY3VycmVudEltYWdlSW5kZXgsdGhpcy5hbGJ1bSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5hbGJ1bS5sZW5ndGggPiAxICYmIHRoaXMub3B0aW9ucy5zaG93SW1hZ2VOdW1iZXJMYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRsaWdodGJveC5maW5kKFwiLnNieV9sYi1udW1iZXJcIikudGV4dCh0aGlzLm9wdGlvbnMuYWxidW1MYWJlbCh0aGlzLmN1cnJlbnRJbWFnZUluZGV4ICsgMSwgdGhpcy5hbGJ1bS5sZW5ndGgpKS5mYWRlSW4oXCJmYXN0XCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJGxpZ2h0Ym94LmZpbmQoXCIuc2J5X2xiLW51bWJlclwiKS5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sIGIucHJvdG90eXBlLnByZWxvYWROZWlnaGJvcmluZ0ltYWdlcyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuYWxidW0ubGVuZ3RoID4gdGhpcy5jdXJyZW50SW1hZ2VJbmRleCArIDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYSA9IG5ldyBJbWFnZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhLnNyYyA9IHRoaXMuYWxidW1bdGhpcy5jdXJyZW50SW1hZ2VJbmRleCArIDFdLmxpbmtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmN1cnJlbnRJbWFnZUluZGV4ID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBiID0gbmV3IEltYWdlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGIuc3JjID0gdGhpcy5hbGJ1bVt0aGlzLmN1cnJlbnRJbWFnZUluZGV4IC0gMV0ubGlua1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBiLnByb3RvdHlwZS5lbmFibGVLZXlib2FyZE5hdiA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYShkb2N1bWVudCkub24oXCJrZXl1cC5rZXlib2FyZFwiLCBhLnByb3h5KHRoaXMua2V5Ym9hcmRBY3Rpb24sIHRoaXMpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBiLnByb3RvdHlwZS5kaXNhYmxlS2V5Ym9hcmROYXYgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGEoZG9jdW1lbnQpLm9mZihcIi5rZXlib2FyZFwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBiLnByb3RvdHlwZS5rZXlib2FyZEFjdGlvbiA9IGZ1bmN0aW9uKGEpIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIEtFWUNPREVfRVNDICAgICAgICA9IDI3O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIEtFWUNPREVfTEVGVEFSUk9XICA9IDM3O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIEtFWUNPREVfUklHSFRBUlJPVyA9IDM5O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIga2V5Y29kZSA9IGV2ZW50LmtleUNvZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIga2V5ICAgICA9IFN0cmluZy5mcm9tQ2hhckNvZGUoa2V5Y29kZSkudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChrZXljb2RlID09PSBLRVlDT0RFX0VTQyB8fCBrZXkubWF0Y2goL3h8b3xjLykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiggc2J5X3N1cHBvcnRzX3ZpZGVvKCkgKSAkKCcjc2J5X2xpZ2h0Ym94IHZpZGVvLnNieV92aWRlbycpWzBdLnBhdXNlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnI3NieV9saWdodGJveCBpZnJhbWUnKS5hdHRyKCdzcmMnLCAnJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5lbmQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSAncCcgfHwga2V5Y29kZSA9PT0gS0VZQ09ERV9MRUZUQVJST1cpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5jdXJyZW50SW1hZ2VJbmRleCAhPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZUltYWdlKHRoaXMuY3VycmVudEltYWdlSW5kZXggLSAxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMub3B0aW9ucy53cmFwQXJvdW5kICYmIHRoaXMuYWxidW0ubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZUltYWdlKHRoaXMuYWxidW0ubGVuZ3RoIC0gMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoIHNieV9zdXBwb3J0c192aWRlbygpICkgJCgnI3NieV9saWdodGJveCB2aWRlby5zYnlfdmlkZW8nKVswXS5wYXVzZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJyNzYnlfbGlnaHRib3ggaWZyYW1lJykuYXR0cignc3JjJywgJycpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGtleSA9PT0gJ24nIHx8IGtleWNvZGUgPT09IEtFWUNPREVfUklHSFRBUlJPVykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmN1cnJlbnRJbWFnZUluZGV4ICE9PSB0aGlzLmFsYnVtLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGFuZ2VJbWFnZSh0aGlzLmN1cnJlbnRJbWFnZUluZGV4ICsgMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLm9wdGlvbnMud3JhcEFyb3VuZCAmJiB0aGlzLmFsYnVtLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGFuZ2VJbWFnZSgwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGJCdWlsZGVyLnBhdXNlUGxheWVyKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgYi5wcm90b3R5cGUuZW5kID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRpc2FibGVLZXlib2FyZE5hdigpLCBhKHdpbmRvdykub2ZmKFwicmVzaXplXCIsIHRoaXMuc2l6ZU92ZXJsYXkpLCB0aGlzLiRsaWdodGJveC5mYWRlT3V0KHRoaXMub3B0aW9ucy5mYWRlRHVyYXRpb24pLCB0aGlzLiRvdmVybGF5LmZhZGVPdXQodGhpcy5vcHRpb25zLmZhZGVEdXJhdGlvbiksIGEoXCJzZWxlY3QsIG9iamVjdCwgZW1iZWRcIikuY3NzKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aXNpYmlsaXR5OiBcInZpc2libGVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgYlxuICAgICAgICAgICAgICAgICAgICAgIH0oKTtcbiAgICAgICAgICAgICAgICAgICAgYShmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYSA9IG5ldyBiO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ldyBjKGEpXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL0xpZ2h0Ym94IGhpZGUgcGhvdG8gZnVuY3Rpb25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcuc2J5X2xpZ2h0Ym94X2FjdGlvbiBhJykub2ZmKCkub24oJ2NsaWNrJywgZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5wYXJlbnQoKS5maW5kKCcuc2J5X2xpZ2h0Ym94X3Rvb2x0aXAnKS50b2dnbGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9KS5jYWxsKHRoaXMpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNyZWF0ZUZlZWRzOiBmdW5jdGlvbiAoYXJncykge1xuICAgICAgICAgICAgICAgIGlmICggIXNieU9wdGlvbnMuaXNBZG1pbiApIHtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LnNieS5jcmVhdGVMaWdodGJveCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBhcmdzLndoZW5GZWVkc0NyZWF0ZWQoXG4gICAgICAgICAgICAgICAgICAkKCcuc2JfeW91dHViZScpLmVhY2goZnVuY3Rpb24gKGluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5hdHRyKCdkYXRhLXNieS1pbmRleCcsIGluZGV4ICsgMSk7XG4gICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5maW5kKCcuc2J5X3BsYXllcicpLnJlcGxhY2VXaXRoKCc8ZGl2IGlkPVwic2J5X3BsYXllcicraW5kZXgrJ1wiPjwvZGl2PicpO1xuICAgICAgICAgICAgICAgICAgICAgIHZhciAkc2VsZiA9ICQodGhpcyksXG4gICAgICAgICAgICAgICAgICAgICAgICBmbGFncyA9IHR5cGVvZiAkc2VsZi5hdHRyKCdkYXRhLXNieS1mbGFncycpICE9PSAndW5kZWZpbmVkJyA/ICRzZWxmLmF0dHIoJ2RhdGEtc2J5LWZsYWdzJykuc3BsaXQoJywnKSA6IFtdLFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2VuZXJhbCA9IHR5cGVvZiAkc2VsZi5hdHRyKCdkYXRhLW9wdGlvbnMnKSAhPT0gJ3VuZGVmaW5lZCcgPyBKU09OLnBhcnNlKCRzZWxmLmF0dHIoJ2RhdGEtb3B0aW9ucycpKSA6IHt9O1xuICAgICAgICAgICAgICAgICAgICAgIGlmIChmbGFncy5pbmRleE9mKCd0ZXN0QWpheCcpID4gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LnNieS50cmlnZ2VyZWRUZXN0ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHN1Ym1pdERhdGEgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdhY3Rpb24nIDogJ3NieV9vbl9hamF4X3Rlc3RfdHJpZ2dlcidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uU3VjY2VzcyA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2RpZCB0ZXN0Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc2J5QWpheChzdWJtaXREYXRhLG9uU3VjY2VzcylcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgdmFyIGZlZWRPcHRpb25zID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xzIDogJHNlbGYuYXR0cignZGF0YS1jb2xzJyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbHNtb2JpbGUgOiAkc2VsZi5hdHRyKCdkYXRhLWNvbHNtb2JpbGUnKSAhPT0gJ3NhbWUnID8gJHNlbGYuYXR0cignZGF0YS1jb2xzbW9iaWxlJykgOiAkc2VsZi5hdHRyKCdkYXRhLWNvbHMnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbnVtIDogJHNlbGYuYXR0cignZGF0YS1udW0nKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaW1nUmVzIDogJHNlbGYuYXR0cignZGF0YS1yZXMnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZmVlZElEIDogJHNlbGYuYXR0cignZGF0YS1mZWVkaWQnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zdElEIDogdHlwZW9mICRzZWxmLmF0dHIoICdkYXRhLXBvc3RpZCcgKSAhPT0gJ3VuZGVmaW5kJyA/ICRzZWxmLmF0dHIoICdkYXRhLXBvc3RpZCcgKSA6ICd1bmtub3duJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvcnRDb2RlQXR0cyA6ICRzZWxmLmF0dHIoJ2RhdGEtc2hvcnRjb2RlLWF0dHMnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzaXppbmdFbmFibGVkIDogKGZsYWdzLmluZGV4T2YoJ3Jlc2l6ZURpc2FibGUnKSA9PT0gLTEpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBpbWFnZUxvYWRFbmFibGVkIDogKGZsYWdzLmluZGV4T2YoJ2ltYWdlTG9hZERpc2FibGUnKSA9PT0gLTEpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBkZWJ1Z0VuYWJsZWQgOiAoZmxhZ3MuaW5kZXhPZignZGVidWcnKSA+IC0xKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZmF2b3JMb2NhbCA6IChmbGFncy5pbmRleE9mKCdmYXZvckxvY2FsJykgPiAtMSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGFqYXhQb3N0TG9hZCA6IChmbGFncy5pbmRleE9mKCdhamF4UG9zdExvYWQnKSA+IC0xKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tXUFBvc3RzIDogKGZsYWdzLmluZGV4T2YoJ2NoZWNrV1BQb3N0cycpID4gLTEpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBzaW5nbGVDaGVja1Bvc3RzIDogKGZsYWdzLmluZGV4T2YoJ3NpbmdsZUNoZWNrUG9zdHMnKSA+IC0xKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbmFycm93UGxheWVyIDogKGZsYWdzLmluZGV4T2YoJ25hcnJvd1BsYXllcicpID4gLTEpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBnZHByIDogKGZsYWdzLmluZGV4T2YoJ2dkcHInKSA+IC0xKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc2VudEdpdmVuIDogKGZsYWdzLmluZGV4T2YoJ2dkcHInKSA9PT0gLTEpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBub0NETiA6IChmbGFncy5pbmRleE9mKCdkaXNhYmxlY2RuJykgPiAtMSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGFsbG93Q29va2llczogKGZsYWdzLmluZGV4T2YoJ2FsbG93Y29va2llcycpID4gLTEpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBsaWdodGJveEVuYWJsZWQgOiB0eXBlb2YgJHNlbGYuYXR0cignZGF0YS1zYnktc3VwcG9ydHMtbGlnaHRib3gnKSAhPT0gJ3VuZGVmaW5lZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2F0b3IgOiAoZmxhZ3MuaW5kZXhPZignbG9jYXRvcicpID4gLTEpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRvTWluUmVzIDogMSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZ2VuZXJhbCA6IGdlbmVyYWxcbiAgICAgICAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgICAgICAgd2luZG93LnNieS5mZWVkc1tpbmRleF0gPSBzYnlHZXROZXdGZWVkKHRoaXMsIGluZGV4LCBmZWVkT3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cuc2J5QVBJUmVhZHkgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5zYnkuZmVlZHNbaW5kZXhdLnBsYXllckFQSVJlYWR5ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgd2luZG93LnNieS5mZWVkc1tpbmRleF0uc2V0UmVzaXplZEltYWdlcygpO1xuICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5zYnkuZmVlZHNbaW5kZXhdLmluaXQoKTtcblxuICAgICAgICAgICAgICAgICAgICAgIHZhciBldnQgPSBqUXVlcnkuRXZlbnQoJ3NieWFmdGVyZmVlZGNyZWF0ZScpO1xuICAgICAgICAgICAgICAgICAgICAgIGV2dC5mZWVkID0gd2luZG93LnNieS5mZWVkc1tpbmRleF07XG4gICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KHdpbmRvdykudHJpZ2dlcihldnQpO1xuXG4gICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYWZ0ZXJGZWVkc0NyZWF0ZWQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAvLyBlbmFibGUgaGVhZGVyIGhvdmVyIGFjdGlvblxuICAgICAgICAgICAgICAgICQoJy5zYl95b3V0dWJlX2hlYWRlcicpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgJHRoaXNIZWFkZXIgPSAkKHRoaXMpO1xuICAgICAgICAgICAgICAgICAgICAkdGhpc0hlYWRlci5maW5kKCcuc2J5X2hlYWRlcl9saW5rJykub24oJ21vdXNlZW50ZXIgbW91c2VsZWF2ZScsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaChlLnR5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdtb3VzZWVudGVyJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXNIZWFkZXIuZmluZCgnLnNieV9oZWFkZXJfaW1nX2hvdmVyJykuYWRkQ2xhc3MoJ3NieV9mYWRlX2luJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ21vdXNlbGVhdmUnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpc0hlYWRlci5maW5kKCcuc2J5X2hlYWRlcl9pbWdfaG92ZXInKS5yZW1vdmVDbGFzcygnc2J5X2ZhZGVfaW4nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5zYnlBUElSZWFkeSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZXZ0ID0galF1ZXJ5LkV2ZW50KCdzYnlmZWVkYW5keXRyZWFkeScpO1xuICAgICAgICAgICAgICAgICAgICBqUXVlcnkod2luZG93KS50cmlnZ2VyKGV2dCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZW5jb2RlSFRNTDogZnVuY3Rpb24ocmF3KSB7XG4gICAgICAgICAgICAgICAgLy8gbWFrZSBzdXJlIHBhc3NlZCB2YXJpYWJsZSBpcyBkZWZpbmVkXG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiByYXcgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gcmVwbGFjZSBncmVhdGVyIHRoYW4gYW5kIGxlc3MgdGhhbiBzeW1ib2xzIHdpdGggaHRtbCBlbnRpdHkgdG8gZGlzYWxsb3cgaHRtbCBpbiBjb21tZW50c1xuICAgICAgICAgICAgICAgIHZhciBlbmNvZGVkID0gcmF3LnJlcGxhY2UoLyg+KS9nLCcmZ3Q7JyksXG4gICAgICAgICAgICAgICAgICBlbmNvZGVkID0gZW5jb2RlZC5yZXBsYWNlKC8oPCkvZywnJmx0OycpO1xuICAgICAgICAgICAgICAgIGVuY29kZWQgPSBlbmNvZGVkLnJlcGxhY2UoLygmbHQ7YnJcXC8mZ3Q7KS9nLCc8YnI+Jyk7XG4gICAgICAgICAgICAgICAgZW5jb2RlZCA9IGVuY29kZWQucmVwbGFjZSgvKCZsdDticiZndDspL2csJzxicj4nKTtcblxuICAgICAgICAgICAgICAgIHJldHVybiBlbmNvZGVkO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHVybERldGVjdDogZnVuY3Rpb24odGV4dCkge1xuICAgICAgICAgICAgICAgIHZhciB1cmxSZWdleCA9IC9odHRwcz86XFwvXFwvKHd3d1xcLik/Wy1hLXpBLVowLTlAOiUuX1xcK34jPV17MiwyNTZ9XFwuW2Etel17Miw2fVxcYihbLWEtekEtWjAtOUA6JV9cXCsufiM/Ji8vPV0qKS9nO1xuICAgICAgICAgICAgICAgIHJldHVybiB0ZXh0Lm1hdGNoKHVybFJlZ2V4KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjdGFEZXRlY3Q6IGZ1bmN0aW9uKHRleHQpIHtcblxuICAgICAgICAgICAgICAgIHZhciBjdGFNYXRjaGVzID0gdGV4dC5tYXRjaCgve0xpbms6KC4qKX0vZyksXG4gICAgICAgICAgICAgICAgICBjdGEgPSBmYWxzZTtcblxuICAgICAgICAgICAgICAgIGlmIChjdGFNYXRjaGVzICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB1cmxNYXRjaGVzID0gd2luZG93LnNieS51cmxEZXRlY3QoY3RhTWF0Y2hlc1swXSk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHVybE1hdGNoZXMgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB1cmwgPSB1cmxNYXRjaGVzWzBdLnRyaW0oKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc2J5QnV0dG9uVGV4dCA9IGN0YU1hdGNoZXNbMF0ucmVwbGFjZSgne0xpbms6JywnJykucmVwbGFjZSgnfScsJycpLnJlcGxhY2UodXJsLCcnKS5yZXBsYWNlKCcgICcsJyAnKS50cmltKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdGEgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6ICdsaW5rJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IHVybCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiBzYnlCdXR0b25UZXh0XG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0NUQSBmb3VuZCBidXQgbm8gVVJMJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gY3RhO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNodWZmbGU6IGZ1bmN0aW9uKGFycmF5KSB7XG4gICAgICAgICAgICAgICAgdmFyIGN1cnJlbnRJbmRleCA9IGFycmF5Lmxlbmd0aCxcbiAgICAgICAgICAgICAgICAgIHRlbXBvcmFyeVZhbHVlLFxuICAgICAgICAgICAgICAgICAgcmFuZG9tSW5kZXg7XG5cbiAgICAgICAgICAgICAgICAvLyBXaGlsZSB0aGVyZSByZW1haW4gZWxlbWVudHMgdG8gc2h1ZmZsZS4uLlxuICAgICAgICAgICAgICAgIHdoaWxlICgwICE9PSBjdXJyZW50SW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gUGljayBhIHJlbWFpbmluZyBlbGVtZW50Li4uXG4gICAgICAgICAgICAgICAgICAgIHJhbmRvbUluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY3VycmVudEluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4IC09IDE7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gQW5kIHN3YXAgaXQgd2l0aCB0aGUgY3VycmVudCBlbGVtZW50LlxuICAgICAgICAgICAgICAgICAgICB0ZW1wb3JhcnlWYWx1ZSA9IGFycmF5W2N1cnJlbnRJbmRleF07XG4gICAgICAgICAgICAgICAgICAgIGFycmF5W2N1cnJlbnRJbmRleF0gPSBhcnJheVtyYW5kb21JbmRleF07XG4gICAgICAgICAgICAgICAgICAgIGFycmF5W3JhbmRvbUluZGV4XSA9IHRlbXBvcmFyeVZhbHVlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHJldHVybiBhcnJheTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICBmdW5jdGlvbiBTYnlGZWVkKGVsLCBpbmRleCwgc2V0dGluZ3MpIHtcbiAgICAgICAgICAgIHRoaXMuZWwgPSBlbDtcbiAgICAgICAgICAgIHRoaXMuaW5kZXggPSBpbmRleDtcbiAgICAgICAgICAgIHRoaXMuc2V0dGluZ3MgPSBzZXR0aW5ncztcbiAgICAgICAgICAgIHRoaXMucGxhY2Vob2xkZXJVUkwgPSB3aW5kb3cuc2J5Lm9wdGlvbnMucGxhY2Vob2xkZXI7XG4gICAgICAgICAgICBpZiAoc2V0dGluZ3MubmFycm93UGxheWVyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wbGFjZWhvbGRlclVSTCA9IHdpbmRvdy5zYnkub3B0aW9ucy5wbGFjZWhvbGRlck5hcnJvd1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5wbGF5ZXJBUElSZWFkeSA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5jb25zZW50R2l2ZW4gPSBzZXR0aW5ncy5jb25zZW50R2l2ZW47XG4gICAgICAgICAgICB0aGlzLnBsYXllcnMgPSB7fTtcbiAgICAgICAgICAgIHRoaXMubWluSW1hZ2VXaWR0aCA9IDA7XG4gICAgICAgICAgICB0aGlzLmltYWdlUmVzb2x1dGlvbiA9IDE1MDtcbiAgICAgICAgICAgIHRoaXMucmVzaXplZEltYWdlcyA9IHt9O1xuICAgICAgICAgICAgdGhpcy5uZWVkc1Jlc2l6aW5nID0gW107XG4gICAgICAgICAgICB0aGlzLm91dE9mUGFnZXMgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuaXNJbml0aWFsaXplZCA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5tb3N0UmVjZW50bHlMb2FkZWRQb3N0cyA9IFtdO1xuICAgICAgICAgICAgdGhpcy5lbWJlZFVSTCA9ICcvL3d3dy55b3V0dWJlLW5vY29va2llLmNvbSc7XG4gICAgICAgICAgICBpZiAoc2V0dGluZ3MuYWxsb3dDb29raWVzKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5lbWJlZFVSTCA9ICcvL3d3dy55b3V0dWJlLmNvbSdcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9XG5cbiAgICAgICAgU2J5RmVlZC5wcm90b3R5cGUgPSB7XG4gICAgICAgICAgICBpbml0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB2YXIgZmVlZCA9IHRoaXM7XG4gICAgICAgICAgICAgICAgZmVlZC5zZXR0aW5ncy5jb25zZW50R2l2ZW4gPSBmZWVkLmNoZWNrQ29uc2VudCgpO1xuXG4gICAgICAgICAgICAgICAgaWYgKGZlZWQuc2V0dGluZ3MuY29uc2VudEdpdmVuKSB7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5zYnkubWF5YmVBZGRZVEFQSSgpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChmZWVkLnNldHRpbmdzLm5vQ0ROICYmICFmZWVkLnNldHRpbmdzLmNvbnNlbnRHaXZlbikge1xuICAgICAgICAgICAgICAgICAgICBpZiAoJCh0aGlzLmVsKS5maW5kKCcuc2JfeW91dHViZV9oZWFkZXInKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcy5lbCkuZmluZCgnLnNiX3lvdXR1YmVfaGVhZGVyJykuYWRkQ2xhc3MoJ3NieV9ub19jb25zZW50JylcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICgkKHRoaXMuZWwpLnByZXYoJy5zYl95b3V0dWJlX2hlYWRlcicpLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzLmVsKS5wcmV2KCcuc2JfeW91dHViZV9oZWFkZXInKS5hZGRDbGFzcygnc2J5X25vX2NvbnNlbnQnKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICgkKHRoaXMuZWwpLmZpbmQoJyNzYnlfbW9kX2Vycm9yJykubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICQodGhpcy5lbCkucHJlcGVuZCgkKHRoaXMuZWwpLmZpbmQoJyNzYnlfbW9kX2Vycm9yJykpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodGhpcy5zZXR0aW5ncy5hamF4UG9zdExvYWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXROZXdQb3N0U2V0KCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hZnRlckluaXRpYWxJbWFnZXNMb2FkZWQoKTtcbiAgICAgICAgICAgICAgICAgICAgLy9Pbmx5IGNoZWNrIHRoZSB3aWR0aCBvbmNlIHRoZSByZXNpemUgZXZlbnQgaXMgb3ZlclxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgc2J5X2RlbGF5ID0gKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNieV90aW1lciA9IDA7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoc2J5X2NhbGxiYWNrLCBzYnlfbXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dChzYnlfdGltZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2J5X3RpbWVyID0gc2V0VGltZW91dChzYnlfY2FsbGJhY2ssIHNieV9tcyk7XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfSkoKTtcbiAgICAgICAgICAgICAgICBqUXVlcnkod2luZG93KS5vbigncmVzaXplJyxmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHNieV9kZWxheShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmZWVkLmFmdGVyUmVzaXplKCk7XG4gICAgICAgICAgICAgICAgICAgIH0sIDEpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGluaXRMYXlvdXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHRoaXMuaW5pdEdhbGxlcnlMYXlvdXQoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpbml0R2FsbGVyeUxheW91dDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyICRzZWxmID0gJCh0aGlzLmVsKSxcbiAgICAgICAgICAgICAgICAgIGZlZWQgPSB0aGlzO1xuICAgICAgICAgICAgICAgIGlmICgkc2VsZi5oYXNDbGFzcygnc2J5X2xheW91dF9nYWxsZXJ5JykgJiYgJHNlbGYuZmluZCgnLnNieV9wbGF5ZXJfb3V0ZXJfd3JhcCcpLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1heWJlUmFpc2VTaW5nbGVJbWFnZVJlc29sdXRpb24oJHNlbGYuZmluZCgnLnNieV9wbGF5ZXJfb3V0ZXJfd3JhcCcpLCAwLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgJHNlbGYuZmluZCgnLnNieV9wbGF5ZXJfb3V0ZXJfd3JhcCAuc2J5X3ZpZGVvX3RodW1ibmFpbCcpLm9mZigpLm9uKCdjbGljaycsZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoKCFmZWVkLnNldHRpbmdzLmxpZ2h0Ym94RW5hYmxlZCB8fCAoZmVlZC5zZXR0aW5ncy5saWdodGJveEVuYWJsZWQgJiYgZmVlZC5zZXR0aW5ncy5ub0NETikpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICYmIChmZWVkLnNldHRpbmdzLm5vQ0ROIHx8ICFmZWVkLnNldHRpbmdzLmNvbnNlbnRHaXZlbikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mICQodGhpcykuY2xvc2VzdCgnLnNieV9pdGVtJykubGVuZ3RoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmJiB0eXBlb2YgJCh0aGlzKS5jbG9zZXN0KCcuc2J5X2l0ZW0nKS5hdHRyKCdkYXRhLXZpZGVvLWlkJykgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykuYXR0cignaHJlZicsJ2h0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9JyskKHRoaXMpLmNsb3Nlc3QoJy5zYnlfaXRlbScpLmF0dHIoJ2RhdGEtdmlkZW8taWQnKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBmZWVkLm9uVGh1bWJuYWlsQ2xpY2soJCh0aGlzKSwgdHJ1ZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgJHNlbGYuZmluZCgnLnNieV9pdGVtJykuZmlyc3QoKS5hZGRDbGFzcygnc2J5X2N1cnJlbnQnKTtcblxuICAgICAgICAgICAgICAgICAgICAkc2VsZi5vbignbW91c2VlbnRlcicsZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWZlZWQuY2FuQ3JlYXRlUGxheWVyKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoISRzZWxmLmZpbmQoJy5zYnlfcGxheWVyX291dGVyX3dyYXAgaWZyYW1lJykubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNlbGYuYWRkQ2xhc3MoJ3NieV9wbGF5ZXJfYWRkZWQnKS5maW5kKCcuc2J5X3BsYXllcl9vdXRlcl93cmFwJykuYWRkQ2xhc3MoJ3NieV9wbGF5ZXJfbG9hZGluZycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzZWxmLmZpbmQoJy5zYnlfcGxheWVyX291dGVyX3dyYXAgLnNieV92aWRlb190aHVtYm5haWwnKS5maW5kKCcuc2J5X2xvYWRlcicpLnNob3coKS5yZW1vdmVDbGFzcygnc2J5X2hpZGRlbicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZlZWQuY3JlYXRlUGxheWVyKCdzYnlfcGxheWVyJytmZWVkLmluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGZlZWQucGxheWVyID09PSAndW5kZWZpbmVkJyAmJiBmZWVkLnBsYXllckVhZ2VyTG9hZGVkKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZWVkLmNyZWF0ZVBsYXllcignc2J5X3BsYXllcicrZmVlZC5pbmRleCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICh3aW5kb3cuc2J5U2VtaUVhZ2VyTG9hZGluZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmVlZC5jcmVhdGVQbGF5ZXIoJ3NieV9wbGF5ZXInK2ZlZWQuaW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKGZlZWQuc2V0dGluZ3Mubm9DRE4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICRzZWxmLmZpbmQoJy5zYnlfcGxheWVyX291dGVyX3dyYXAnKS5hcHBlbmQoJzxkaXYgY2xhc3M9XCJzYnlfcGxheV9idG5cIj5cXG4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJyAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwic2J5X3BsYXlfYnRuX2JnXCI+PC9zcGFuPlxcbicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAnICAgICAgICAgICAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGZvY3VzYWJsZT1cImZhbHNlXCIgZGF0YS1wcmVmaXg9XCJmYWJcIiBkYXRhLWljb249XCJ5b3V0dWJlXCIgcm9sZT1cImltZ1wiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDU3NiA1MTJcIiBjbGFzcz1cInN2Zy1pbmxpbmUtLWZhIGZhLXlvdXR1YmUgZmEtdy0xOFwiPjxwYXRoIGZpbGw9XCJjdXJyZW50Q29sb3JcIiBkPVwiTTU0OS42NTUgMTI0LjA4M2MtNi4yODEtMjMuNjUtMjQuNzg3LTQyLjI3Ni00OC4yODQtNDguNTk3QzQ1OC43ODEgNjQgMjg4IDY0IDI4OCA2NFMxMTcuMjIgNjQgNzQuNjI5IDc1LjQ4NmMtMjMuNDk3IDYuMzIyLTQyLjAwMyAyNC45NDctNDguMjg0IDQ4LjU5Ny0xMS40MTIgNDIuODY3LTExLjQxMiAxMzIuMzA1LTExLjQxMiAxMzIuMzA1czAgODkuNDM4IDExLjQxMiAxMzIuMzA1YzYuMjgxIDIzLjY1IDI0Ljc4NyA0MS41IDQ4LjI4NCA0Ny44MjFDMTE3LjIyIDQ0OCAyODggNDQ4IDI4OCA0NDhzMTcwLjc4IDAgMjEzLjM3MS0xMS40ODZjMjMuNDk3LTYuMzIxIDQyLjAwMy0yNC4xNzEgNDguMjg0LTQ3LjgyMSAxMS40MTItNDIuODY3IDExLjQxMi0xMzIuMzA1IDExLjQxMi0xMzIuMzA1czAtODkuNDM4LTExLjQxMi0xMzIuMzA1em0tMzE3LjUxIDIxMy41MDhWMTc1LjE4NWwxNDIuNzM5IDgxLjIwNS0xNDIuNzM5IDgxLjIwMXpcIiBjbGFzcz1cIlwiPjwvcGF0aD48L3N2Zz4gICAgICAgICAgICAgICAgICAgIDwvZGl2PicpO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY3JlYXRlUGxheWVyOiBmdW5jdGlvbihwbGF5ZXJJRCx2aWRlb0lELGF1dG9wbGF5LGFyZ3MpIHtcbiAgICAgICAgICAgICAgICB2YXIgJHNlbGYgPSAkKHRoaXMuZWwpLFxuICAgICAgICAgICAgICAgICAgZmVlZCA9IHRoaXM7XG4gICAgICAgICAgICAgICAgdmlkZW9JRCA9IHR5cGVvZiB2aWRlb0lEICE9PSAndW5kZWZpbmVkJyA/IHZpZGVvSUQgOiB0aGlzLmdldFZpZGVvSUQoJHNlbGYuZmluZCgnLnNieV9pdGVtJykuZmlyc3QoKSk7XG4gICAgICAgICAgICAgICAgYXV0b3BsYXkgPSB0eXBlb2YgYXV0b3BsYXkgIT09ICd1bmRlZmluZWQnID8gYXV0b3BsYXkgOiAwO1xuXG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBhcmdzID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgICBhcmdzID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaG9zdDogd2luZG93LmxvY2F0aW9uLnByb3RvY29sICsgZmVlZC5lbWJlZFVSTCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZpZGVvSWQ6IHZpZGVvSUQsXG4gICAgICAgICAgICAgICAgICAgICAgICBwbGF5ZXJWYXJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZXN0YnJhbmRpbmc6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVsOiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1dG9wbGF5OiBhdXRvcGxheVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGFyZ3MuZXZlbnRzID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgICBhcmdzLmV2ZW50cyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICdvblJlYWR5JzogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzZWxmLmZpbmQoJy5zYnlfcGxheWVyX291dGVyX3dyYXAnKS5yZW1vdmVDbGFzcygnc2J5X3BsYXllcl9sb2FkaW5nJykuZmluZCgnLnNieV92aWRlb190aHVtYm5haWwnKS5jc3MoJ3otaW5kZXgnLCAtMSkuZmluZCgnLnNieV9sb2FkZXInKS5oaWRlKCkuYWRkQ2xhc3MoJ3NieV9oaWRkZW4nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJCgnIycgKyBwbGF5ZXJJRCkubGVuZ3RoICYmICQoJyMnICsgcGxheWVySUQpLmNsb3Nlc3QoJy5zYnlfdmlkZW9fdGh1bWJuYWlsX3dyYXAnKS5maW5kKCcuc2J5X3ZpZGVvX3RodW1ibmFpbCcpLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjJyArIHBsYXllcklEKS5jbG9zZXN0KCcuc2J5X3ZpZGVvX3RodW1ibmFpbF93cmFwJykuZmluZCgnLnNieV92aWRlb190aHVtYm5haWwnKS5mYWRlVG8oMCwgJ3Nsb3cnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmNzcygnei1pbmRleCcsIC0xKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykuZmluZCgnLnNieV9sb2FkZXInKS5oaWRlKCkuYWRkQ2xhc3MoJ3NieV9oaWRkZW4nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykuY2xvc2VzdCgnLnNieV9pdGVtJykucmVtb3ZlQ2xhc3MoJ3NieV9wbGF5ZXJfbG9hZGluZycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGV2dCA9IGpRdWVyeS5FdmVudCgnc2J5YWZ0ZXJwbGF5ZXJyZWFkeScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2dC5mZWVkID0gZmVlZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBldnQucGxheWVyID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBqUXVlcnkod2luZG93KS50cmlnZ2VyKGV2dCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgJ29uU3RhdGVDaGFuZ2UnOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNlbGYuZmluZCgnLnNieV9wbGF5ZXJfb3V0ZXJfd3JhcCcpLnJlbW92ZUNsYXNzKCdzYnlfcGxheWVyX2xvYWRpbmcnKS5maW5kKCcuc2J5X3ZpZGVvX3RodW1ibmFpbCcpLmNzcygnei1pbmRleCcsIC0xKS5maW5kKCcuc2J5X2xvYWRlcicpLmhpZGUoKS5hZGRDbGFzcygnc2J5X2hpZGRlbicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZlZWQuYWZ0ZXJTdGF0ZUNoYW5nZShwbGF5ZXJJRCx2aWRlb0lELGRhdGEsJCgnIycgKyBwbGF5ZXJJRCkuY2xvc2VzdCgnLnNieV92aWRlb190aHVtYm5haWxfd3JhcCcpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5kYXRhICE9PSAxKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBmZWVkLnBsYXllcnMgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzZWxmLmZpbmQoJy5zYnlfaXRlbScpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaXRlbVZpZElEID0gZmVlZC5nZXRWaWRlb0lEKCQodGhpcykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCQodGhpcykuZmluZCgnaWZyYW1lJykubGVuZ3RoICYmIChpdGVtVmlkSUQgIT09IHZpZGVvSUQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBmZWVkLnBsYXllcnNbaXRlbVZpZElEXSAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIGZlZWQucGxheWVyc1tpdGVtVmlkSURdLnBhdXNlVmlkZW8gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmVlZC5wbGF5ZXJzW2l0ZW1WaWRJRF0ucGF1c2VWaWRlbygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh3aW5kb3cuc2J5RWFnZXJMb2FkaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBuZXdQbGF5ZXIgPSBZVC5nZXQocGxheWVySUQpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBuZXdQbGF5ZXIgPSBuZXcgd2luZG93LllULlBsYXllcihwbGF5ZXJJRCwgYXJncyk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdGhpcy5tYXliZUFkZENUQShwbGF5ZXJJRCk7XG5cbiAgICAgICAgICAgICAgICBpZiAoJHNlbGYuaGFzQ2xhc3MoJ3NieV9sYXlvdXRfbGlzdCcpICYmIHR5cGVvZiB0aGlzLnBsYXllcnNbdmlkZW9JRF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGxheWVyc1t2aWRlb0lEXSA9IG5ld1BsYXllcjtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB0aGlzLnBsYXllciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wbGF5ZXIgPSBuZXdQbGF5ZXI7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdmFyIGV2dCA9IGpRdWVyeS5FdmVudCgnc2J5YWZ0ZXJwbGF5ZXJjcmVhdGVkJyk7XG4gICAgICAgICAgICAgICAgZXZ0LmZlZWQgPSB0aGlzO1xuICAgICAgICAgICAgICAgIGpRdWVyeSh3aW5kb3cpLnRyaWdnZXIoZXZ0KTtcblxuICAgICAgICAgICAgICAgICRzZWxmLmZpbmQoJy5zYnlfcGxheWVyX291dGVyX3dyYXAgLnNieV9wbGF5X2J0bicpLnJlbW92ZSgpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ld1BsYXllcjtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhZnRlclN0YXRlQ2hhbmdlOiBmdW5jdGlvbihwbGF5ZXJJRCx2aWRlb0lELGRhdGEsJHBsYXllcikge1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGFmdGVySW5pdGlhbEltYWdlc0xvYWRlZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0TGF5b3V0KCk7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2FkTW9yZUJ1dHRvbkluaXQoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmhpZGVFeHRyYUl0ZW1zRm9yV2lkdGgoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmJlZm9yZU5ld0ltYWdlc1JldmVhbGVkKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5yZXZlYWxOZXdJbWFnZXMoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmFmdGVyTmV3SW1hZ2VzUmV2ZWFsZWQoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmFmdGVyRmVlZFNldCgpO1xuICAgICAgICAgICAgICAgIHRoaXMuc2l6ZVBsYXllcigpO1xuICAgICAgICAgICAgICAgIHRoaXMuc2l6ZUl0ZW1zKCk7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuc2V0dGluZ3MuY29uc2VudEdpdmVuKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYXBwbHlGdWxsRmVhdHVyZXMoKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZUZlYXR1cmVzKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGFmdGVyUmVzaXplOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNldEltYWdlSGVpZ2h0KCk7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRJbWFnZVJlc29sdXRpb24oKTtcbiAgICAgICAgICAgICAgICB0aGlzLm1heWJlUmFpc2VJbWFnZVJlc29sdXRpb24oKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNldEltYWdlU2l6ZUNsYXNzKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYWZ0ZXJMb2FkTW9yZUNsaWNrZWQ6IGZ1bmN0aW9uKCRidXR0b24pIHtcbiAgICAgICAgICAgICAgICAkYnV0dG9uLmZpbmQoJy5zYnlfbG9hZGVyJykucmVtb3ZlQ2xhc3MoJ3NieV9oaWRkZW4nKTtcbiAgICAgICAgICAgICAgICAkYnV0dG9uLmZpbmQoJy5zYnlfYnRuX3RleHQnKS5hZGRDbGFzcygnc2J5X2hpZGRlbicpO1xuICAgICAgICAgICAgICAgICRidXR0b24uY2xvc2VzdCgnLnNiX3lvdXR1YmUnKS5maW5kKCcuc2J5X251bV9kaWZmX2hpZGUnKS5hZGRDbGFzcygnc2J5X3RyYW5zaXRpb24nKS5yZW1vdmVDbGFzcygnc2J5X251bV9kaWZmX2hpZGUnKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhZnRlck5ld0ltYWdlc0xvYWRlZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyICRzZWxmID0gJCh0aGlzLmVsKSxcbiAgICAgICAgICAgICAgICAgIGZlZWQgPSB0aGlzO1xuICAgICAgICAgICAgICAgIHRoaXMuYmVmb3JlTmV3SW1hZ2VzUmV2ZWFsZWQoKTtcbiAgICAgICAgICAgICAgICB0aGlzLnJldmVhbE5ld0ltYWdlcygpO1xuICAgICAgICAgICAgICAgIHRoaXMuYWZ0ZXJOZXdJbWFnZXNSZXZlYWxlZCgpO1xuICAgICAgICAgICAgICAgIHRoaXMuc2l6ZVBsYXllcigpO1xuICAgICAgICAgICAgICAgIHRoaXMuc2l6ZUl0ZW1zKCk7XG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vSGlkZSB0aGUgbG9hZGVyIGluIHRoZSBsb2FkIG1vcmUgYnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICRzZWxmLmZpbmQoJy5zYnlfbG9hZGVyJykuYWRkQ2xhc3MoJ3NieV9oaWRkZW4nKTtcbiAgICAgICAgICAgICAgICAgICAgJHNlbGYuZmluZCgnLnNieV9idG5fdGV4dCcpLnJlbW92ZUNsYXNzKCdzYnlfaGlkZGVuJyk7XG4gICAgICAgICAgICAgICAgICAgIGZlZWQubWF5YmVSYWlzZUltYWdlUmVzb2x1dGlvbigpO1xuICAgICAgICAgICAgICAgIH0sIDEpO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLnNldHRpbmdzLmNvbnNlbnRHaXZlbikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmFwcGx5RnVsbEZlYXR1cmVzKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVGZWF0dXJlcygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBiZWZvcmVOZXdJbWFnZXNSZXZlYWxlZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRJbWFnZUhlaWdodCgpO1xuICAgICAgICAgICAgICAgIHRoaXMubWF5YmVSYWlzZUltYWdlUmVzb2x1dGlvbih0cnVlKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNldEltYWdlU2l6ZUNsYXNzKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYWZ0ZXJGZWVkU2V0OiBmdW5jdGlvbigpIHtcblxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNpemVQbGF5ZXI6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHZhciAkc2VsZiA9ICQodGhpcy5lbCksXG4gICAgICAgICAgICAgICAgICBmZWVkID0gdGhpcztcbiAgICAgICAgICAgICAgICBpZiAoJHNlbGYuaGFzQ2xhc3MoJ3NieV9sYXlvdXRfZ2FsbGVyeScpKSB7XG4gICAgICAgICAgICAgICAgICAgICRwbGF5ZXJUaHVtYm5haWwgPSAkc2VsZi5maW5kKCcuc2J5X3BsYXllcl9pdGVtJykuZmluZCgnLnNieV9wbGF5ZXJfdmlkZW9fdGh1bWJuYWlsJyk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwbGF5ZXJXaWR0aCA9ICRwbGF5ZXJUaHVtYm5haWwuaW5uZXJXaWR0aCgpLFxuICAgICAgICAgICAgICAgICAgICAgIG5ld1BsYXllckhlaWdodCA9IE1hdGguZmxvb3IocGxheWVyV2lkdGggKiA5IC8gMTYpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZmVlZC5zZXR0aW5ncy5uYXJyb3dQbGF5ZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld1BsYXllckhlaWdodCA9IE1hdGguZmxvb3IocGxheWVyV2lkdGggKiAzIC8gNCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgJHBsYXllclRodW1ibmFpbC5jc3MoJ2hlaWdodCcsbmV3UGxheWVySGVpZ2h0KydweCcpLmNzcygnb3ZlcmZsb3cnLCdoaWRkZW4nKTtcblxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoJHNlbGYuaGFzQ2xhc3MoJ3NieV9sYXlvdXRfbGlzdCcpKSB7XG4gICAgICAgICAgICAgICAgICAgICRzZWxmLmZpbmQoJy5zYnlfaXRlbScpLmVhY2goZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICRwbGF5ZXJUaHVtYm5haWwgPSAkKHRoaXMpLmZpbmQoJy5zYnlfaXRlbV92aWRlb190aHVtYm5haWwnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwbGF5ZXJXaWR0aCA9ICRwbGF5ZXJUaHVtYm5haWwuaW5uZXJXaWR0aCgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdQbGF5ZXJIZWlnaHQgPSBNYXRoLmZsb29yKHBsYXllcldpZHRoICogOSAvIDE2KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmZWVkLnNldHRpbmdzLm5hcnJvd1BsYXllcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld1BsYXllckhlaWdodCA9IE1hdGguZmxvb3IocGxheWVyV2lkdGggKiAzIC8gNCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAkcGxheWVyVGh1bWJuYWlsLmNzcygnaGVpZ2h0JyxuZXdQbGF5ZXJIZWlnaHQrJ3B4JykuY3NzKCdvdmVyZmxvdycsJ2hpZGRlbicpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2l6ZUl0ZW1zOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB2YXIgJHNlbGYgPSAkKHRoaXMuZWwpLFxuICAgICAgICAgICAgICAgICAgZmVlZCA9IHRoaXM7XG4gICAgICAgICAgICAgICAgaWYgKCEkc2VsZi5oYXNDbGFzcygnc2J5X2xheW91dF9saXN0JykpIHtcbiAgICAgICAgICAgICAgICAgICAgJHNlbGYuZmluZCgnLnNieV9pdGVtJykuZmluZCgnLnNieV9pdGVtX3ZpZGVvX3RodW1ibmFpbCcpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5oYXNDbGFzcygnc2J5X2ltZ0xpcXVpZF9yZWFkeScpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRodW1iV2lkdGggPSAkKHRoaXMpLmlubmVyV2lkdGgoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld1RodW1iSGVpZ2h0ID0gTWF0aC5mbG9vcih0aHVtYldpZHRoICogOSAvIDE2KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmNzcygnaGVpZ2h0JyxuZXdUaHVtYkhlaWdodCsncHgnKS5jc3MoJ292ZXJmbG93JywnaGlkZGVuJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJldmVhbE5ld0ltYWdlczogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyICRzZWxmID0gJCh0aGlzLmVsKSxcbiAgICAgICAgICAgICAgICAgIGZlZWQgPSB0aGlzO1xuICAgICAgICAgICAgICAgIHRoaXMuYXBwbHlJbWFnZUxpcXVpZCgpO1xuXG4gICAgICAgICAgICAgICAgLy8gQ2FsbCBDdXN0b20gSlMgaWYgaXQgZXhpc3RzXG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBzYnlDdXN0b21KUyA9PSAnZnVuY3Rpb24nKSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7IHNieUN1c3RvbUpTKCk7IH0sIDEwMCk7XG5cbiAgICAgICAgICAgICAgICAkc2VsZi5maW5kKCcuc2J5LXNjcmVlbnJlYWRlcicpLmZpbmQoJ2ltZycpLnJlbW92ZSgpO1xuXG4gICAgICAgICAgICAgICAgJHNlbGYuZmluZCgnLnNieV9pdGVtLnNieV9uZXcnKS5lYWNoKGZ1bmN0aW9uIChpbmRleCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgJHNlbGYgPSBqUXVlcnkodGhpcyk7XG5cbiAgICAgICAgICAgICAgICAgICAgLy9QaG90byBsaW5rc1xuICAgICAgICAgICAgICAgICAgICAvL0lmIGxpZ2h0Ym94IGlzIGRpc2FibGVkXG4gICAgICAgICAgICAgICAgICAgIHZpZGVvSUQgPSAkc2VsZi5hdHRyKCdkYXRhLXZpZGVvLWlkJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5zYnlFYWdlckxvYWRpbmcgJiYgZmVlZC5jYW5DcmVhdGVQbGF5ZXIoKSAmJiAkKCcjc2J5X3BsYXllcl8nK3ZpZGVvSUQpLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGxheWVyID0gbmV3IFlULlBsYXllcignc2J5X3BsYXllcl8nK3ZpZGVvSUQsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICcxMDAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAnMTAwJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWRlb0lkOiB2aWRlb0lELFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYXllclZhcnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZXN0YnJhbmRpbmc6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbDogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXV0b3BsYXk6IDBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50czoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnb25TdGF0ZUNoYW5nZSc6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB2aWRlb0lEID0gZGF0YS50YXJnZXQuZ2V0VmlkZW9EYXRhKClbJ3ZpZGVvX2lkJ107XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5kYXRhICE9PSAxKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2VsZi5maW5kKCcuc2J5X2l0ZW0nKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpdGVtVmlkSUQgPSBqUXVlcnkodGhpcykuYXR0cignZGF0YS12aWRlby1pZCcpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGpRdWVyeSh0aGlzKS5maW5kKCdpZnJhbWUnKS5sZW5ndGggJiYgalF1ZXJ5KGRhdGEudGFyZ2V0LmEpLmF0dHIoJ2lkJykgIT09IGpRdWVyeSh0aGlzKS5maW5kKCdpZnJhbWUnKS5hdHRyKCdpZCcpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFlULmdldCgnc2J5X3BsYXllcl8nK2l0ZW1WaWRJRCkucGF1c2VWaWRlbygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAkc2VsZi5maW5kKCcuc2J5X3ZpZGVvX3RodW1ibmFpbCcpLm9uKCdtb3VzZWVudGVyJyxmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZlZWQub25UaHVtYm5haWxFbnRlcigkKHRoaXMpLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAkc2VsZi5maW5kKCcuc2J5X3BsYXllcl93cmFwJykub24oJ21vdXNlbGVhdmUnLGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmVlZC5vblRodW1ibmFpbExlYXZlKCQodGhpcyksIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIC8vaW5pdCBjbGlja1xuICAgICAgICAgICAgICAgICAgICAkc2VsZi5maW5kKCcuc2J5X3ZpZGVvX3RodW1ibmFpbCcpLm9uKCdjbGljaycsZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgoIWZlZWQuc2V0dGluZ3MubGlnaHRib3hFbmFibGVkIHx8IChmZWVkLnNldHRpbmdzLmxpZ2h0Ym94RW5hYmxlZCAmJiBmZWVkLnNldHRpbmdzLm5vQ0ROKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJiYgKGZlZWQuc2V0dGluZ3Mubm9DRE4gfHwgIWZlZWQuc2V0dGluZ3MuY29uc2VudEdpdmVuKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgJCh0aGlzKS5jbG9zZXN0KCcuc2J5X2l0ZW0nKS5sZW5ndGhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICYmIHR5cGVvZiAkKHRoaXMpLmNsb3Nlc3QoJy5zYnlfaXRlbScpLmF0dHIoJ2RhdGEtdmlkZW8taWQnKSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5hdHRyKCdocmVmJywnaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj0nKyQodGhpcykuY2xvc2VzdCgnLnNieV9pdGVtJykuYXR0cignZGF0YS12aWRlby1pZCcpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZlZWQub25UaHVtYm5haWxDbGljaygkKHRoaXMpLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIGxpZ2h0Ym94XG4gICAgICAgICAgICAgICAgICAgIGlmIChmZWVkLnNldHRpbmdzLmxpZ2h0Ym94RW5hYmxlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJHNlbGYuZmluZCgnLnNieV92aWRlb190aHVtYm5haWwnKS5hdHRyKCdkYXRhLXNieS1saWdodGJveCcsZmVlZC5pbmRleCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHNieU9wdGlvbnMgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBzYnlPcHRpb25zLmxpZ2h0Ym94UGxhY2Vob2xkZXIgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZlZWQuc2V0dGluZ3MubmFycm93UGxheWVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzZWxmLmZpbmQoJy5zYnlfdmlkZW9fdGh1bWJuYWlsJykuYXR0cignaHJlZicsc2J5T3B0aW9ucy5saWdodGJveFBsYWNlaG9sZGVyTmFycm93KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2VsZi5maW5kKCcuc2J5X3ZpZGVvX3RodW1ibmFpbCcpLmF0dHIoJ2hyZWYnLHNieU9wdGlvbnMubGlnaHRib3hQbGFjZWhvbGRlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGZlZWQuYWZ0ZXJJdGVtUmV2ZWFsZWQoJHNlbGYpO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIG5vIGluZm9cbiAgICAgICAgICAgICAgICAgICAgaWYgKCRzZWxmLmZpbmQoJy5zYnlfaW5mb19pdGVtJykudGV4dCgpLnRyaW0oKSA9PT0gJycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICRzZWxmLmZpbmQoJy5zYnlfaW5mb19pdGVtJykuYWRkQ2xhc3MoJ3NieV9ub19zcGFjZScpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7IC8vRW5kIC5zYnlfaXRlbSBlYWNoXG5cbiAgICAgICAgICAgICAgICAkc2VsZi5maW5kKCcuc2J5X3BsYXllcl9pdGVtJykuZWFjaChmdW5jdGlvbiAoaW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyICRzZWxmID0galF1ZXJ5KHRoaXMpO1xuXG4gICAgICAgICAgICAgICAgICAgIGZlZWQuYWZ0ZXJJdGVtUmV2ZWFsZWQoJHNlbGYpO1xuICAgICAgICAgICAgICAgIH0pOyAvL0VuZCAuc2J5X2l0ZW0gZWFjaFxuXG4gICAgICAgICAgICAgICAgLy9SZW1vdmUgdGhlIG5ldyBjbGFzcyBhZnRlciA1MDBtcywgb25jZSB0aGUgc29ydGluZyBpcyBkb25lXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICRzZWxmLmZpbmQoJy5zYnlfaXRlbS5zYnlfbmV3JykucmVtb3ZlQ2xhc3MoJ3NieV9uZXcnKTtcbiAgICAgICAgICAgICAgICAgICAgLy9Mb29wIHRocm91Z2ggaXRlbXMgYW5kIHJlbW92ZSBjbGFzcyB0byByZXZlYWwgdGhlbVxuICAgICAgICAgICAgICAgICAgICB2YXIgdGltZSA9IDEsXG4gICAgICAgICAgICAgICAgICAgICAgbnVtID0gJHNlbGYuZmluZCgnLnNieV90cmFuc2l0aW9uJykubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICAkc2VsZi5maW5kKCcuc2J5X3RyYW5zaXRpb24nKS5lYWNoKGZ1bmN0aW9uKGluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgJHNieV9pdGVtX3RyYW5zaXRpb25fZWwgPSBqUXVlcnkodGhpcyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoIGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNieV9pdGVtX3RyYW5zaXRpb25fZWwucmVtb3ZlQ2xhc3MoJ3NieV90cmFuc2l0aW9uJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LCB0aW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vdGltZSArPSAxMDtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSwgMSk7XG5cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhZnRlckl0ZW1SZXZlYWxlZDogZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhZnRlck5ld0ltYWdlc1JldmVhbGVkOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmxpc3RlbkZvclZpc2liaWxpdHlDaGFuZ2UoKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbmROZWVkc1Jlc2l6aW5nVG9TZXJ2ZXIoKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbmRDaGVja1dQUG9zdHNUb1NlcnZlcigpO1xuICAgICAgICAgICAgICAgIGlmICghdGhpcy5zZXR0aW5ncy5pbWFnZUxvYWRFbmFibGVkKSB7XG4gICAgICAgICAgICAgICAgICAgICQoJy5zYnlfbm9fcmVzcmFpc2UnKS5yZW1vdmVDbGFzcygnc2J5X25vX3Jlc3JhaXNlJyk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdmFyIGV2dCA9ICQuRXZlbnQoJ3NieWFmdGVyaW1hZ2VzbG9hZGVkJyk7XG4gICAgICAgICAgICAgICAgZXZ0LmVsID0gJCh0aGlzLmVsKTtcbiAgICAgICAgICAgICAgICAkKHdpbmRvdykudHJpZ2dlcihldnQpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNldFJlc2l6ZWRJbWFnZXM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoJCh0aGlzLmVsKS5maW5kKCcuc2J5X3Jlc2l6ZWRfaW1hZ2VfZGF0YScpLmxlbmd0aFxuICAgICAgICAgICAgICAgICAgJiYgdHlwZW9mICQodGhpcy5lbCkuZmluZCgnLnNieV9yZXNpemVkX2ltYWdlX2RhdGEnKS5hdHRyKCdkYXRhLXJlc2l6ZWQnKSAhPT0gJ3VuZGVmaW5lZCdcbiAgICAgICAgICAgICAgICAgICYmICQodGhpcy5lbCkuZmluZCgnLnNieV9yZXNpemVkX2ltYWdlX2RhdGEnKS5hdHRyKCdkYXRhLXJlc2l6ZWQnKS5pbmRleE9mKCd7XCInKSA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlc2l6ZWRJbWFnZXMgPSBKU09OLnBhcnNlKCQodGhpcy5lbCkuZmluZCgnLnNieV9yZXNpemVkX2ltYWdlX2RhdGEnKS5hdHRyKCdkYXRhLXJlc2l6ZWQnKSk7XG4gICAgICAgICAgICAgICAgICAgICQodGhpcy5lbCkuZmluZCgnLnNieV9yZXNpemVkX2ltYWdlX2RhdGEnKS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2VuZE5lZWRzUmVzaXppbmdUb1NlcnZlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyIGZlZWQgPSB0aGlzO1xuICAgICAgICAgICAgICAgIGlmIChmZWVkLm5lZWRzUmVzaXppbmcubGVuZ3RoID4gMCAmJiBmZWVkLnNldHRpbmdzLnJlc2l6aW5nRW5hYmxlZCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgaXRlbU9mZnNldCA9ICQodGhpcy5lbCkuZmluZCgnLnNieV9pdGVtJykubGVuZ3RoO1xuXG4gICAgICAgICAgICAgICAgICAgIHZhciBzdWJtaXREYXRhID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiAnc2J5X3Jlc2l6ZWRfaW1hZ2VzX3N1Ym1pdCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBuZWVkc19yZXNpemluZzogZmVlZC5uZWVkc1Jlc2l6aW5nLFxuICAgICAgICAgICAgICAgICAgICAgICAgb2Zmc2V0OiBpdGVtT2Zmc2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgZmVlZF9pZDogZmVlZC5zZXR0aW5ncy5mZWVkSUQsXG4gICAgICAgICAgICAgICAgICAgICAgICBsb2NhdGlvbjogZmVlZC5sb2NhdGlvbkd1ZXNzKCksXG4gICAgICAgICAgICAgICAgICAgICAgICBwb3N0X2lkOiBmZWVkLnNldHRpbmdzLnBvc3RJRCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHM6IGZlZWQuc2V0dGluZ3Muc2hvcnRDb2RlQXR0cyxcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG9uU3VjY2VzcyA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLnRyaW0oKS5pbmRleE9mKCd7JykgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmVzcG9uc2UgPSBKU09OLnBhcnNlKGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmZWVkLnNldHRpbmdzLmRlYnVnRW5hYmxlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICBzYnlBamF4KHN1Ym1pdERhdGEsb25TdWNjZXNzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2VuZENoZWNrV1BQb3N0c1RvU2VydmVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB2YXIgZmVlZCA9IHRoaXM7XG4gICAgICAgICAgICAgICAgaWYgKGZlZWQuc2V0dGluZ3MuY2hlY2tXUFBvc3RzIHx8IGZlZWQuc2V0dGluZ3Muc2luZ2xlQ2hlY2tQb3N0cykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZmVlZElEID0gdHlwZW9mIGZlZWQuc2V0dGluZ3MuZmVlZElEICE9PSAndW5kZWZpbmVkJyA/IGZlZWQuc2V0dGluZ3MuZmVlZElEIDogJ3NieV9zaW5nbGUnLFxuICAgICAgICAgICAgICAgICAgICAgIHBvc3RzID0gZmVlZC5tb3N0UmVjZW50bHlMb2FkZWRQb3N0cztcbiAgICAgICAgICAgICAgICAgICAgZmVlZC5tb3N0UmVjZW50bHlMb2FkZWRQb3N0cyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICB2YXIgc3VibWl0RGF0YSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbjogJ3NieV9jaGVja193cF9zdWJtaXQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZmVlZF9pZDogZmVlZElELFxuICAgICAgICAgICAgICAgICAgICAgICAgYXR0czogZmVlZC5zZXR0aW5ncy5zaG9ydENvZGVBdHRzLFxuICAgICAgICAgICAgICAgICAgICAgICAgbG9jYXRpb246IGZlZWQubG9jYXRpb25HdWVzcygpLFxuICAgICAgICAgICAgICAgICAgICAgICAgcG9zdF9pZDogZmVlZC5zZXR0aW5ncy5wb3N0SUQsXG4gICAgICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6ICEgJCh0aGlzLmVsKS5oYXNDbGFzcygnc2J5X2xheW91dF9jYXJvdXNlbCcpID8gJCh0aGlzLmVsKS5maW5kKCcuc2J5X2l0ZW0nKS5sZW5ndGggOiBNYXRoLmZsb29yKCgkKHRoaXMuZWwpLmZpbmQoJy5zYnlfaXRlbScpLmxlbmd0aCAvIDIpIC0xKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvc3RzOiBwb3N0c1xuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB2YXIgb25TdWNjZXNzID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEudHJpbSgpLmluZGV4T2YoJ3snKSA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZXNwb25zZSA9IEpTT04ucGFyc2UoZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZlZWQuc2V0dGluZ3MuZGVidWdFbmFibGVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmVlZC5hZnRlclNlbmRDaGVja1dQUG9zdHNUb1NlcnZlcihyZXNwb25zZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgc2J5QWpheChzdWJtaXREYXRhLG9uU3VjY2Vzcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGFmdGVyU2VuZENoZWNrV1BQb3N0c1RvU2VydmVyOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcblxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGxvYWRNb3JlQnV0dG9uSW5pdDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciAkc2VsZiA9ICQodGhpcy5lbCksXG4gICAgICAgICAgICAgICAgICBmZWVkID0gdGhpcztcbiAgICAgICAgICAgICAgICAkc2VsZi5maW5kKCcuc2J5X2Zvb3RlciAuc2J5X2xvYWRfYnRuJykub2ZmKCkub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBmZWVkLmFmdGVyTG9hZE1vcmVDbGlja2VkKGpRdWVyeSh0aGlzKSk7XG4gICAgICAgICAgICAgICAgICAgIGZlZWQuZ2V0TmV3UG9zdFNldCgpO1xuICAgICAgICAgICAgICAgIH0pOyAvL0VuZCBjbGljayBldmVudFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldE5ld1Bvc3RTZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgJHNlbGYgPSAkKHRoaXMuZWwpLFxuICAgICAgICAgICAgICAgICAgZmVlZCA9IHRoaXM7XG4gICAgICAgICAgICAgICAgdmFyIGl0ZW1PZmZzZXQgPSAkc2VsZi5maW5kKCcuc2J5X2l0ZW0nKS5sZW5ndGgsXG4gICAgICAgICAgICAgICAgICBzdWJtaXREYXRhID0ge1xuICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbjogJ3NieV9sb2FkX21vcmVfY2xpY2tlZCcsXG4gICAgICAgICAgICAgICAgICAgICAgb2Zmc2V0OiBpdGVtT2Zmc2V0LFxuICAgICAgICAgICAgICAgICAgICAgIGZlZWRfaWQ6IGZlZWQuc2V0dGluZ3MuZmVlZElELFxuICAgICAgICAgICAgICAgICAgICAgIGF0dHM6IGZlZWQuc2V0dGluZ3Muc2hvcnRDb2RlQXR0cyxcbiAgICAgICAgICAgICAgICAgICAgICBsb2NhdGlvbjogZmVlZC5sb2NhdGlvbkd1ZXNzKCksXG4gICAgICAgICAgICAgICAgICAgICAgcG9zdF9pZDogZmVlZC5zZXR0aW5ncy5wb3N0SUQsXG4gICAgICAgICAgICAgICAgICAgICAgY3VycmVudF9yZXNvbHV0aW9uOiBmZWVkLmltYWdlUmVzb2x1dGlvblxuICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB2YXIgb25TdWNjZXNzID0gZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEudHJpbSgpLmluZGV4T2YoJ3snKSA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJlc3BvbnNlID0gSlNPTi5wYXJzZShkYXRhKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tXUFBvc3RzID0gdHlwZW9mIHJlc3BvbnNlLmZlZWRTdGF0dXMuY2hlY2tXUFBvc3RzICE9PSAndW5kZWZpbmVkJyA/IHJlc3BvbnNlLmZlZWRTdGF0dXMuY2hlY2tXUFBvc3RzIDogZmFsc2U7O1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZlZWQuc2V0dGluZ3MuZGVidWdFbmFibGVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNoZWNrV1BQb3N0cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZlZWQuc2V0dGluZ3MuY2hlY2tXUFBvc3RzID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmVlZC5zZXR0aW5ncy5jaGVja1dQUG9zdHMgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGZlZWQuYXBwZW5kTmV3UG9zdHMocmVzcG9uc2UuaHRtbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBmZWVkLmFkZFJlc2l6ZWRJbWFnZXMocmVzcG9uc2UucmVzaXplZEltYWdlcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZmVlZC5zZXR0aW5ncy5hamF4UG9zdExvYWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZWVkLnNldHRpbmdzLmFqYXhQb3N0TG9hZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZlZWQuYWZ0ZXJJbml0aWFsSW1hZ2VzTG9hZGVkKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZlZWQuYWZ0ZXJOZXdJbWFnZXNMb2FkZWQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5mZWVkU3RhdHVzLnNob3VsZFBhZ2luYXRlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmVlZC5vdXRPZlBhZ2VzID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2VsZi5maW5kKCcuc2J5X2xvYWRfYnRuJykuaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZWVkLm91dE9mUGFnZXMgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgJCgnLnNieV9ub19qcycpLnJlbW92ZUNsYXNzKCdzYnlfbm9fanMnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBzYnlBamF4KHN1Ym1pdERhdGEsIG9uU3VjY2Vzcyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYXBwZW5kTmV3UG9zdHM6IGZ1bmN0aW9uIChuZXdQb3N0c0h0bWwpIHtcbiAgICAgICAgICAgICAgICB2YXIgJHNlbGYgPSAkKHRoaXMuZWwpLFxuICAgICAgICAgICAgICAgICAgZmVlZCA9IHRoaXM7XG4gICAgICAgICAgICAgICAgaWYgKCRzZWxmLmZpbmQoJy5zYnlfaXRlbXNfd3JhcCAuc2J5X2l0ZW0nKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgJHNlbGYuZmluZCgnLnNieV9pdGVtc193cmFwIC5zYnlfaXRlbScpLmxhc3QoKS5hZnRlcihuZXdQb3N0c0h0bWwpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICRzZWxmLmZpbmQoJy5zYnlfaXRlbXNfd3JhcCcpLmFwcGVuZChuZXdQb3N0c0h0bWwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhZGRSZXNpemVkSW1hZ2VzOiBmdW5jdGlvbiAocmVzaXplZEltYWdlc1RvQWRkKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaW1hZ2VJRCBpbiByZXNpemVkSW1hZ2VzVG9BZGQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXNpemVkSW1hZ2VzW2ltYWdlSURdID0gcmVzaXplZEltYWdlc1RvQWRkW2ltYWdlSURdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZXRJbWFnZUhlaWdodDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbWF5YmVSYWlzZVNpbmdsZUltYWdlUmVzb2x1dGlvbjogZnVuY3Rpb24gKCRpdGVtLCBpbmRleCwgZm9yY2VDaGFuZ2UpIHtcbiAgICAgICAgICAgICAgICB2YXIgZmVlZCA9IHRoaXMsXG4gICAgICAgICAgICAgICAgICBpbWdTcmNTZXQgPSBmZWVkLmdldEltYWdlVXJscygkaXRlbSksXG4gICAgICAgICAgICAgICAgICBjdXJyZW50VXJsID0gJGl0ZW0uZmluZCgnLnNieV92aWRlb190aHVtYm5haWwgPiBpbWcnKS5hdHRyKCdzcmMnKSxcbiAgICAgICAgICAgICAgICAgIGN1cnJlbnRSZXMgPSAxNTAsXG4gICAgICAgICAgICAgICAgICBhc3BlY3RSYXRpbyA9IDEsIC8vIGFsbCB0aHVtYm5haWxzIGFyZSBvcmllbnRlZCB0aGUgc2FtZSBzbyB0aGUgYmVzdCBjYWxjdWxhdGlvbiB1c2VzIDFcbiAgICAgICAgICAgICAgICAgIGZvcmNlQ2hhbmdlID0gdHlwZW9mIGZvcmNlQ2hhbmdlICE9PSAndW5kZWZpbmVkJyA/IGZvcmNlQ2hhbmdlIDogZmFsc2U7XG5cbiAgICAgICAgICAgICAgICBpZiAoJGl0ZW0uaGFzQ2xhc3MoJ3NieV9ub19yZXNyYWlzZScpICAgfHxcbiAgICAgICAgICAgICAgICAgICghZmVlZC5zZXR0aW5ncy5jb25zZW50R2l2ZW4gJiYgZmVlZC5zZXR0aW5ncy5ub0NETikgKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAkLmVhY2goaW1nU3JjU2V0LCBmdW5jdGlvbiAoaW5kZXgsIHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSA9PT0gY3VycmVudFVybCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudFJlcyA9IHBhcnNlSW50KGluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIElmIHRoZSBpbWFnZSBoYXMgYWxyZWFkeSBiZWVuIGNoYW5nZWQgdG8gYW4gZXhpc3RpbmcgcmVhbCBzb3VyY2UsIGRvbid0IGZvcmNlIHRoZSBjaGFuZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcmNlQ2hhbmdlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAvL0ltYWdlIHJlc1xuICAgICAgICAgICAgICAgIHZhciBuZXdSZXMgPSA2NDA7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChmZWVkLnNldHRpbmdzLmltZ1Jlcykge1xuICAgICAgICAgICAgICAgICAgICBjYXNlICd0aHVtYic6XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdSZXMgPSAxMjA7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnbWVkaXVtJzpcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld1JlcyA9IDMyMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlICdsYXJnZSc6XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdSZXMgPSA0ODA7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnZnVsbCc6XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdSZXMgPSA2NDA7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtaW5JbWFnZVdpZHRoID0gTWF0aC5tYXgoZmVlZC5zZXR0aW5ncy5hdXRvTWluUmVzLCRpdGVtLmZpbmQoJy5zYnlfdmlkZW9fdGh1bWJuYWlsJykuaW5uZXJXaWR0aCgpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpc0ltYWdlUmVwbGFjZSA9IGZlZWQuZ2V0QmVzdFJlc29sdXRpb25Gb3JBdXRvKG1pbkltYWdlV2lkdGgsIGFzcGVjdFJhdGlvLCAkKHRoaXMuZWwpLmZpbmQoJ3NieV9pdGVtJykuZmlyc3QoKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKHRoaXNJbWFnZVJlcGxhY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDQ4MDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3UmVzID0gNDgwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDMyMDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3UmVzID0gMzIwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDEyMDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3UmVzID0gMTIwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChuZXdSZXMgPiBjdXJyZW50UmVzIHx8IGN1cnJlbnRVcmwgPT09IGZlZWQucGxhY2Vob2xkZXJVUkwgfHwgZm9yY2VDaGFuZ2UpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZlZWQuc2V0dGluZ3MuZGVidWdFbmFibGVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmVhc29uID0gY3VycmVudFVybCA9PT0gZmVlZC5wbGFjZWhvbGRlclVSTCA/ICd3YXMgcGxhY2Vob2xkZXInIDogJ3RvbyBzbWFsbCc7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygncmFpcyByZXMgZm9yICcgKyBjdXJyZW50VXJsLCByZWFzb24pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHZhciBuZXdVcmwgPSBpbWdTcmNTZXRbbmV3UmVzXTtcbiAgICAgICAgICAgICAgICAgICAgJGl0ZW0uZmluZCgnLnNieV92aWRlb190aHVtYm5haWwgPiBpbWcnKS5hdHRyKCdzcmMnLCBuZXdVcmwpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoJGl0ZW0uZmluZCgnLnNieV92aWRlb190aHVtYm5haWwnKS5oYXNDbGFzcygnc2J5X2ltZ0xpcXVpZF9yZWFkeScpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkaXRlbS5maW5kKCcuc2J5X3ZpZGVvX3RodW1ibmFpbCcpLmNzcygnYmFja2dyb3VuZC1pbWFnZScsICd1cmwoXCInICsgbmV3VXJsICsgJ1wiKScpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgJGl0ZW0uZmluZCgnaW1nJykub24oJ2Vycm9yJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoISQodGhpcykuaGFzQ2xhc3MoJ3NieV9pbWdfZXJyb3InKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5hZGRDbGFzcygnc2J5X2ltZ19lcnJvcicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNvdXJjZUZyb21BUEkgPSAoJCh0aGlzKS5hdHRyKCdzcmMnKS5pbmRleE9mKCdpLnl0aW1nLmNvbScpID4gLTEpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXNvdXJjZUZyb21BUEkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mICQodGhpcykuY2xvc2VzdCgnLnNieV92aWRlb190aHVtYm5haWwnKS5hdHRyKCdkYXRhLWZ1bGwtcmVzJykgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykuYXR0cignc3JjJywgJCh0aGlzKS5jbG9zZXN0KCcuc2J5X3ZpZGVvX3RodW1ibmFpbCcpLmF0dHIoJ2RhdGEtZnVsbC1yZXMnKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykuY2xvc2VzdCgnLnNieV92aWRlb190aHVtYm5haWwnKS5jc3MoJ2JhY2tncm91bmQtaW1hZ2UnLCAndXJsKCcgKyAkKHRoaXMpLmNsb3Nlc3QoJy5zYnlfdmlkZW9fdGh1bWJuYWlsJykuYXR0cignZGF0YS1mdWxsLXJlcycpICsgJyknKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCQodGhpcykuY2xvc2VzdCgnLnNieV92aWRlb190aHVtYm5haWwnKS5hdHRyKCdocmVmJykgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykuYXR0cignc3JjJywgJCh0aGlzKS5jbG9zZXN0KCcuc2J5X3ZpZGVvX3RodW1ibmFpbCcpLmF0dHIoJ2hyZWYnKSArICdtZWRpYT9zaXplPWwnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5jbG9zZXN0KCcuc2J5X3ZpZGVvX3RodW1ibmFpbCcpLmNzcygnYmFja2dyb3VuZC1pbWFnZScsICd1cmwoJyArICQodGhpcykuY2xvc2VzdCgnLnNieV92aWRlb190aHVtYm5haWwnKS5hdHRyKCdocmVmJykgKyAnbWVkaWE/c2l6ZT1sKScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmVlZC5zZXR0aW5ncy5mYXZvckxvY2FsID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3JjU2V0ID0gZmVlZC5nZXRJbWFnZVVybHMoJCh0aGlzKS5jbG9zZXN0KCcuc2J5X2l0ZW0nKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBzcmNTZXRbNjQwXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5hdHRyKCdzcmMnLCBzcmNTZXRbNjQwXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykuY2xvc2VzdCgnLnNieV92aWRlb190aHVtYm5haWwnKS5jc3MoJ2JhY2tncm91bmQtaW1hZ2UnLCAndXJsKCcgKyBzcmNTZXRbNjQwXSArICcpJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZWVkLmFmdGVyUmVzaXplKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LCAxKVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3VuZml4ZWQgZXJyb3IgJyArICQodGhpcykuYXR0cignc3JjJykpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbWF5YmVSYWlzZUltYWdlUmVzb2x1dGlvbjogZnVuY3Rpb24gKGp1c3ROZXcpIHtcbiAgICAgICAgICAgICAgICB2YXIgZmVlZCA9IHRoaXMsXG4gICAgICAgICAgICAgICAgICBpdGVtc1NlbGVjdG9yID0gdHlwZW9mIGp1c3ROZXcgIT09ICd1bmRlZmluZWQnICYmIGp1c3ROZXcgPT09IHRydWUgPyAnLnNieV9pdGVtLnNieV9uZXcnIDogJy5zYnlfaXRlbScsXG4gICAgICAgICAgICAgICAgICBmb3JjZUNoYW5nZSA9ICFmZWVkLmlzSW5pdGlhbGl6ZWQgPyB0cnVlIDogZmFsc2U7XG4gICAgICAgICAgICAgICAgJChmZWVkLmVsKS5maW5kKGl0ZW1zU2VsZWN0b3IpLmVhY2goZnVuY3Rpb24gKGluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghJCh0aGlzKS5oYXNDbGFzcygnc2J5X251bV9kaWZmX2hpZGUnKVxuICAgICAgICAgICAgICAgICAgICAgICYmICQodGhpcykuZmluZCgnLnNieV92aWRlb190aHVtYm5haWwnKS5sZW5ndGhcbiAgICAgICAgICAgICAgICAgICAgICAmJiB0eXBlb2YgJCh0aGlzKS5maW5kKCcuc2J5X3ZpZGVvX3RodW1ibmFpbCcpLmF0dHIoJ2RhdGEtaW1nLXNyYy1zZXQnKSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZlZWQubWF5YmVSYWlzZVNpbmdsZUltYWdlUmVzb2x1dGlvbigkKHRoaXMpLGluZGV4LGZvcmNlQ2hhbmdlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pOyAvL0VuZCAuc2J5X2l0ZW0gZWFjaFxuICAgICAgICAgICAgICAgIGZlZWQuaXNJbml0aWFsaXplZCA9IHRydWU7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0QmVzdFJlc29sdXRpb25Gb3JBdXRvOiBmdW5jdGlvbihjb2xXaWR0aCwgYXNwZWN0UmF0aW8sICRpdGVtKSB7XG4gICAgICAgICAgICAgICAgaWYgKGlzTmFOKGFzcGVjdFJhdGlvKSB8fCBhc3BlY3RSYXRpbyA8IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgYXNwZWN0UmF0aW8gPSAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgYmVzdFdpZHRoID0gY29sV2lkdGggKiBhc3BlY3RSYXRpbyxcbiAgICAgICAgICAgICAgICAgIGJlc3RXaWR0aFJvdW5kZWQgPSBNYXRoLmNlaWwoYmVzdFdpZHRoIC8gMTApICogMTAsXG4gICAgICAgICAgICAgICAgICBjdXN0b21TaXplcyA9IFsxMjAsIDMyMCwgNDgwLCA2NDBdO1xuXG4gICAgICAgICAgICAgICAgaWYgKCRpdGVtLmhhc0NsYXNzKCdzYnlfaGlnaGxpZ2h0ZWQnKSkge1xuICAgICAgICAgICAgICAgICAgICBiZXN0V2lkdGhSb3VuZGVkID0gYmVzdFdpZHRoUm91bmRlZCAqMjtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoY3VzdG9tU2l6ZXMuaW5kZXhPZihwYXJzZUludChiZXN0V2lkdGhSb3VuZGVkKSkgPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBkb25lID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICQuZWFjaChjdXN0b21TaXplcywgZnVuY3Rpb24gKGluZGV4LCBpdGVtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbSA+IHBhcnNlSW50KGJlc3RXaWR0aFJvdW5kZWQpICYmICFkb25lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmVzdFdpZHRoUm91bmRlZCA9IGl0ZW07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9uZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHJldHVybiBiZXN0V2lkdGhSb3VuZGVkO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGhpZGVFeHRyYUl0ZW1zRm9yV2lkdGg6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmxheW91dCA9PT0gJ2Nhcm91c2VsJykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciAkc2VsZiA9ICQodGhpcy5lbCksXG4gICAgICAgICAgICAgICAgICBudW0gPSB0eXBlb2YgJHNlbGYuYXR0cignZGF0YS1udW0nKSAhPT0gJ3VuZGVmaW5lZCcgJiYgJHNlbGYuYXR0cignZGF0YS1udW0nKSAhPT0gJycgPyBwYXJzZUludCgkc2VsZi5hdHRyKCdkYXRhLW51bScpKSA6IDEsXG4gICAgICAgICAgICAgICAgICBudW1tb2JpbGUgPSB0eXBlb2YgJHNlbGYuYXR0cignZGF0YS1udW1tb2JpbGUnKSAhPT0gJ3VuZGVmaW5lZCcgJiYgJHNlbGYuYXR0cignZGF0YS1udW1tb2JpbGUnKSAhPT0gJycgPyBwYXJzZUludCgkc2VsZi5hdHRyKCdkYXRhLW51bW1vYmlsZScpKSA6IG51bTtcblxuICAgICAgICAgICAgICAgIGlmICghJHNlbGYuaGFzQ2xhc3MoJy5zYnlfbGF5b3V0X2Nhcm91c2VsJykpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCQod2luZG93KS53aWR0aCgpIDwgNDgwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobnVtbW9iaWxlIDwgJHNlbGYuZmluZCgnLnNieV9pdGVtJykubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNlbGYuZmluZCgnLnNieV9pdGVtJykuc2xpY2UobnVtbW9iaWxlIC0gJHNlbGYuZmluZCgnLnNieV9pdGVtJykubGVuZ3RoKS5hZGRDbGFzcygnc2J5X251bV9kaWZmX2hpZGUnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChudW0gPCAkc2VsZi5maW5kKCcuc2J5X2l0ZW0nKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2VsZi5maW5kKCcuc2J5X2l0ZW0nKS5zbGljZShudW0gLSAkc2VsZi5maW5kKCcuc2J5X2l0ZW0nKS5sZW5ndGgpLmFkZENsYXNzKCdzYnlfbnVtX2RpZmZfaGlkZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2V0SW1hZ2VTaXplQ2xhc3M6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgJHNlbGYgPSAkKHRoaXMuZWwpO1xuICAgICAgICAgICAgICAgICRzZWxmLnJlbW92ZUNsYXNzKCdzYnlfc21hbGwgc2J5X21lZGl1bScpO1xuICAgICAgICAgICAgICAgIHZhciBmZWVkV2lkdGggPSAkc2VsZi5pbm5lcldpZHRoKCksXG4gICAgICAgICAgICAgICAgICBwaG90b1BhZGRpbmcgPSBwYXJzZUludCgoJHNlbGYuZmluZCgnLnNieV9pdGVtc193cmFwJykub3V0ZXJXaWR0aCgpIC0gJHNlbGYuZmluZCgnLnNieV9pdGVtc193cmFwJykud2lkdGgoKSkpIC8gMixcbiAgICAgICAgICAgICAgICAgIGNvbHMgPSB0aGlzLmdldENvbHVtbkNvdW50KCksXG4gICAgICAgICAgICAgICAgICBmZWVkV2lkdGhTYW5zUGFkZGluZyA9IGZlZWRXaWR0aCAtIChwaG90b1BhZGRpbmcgKiAoY29scysyKSksXG4gICAgICAgICAgICAgICAgICBjb2xXaWR0aCA9IChmZWVkV2lkdGhTYW5zUGFkZGluZyAvIGNvbHMpO1xuXG4gICAgICAgICAgICAgICAgaWYgKGNvbFdpZHRoID4gMTQwICYmIGNvbFdpZHRoIDwgMjQwKSB7XG4gICAgICAgICAgICAgICAgICAgICRzZWxmLmFkZENsYXNzKCdzYnlfbWVkaXVtJyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChjb2xXaWR0aCA8PSAxNDApIHtcbiAgICAgICAgICAgICAgICAgICAgJHNlbGYuYWRkQ2xhc3MoJ3NieV9zbWFsbCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZXRNaW5JbWFnZVdpZHRoOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKCQodGhpcy5lbCkuZmluZCgnLnNieV9pdGVtIC5zYnlfdmlkZW9fdGh1bWJuYWlsJykuZmlyc3QoKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5taW5JbWFnZVdpZHRoID0gJCh0aGlzLmVsKS5maW5kKCcuc2J5X2l0ZW0gLnNieV92aWRlb190aHVtYm5haWwnKS5maXJzdCgpLmlubmVyV2lkdGgoKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1pbkltYWdlV2lkdGggPSAxNTA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNldEltYWdlUmVzb2x1dGlvbjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLnNldHRpbmdzLmltZ1JlcyA9PT0gJ2F1dG8nKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaW1hZ2VSZXNvbHV0aW9uID0gJ2F1dG8nO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHN3aXRjaCAodGhpcy5zZXR0aW5ncy5pbWdSZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ3RodW1iJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmltYWdlUmVzb2x1dGlvbiA9IDE1MDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ21lZGl1bSc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pbWFnZVJlc29sdXRpb24gPSAzMjA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW1hZ2VSZXNvbHV0aW9uID0gNjQwO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldEltYWdlVXJsczogZnVuY3Rpb24gKCRpdGVtKSB7XG4gICAgICAgICAgICAgICAgdmFyIHNyY1NldCA9IEpTT04ucGFyc2UoJGl0ZW0uZmluZCgnLnNieV92aWRlb190aHVtYm5haWwnKS5hdHRyKCdkYXRhLWltZy1zcmMtc2V0JykucmVwbGFjZSgvXFxcXFxcLy9nLCAnLycpKSxcbiAgICAgICAgICAgICAgICAgIGlkID0gJGl0ZW0uYXR0cignaWQnKS5yZXBsYWNlKCdzYnlfJywgJycpLnJlcGxhY2UoJ3BsYXllcl8nLCcnKTtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRoaXMucmVzaXplZEltYWdlc1tpZF0gIT09ICd1bmRlZmluZWQnXG4gICAgICAgICAgICAgICAgICAmJiB0aGlzLnJlc2l6ZWRJbWFnZXNbaWRdICE9PSAndmlkZW8nXG4gICAgICAgICAgICAgICAgICAmJiB0aGlzLnJlc2l6ZWRJbWFnZXNbaWRdICE9PSAncGVuZGluZydcbiAgICAgICAgICAgICAgICAgICYmIHRoaXMucmVzaXplZEltYWdlc1tpZF0uaWQgIT09ICdlcnJvcidcbiAgICAgICAgICAgICAgICAgICYmIHRoaXMucmVzaXplZEltYWdlc1tpZF0uaWQgIT09ICd2aWRlbydcbiAgICAgICAgICAgICAgICAgICYmIHRoaXMucmVzaXplZEltYWdlc1tpZF0uaWQgIT09ICdwZW5kaW5nJykge1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGhpcy5yZXNpemVkSW1hZ2VzW2lkXVsnc2l6ZXMnXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmb3VuZFNpemVzID0gW107XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRoaXMucmVzaXplZEltYWdlc1tpZF1bJ3NpemVzJ11bJ2Z1bGwnXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3VuZFNpemVzLnB1c2goNjQwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmNTZXRbNjQwXSA9IHNieU9wdGlvbnMucmVzaXplZF91cmwgKyB0aGlzLnJlc2l6ZWRJbWFnZXNbaWRdLmlkICsgJ2Z1bGwuanBnJztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkaXRlbS5maW5kKCcuc2J5X2xpbmtfYXJlYScpLmF0dHIoICdocmVmJywgc2J5T3B0aW9ucy5yZXNpemVkX3VybCArIHRoaXMucmVzaXplZEltYWdlc1tpZF0uaWQgKyAnZnVsbC5qcGcnICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJGl0ZW0uZmluZCgnLnNieV92aWRlb190aHVtYm5haWwnKS5hdHRyKCAnZGF0YS1mdWxsLXJlcycsIHNieU9wdGlvbnMucmVzaXplZF91cmwgKyB0aGlzLnJlc2l6ZWRJbWFnZXNbaWRdLmlkICsgJ2Z1bGwuanBnJyApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnJlc2l6ZWRJbWFnZXNbaWRdWydzaXplcyddWydsb3cnXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3VuZFNpemVzLnB1c2goMzIwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmNTZXRbMzIwXSA9IHNieU9wdGlvbnMucmVzaXplZF91cmwgKyB0aGlzLnJlc2l6ZWRJbWFnZXNbaWRdLmlkICsgJ2xvdy5qcGcnO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnNldHRpbmdzLmZhdm9yTG9jYWwgJiYgdHlwZW9mIHRoaXMucmVzaXplZEltYWdlc1tpZF1bJ3NpemVzJ11bJ2Z1bGwnXSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGl0ZW0uZmluZCgnLnNieV9saW5rX2FyZWEnKS5hdHRyKCAnaHJlZicsIHNieU9wdGlvbnMucmVzaXplZF91cmwgKyB0aGlzLnJlc2l6ZWRJbWFnZXNbaWRdLmlkICsgJ2xvdy5qcGcnICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRpdGVtLmZpbmQoJy5zYnlfdmlkZW9fdGh1bWJuYWlsJykuYXR0ciggJ2RhdGEtZnVsbC1yZXMnLCBzYnlPcHRpb25zLnJlc2l6ZWRfdXJsICsgdGhpcy5yZXNpemVkSW1hZ2VzW2lkXS5pZCArICdsb3cuanBnJyApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGhpcy5yZXNpemVkSW1hZ2VzW2lkXVsnc2l6ZXMnXVsndGh1bWInXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3VuZFNpemVzLnB1c2goMTUwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmNTZXRbMTUwXSA9IHNieU9wdGlvbnMucmVzaXplZF91cmwgKyB0aGlzLnJlc2l6ZWRJbWFnZXNbaWRdLmlkICsgJ3RodW1iLmpwZyc7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5zZXR0aW5ncy5mYXZvckxvY2FsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZvdW5kU2l6ZXMuaW5kZXhPZig2NDApID09PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZm91bmRTaXplcy5pbmRleE9mKDMyMCkgPiAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjU2V0WzY0MF0gPSBzYnlPcHRpb25zLnJlc2l6ZWRfdXJsICsgdGhpcy5yZXNpemVkSW1hZ2VzW2lkXS5pZCArICdsb3cuanBnJztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZm91bmRTaXplcy5pbmRleE9mKDMyMCkgPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmb3VuZFNpemVzLmluZGV4T2YoNjQwKSA+IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmNTZXRbMzIwXSA9IHNieU9wdGlvbnMucmVzaXplZF91cmwgKyB0aGlzLnJlc2l6ZWRJbWFnZXNbaWRdLmlkICsgJ2Z1bGwuanBnJztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChmb3VuZFNpemVzLmluZGV4T2YoMTUwKSA+IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmNTZXRbMzIwXSA9IHNieU9wdGlvbnMucmVzaXplZF91cmwgKyB0aGlzLnJlc2l6ZWRJbWFnZXNbaWRdLmlkICsgJ3RodW1iLmpwZyc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZvdW5kU2l6ZXMuaW5kZXhPZigxNTApID09PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZm91bmRTaXplcy5pbmRleE9mKDMyMCkgPiAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjU2V0WzE1MF0gPSBzYnlPcHRpb25zLnJlc2l6ZWRfdXJsICsgdGhpcy5yZXNpemVkSW1hZ2VzW2lkXS5pZCArICdsb3cuanBnJztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChmb3VuZFNpemVzLmluZGV4T2YoNjQwKSA+IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmNTZXRbMTUwXSA9IHNieU9wdGlvbnMucmVzaXplZF91cmwgKyB0aGlzLnJlc2l6ZWRJbWFnZXNbaWRdLmlkICsgJ2Z1bGwuanBnJztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHRoaXMucmVzaXplZEltYWdlc1tpZF0gPT09ICd1bmRlZmluZWQnXG4gICAgICAgICAgICAgICAgICB8fCAodHlwZW9mIHRoaXMucmVzaXplZEltYWdlc1tpZF1bJ2lkJ10gIT09ICd1bmRlZmluZWQnICYmIHRoaXMucmVzaXplZEltYWdlc1tpZF1bJ2lkJ10gIT09ICdwZW5kaW5nJyAmJiB0aGlzLnJlc2l6ZWRJbWFnZXNbaWRdWydpZCddICE9PSAnZXJyb3InKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZFRvTmVlZHNSZXNpemluZyhpZCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHNyY1NldDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXRWaWRlb0lEOiBmdW5jdGlvbiAoJGVsKSB7XG4gICAgICAgICAgICAgICAgaWYgKCRlbC5oYXNDbGFzcygnc2J5X2l0ZW0nKSB8fCAkZWwuaGFzQ2xhc3MoJ3NieV9wbGF5ZXJfaXRlbScpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgJGVsLmZpbmQoJy5zYnlfdmlkZW9fdGh1bWJuYWlsJykuYXR0cignZGF0YS12aWRlby1pZCcpICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICRlbC5maW5kKCcuc2J5X3ZpZGVvX3RodW1ibmFpbCcpLmF0dHIoJ2RhdGEtdmlkZW8taWQnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoJGVsLmNsb3Nlc3QoJ3NieV9pdGVtJykubGVuZ3RoIHx8ICRlbC5jbG9zZXN0KCdzYnlfcGxheWVyX2l0ZW0nKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyICR0YXJnZUVsID0gJGVsLmNsb3Nlc3QoJ3NieV9pdGVtJykubGVuZ3RoID8gJGVsLmNsb3Nlc3QoJ3NieV9pdGVtJykgOiAkZWwuY2xvc2VzdCgnc2J5X3BsYXllcl9pdGVtJyk7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgJHRhcmdlRWwuZmluZCgnLnNieV92aWRlb190aHVtYm5haWwnKS5hdHRyKCdkYXRhLXZpZGVvLWlkJykgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJHRhcmdlRWwuZmluZCgnLnNieV92aWRlb190aHVtYm5haWwnKS5hdHRyKCdkYXRhLXZpZGVvLWlkJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCRlbC5oYXNDbGFzcygnc2JfeW91dHViZScpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAkZWwuZmluZCgnLnNieV9pdGVtJykuZmlyc3QoKS5maW5kKCcuc2J5X3ZpZGVvX3RodW1ibmFpbCcpLmF0dHIoJ2RhdGEtdmlkZW8taWQnKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCQodGhpcy5lbCkuZmluZCgnLnNieV92aWRlb190aHVtYm5haWwnKS5maXJzdCgpLmxlbmd0aCAmJiB0eXBlb2YgJCh0aGlzLmVsKS5maW5kKCcuc2J5X3ZpZGVvX3RodW1ibmFpbCcpLmZpcnN0KCkuYXR0cignZGF0YS12aWRlby1pZCcpICE9PSAndW5kZWZpbmVkJyl7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAkKHRoaXMuZWwpLmZpbmQoJy5zYnlfdmlkZW9fdGh1bWJuYWlsJykuZmlyc3QoKS5hdHRyKCdkYXRhLXZpZGVvLWlkJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXRBdmF0YXJVcmw6IGZ1bmN0aW9uICh1c2VybmFtZSxmYXZvclR5cGUpIHtcbiAgICAgICAgICAgICAgICBpZiAodXNlcm5hbWUgPT09ICcnKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB2YXIgYXZhaWxhYmxlQXZhdGFycyA9IHRoaXMuc2V0dGluZ3MuZ2VuZXJhbC5hdmF0YXJzLFxuICAgICAgICAgICAgICAgICAgZmF2b3JUeXBlID0gdHlwZW9mIGZhdm9yVHlwZSAhPT0gJ3VuZGVmaW5lZCcgPyBmYXZvclR5cGUgOiAnbG9jYWwnO1xuXG4gICAgICAgICAgICAgICAgaWYgKGZhdm9yVHlwZSA9PT0gJ2xvY2FsJykge1xuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGF2YWlsYWJsZUF2YXRhcnNbJ0xDTCcrdXNlcm5hbWVdICE9PSAndW5kZWZpbmVkJyAmJiBwYXJzZUludChhdmFpbGFibGVBdmF0YXJzWydMQ0wnK3VzZXJuYW1lXSkgPT09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBzYnlPcHRpb25zLnJlc2l6ZWRfdXJsICsgdXNlcm5hbWUgKyAnLmpwZyc7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGF2YWlsYWJsZUF2YXRhcnNbdXNlcm5hbWVdICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGF2YWlsYWJsZUF2YXRhcnNbdXNlcm5hbWVdO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBhdmFpbGFibGVBdmF0YXJzW3VzZXJuYW1lXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhdmFpbGFibGVBdmF0YXJzW3VzZXJuYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgYXZhaWxhYmxlQXZhdGFyc1snTENMJyt1c2VybmFtZV0gIT09ICd1bmRlZmluZWQnICYmIHBhcnNlSW50KGF2YWlsYWJsZUF2YXRhcnNbJ0xDTCcrdXNlcm5hbWVdKSA9PT0gMSkgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBzYnlPcHRpb25zLnJlc2l6ZWRfdXJsICsgdXNlcm5hbWUgKyAnLmpwZyc7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYWRkVG9OZWVkc1Jlc2l6aW5nOiBmdW5jdGlvbiAoaWQpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5uZWVkc1Jlc2l6aW5nLmluZGV4T2YoaWQpID09PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm5lZWRzUmVzaXppbmcucHVzaChpZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGFwcGx5SW1hZ2VMaXF1aWQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgJHNlbGYgPSAkKHRoaXMuZWwpLFxuICAgICAgICAgICAgICAgICAgZmVlZCA9IHRoaXM7XG4gICAgICAgICAgICAgICAgc2J5QWRkSW1nTGlxdWlkKCk7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiAkc2VsZi5maW5kKFwiLnNieV9wbGF5ZXJfaXRlbVwiKS5zYnlfaW1nTGlxdWlkID09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCRzZWxmLmZpbmQoJy5zYnlfcGxheWVyX2l0ZW0nKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICRzZWxmLmZpbmQoXCIuc2J5X3BsYXllcl9pdGVtIC5zYnlfcGxheWVyX3ZpZGVvX3RodW1ibmFpbFwiKS5zYnlfaW1nTGlxdWlkKHtmaWxsOiB0cnVlfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgJHNlbGYuZmluZChcIi5zYnlfaXRlbSAuc2J5X2l0ZW1fdmlkZW9fdGh1bWJuYWlsXCIpLnNieV9pbWdMaXF1aWQoe2ZpbGw6IHRydWV9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbGlzdGVuRm9yVmlzaWJpbGl0eUNoYW5nZTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyIGZlZWQgPSB0aGlzO1xuICAgICAgICAgICAgICAgIHNieUFkZFZpc2liaWxpdHlMaXN0ZW5lcigpO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgJCh0aGlzLmVsKS5maWx0ZXIoJzpoaWRkZW4nKS5zYnlWaXNpYmlsaXR5Q2hhbmdlZCA9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vSWYgdGhlIGZlZWQgaXMgaW5pdGlhbGx5IGhpZGRlbiAoaW4gYSB0YWIgZm9yIGV4YW1wbGUpIHRoZW4gY2hlY2sgZm9yIHdoZW4gaXQgYmVjb21lcyB2aXNpYmxlIGFuZCBzZXQgdGhlbiBzZXQgdGhlIGhlaWdodFxuICAgICAgICAgICAgICAgICAgICAkKHRoaXMuZWwpLmZpbHRlcignOmhpZGRlbicpLnNieVZpc2liaWxpdHlDaGFuZ2VkKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiAoZWxlbWVudCwgdmlzaWJsZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZlZWQuYWZ0ZXJSZXNpemUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBydW5PbkxvYWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXRDb2x1bW5Db3VudDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyICRzZWxmID0gJCh0aGlzLmVsKSxcbiAgICAgICAgICAgICAgICAgIGNvbHMgPSB0aGlzLnNldHRpbmdzLmNvbHMsXG4gICAgICAgICAgICAgICAgICBjb2xzbW9iaWxlID0gdGhpcy5zZXR0aW5ncy5jb2xzbW9iaWxlLFxuICAgICAgICAgICAgICAgICAgcmV0dXJuQ29scyA9IGNvbHM7XG5cbiAgICAgICAgICAgICAgICBzYnlXaW5kb3dXaWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoO1xuXG4gICAgICAgICAgICAgICAgaWYgKCRzZWxmLmhhc0NsYXNzKCdzYnlfbW9iX2NvbF9hdXRvJykpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNieVdpbmRvd1dpZHRoIDwgNjQwICYmIChwYXJzZUludChjb2xzKSA+IDIgJiYgcGFyc2VJbnQoY29scykgPCA3KSkgcmV0dXJuQ29scyA9IDI7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzYnlXaW5kb3dXaWR0aCA8IDY0MCAmJiAocGFyc2VJbnQoY29scykgPiA2ICYmIHBhcnNlSW50KGNvbHMpIDwgMTEpKSByZXR1cm5Db2xzID0gNDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNieVdpbmRvd1dpZHRoIDw9IDQ4MCAmJiBwYXJzZUludChjb2xzKSA+IDIpIHJldHVybkNvbHMgPSAxO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoc2J5V2luZG93V2lkdGggPD0gNDgwKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybkNvbHMgPSBjb2xzbW9iaWxlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHJldHVybiBwYXJzZUludChyZXR1cm5Db2xzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvblRodW1ibmFpbENsaWNrOiBmdW5jdGlvbigkY2xpY2tlZCxpc1BsYXllcix2aWRlb0lEKSB7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmNhbkNyZWF0ZVBsYXllcigpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyICRzZWxmID0gJCh0aGlzLmVsKTtcbiAgICAgICAgICAgICAgICBpZiAoJHNlbGYuaGFzQ2xhc3MoJ3NieV9sYXlvdXRfZ2FsbGVyeScpKSB7XG4gICAgICAgICAgICAgICAgICAgICRzZWxmLmZpbmQoJy5zYnlfY3VycmVudCcpLnJlbW92ZUNsYXNzKCdzYnlfY3VycmVudCcpO1xuICAgICAgICAgICAgICAgICAgICAkY2xpY2tlZC5jbG9zZXN0KCcuc2J5X2l0ZW0nKS5hZGRDbGFzcygnc2J5X2N1cnJlbnQnKTtcblxuICAgICAgICAgICAgICAgICAgICAkY2xpY2tlZC5jbG9zZXN0KCcuc2J5X2l0ZW0nKS5hZGRDbGFzcygnc2J5X2N1cnJlbnQnKTtcbiAgICAgICAgICAgICAgICAgICAgJHNlbGYuYWRkQ2xhc3MoJ3NieV9wbGF5ZXJfYWRkZWQnKS5maW5kKCcuc2J5X3BsYXllcl9vdXRlcl93cmFwJykuYWRkQ2xhc3MoJ3NieV9wbGF5ZXJfbG9hZGluZycpO1xuICAgICAgICAgICAgICAgICAgICAkc2VsZi5maW5kKCcuc2J5X3BsYXllcl9vdXRlcl93cmFwIC5zYnlfdmlkZW9fdGh1bWJuYWlsJykuZmluZCgnLnNieV9sb2FkZXInKS5zaG93KCkucmVtb3ZlQ2xhc3MoJ3NieV9oaWRkZW4nKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEkc2VsZi5maW5kKCcuc2J5X3BsYXllcl9vdXRlcl93cmFwIGlmcmFtZScpLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzUGxheWVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jcmVhdGVQbGF5ZXIoJ3NieV9wbGF5ZXInK3RoaXMuaW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdmlkZW9JRCA9IHR5cGVvZiB2aWRlb0lEID09PSAndW5kZWZpbmVkJyA/IHRoaXMuZ2V0VmlkZW9JRCgkY2xpY2tlZC5jbG9zZXN0KCcuc2J5X2l0ZW0nKSkgOiB2aWRlb0lEO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY3JlYXRlUGxheWVyKCdzYnlfcGxheWVyJyt0aGlzLmluZGV4LHZpZGVvSUQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzUGxheWVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZpZGVvSUQgPSB0eXBlb2YgdmlkZW9JRCA9PT0gJ3VuZGVmaW5lZCcgPyB0aGlzLmdldFZpZGVvSUQoJHNlbGYuZmluZCgnLnNieV9pdGVtJykuZmlyc3QoKSkgOiB2aWRlb0lEO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wbGF5VmlkZW9JblBsYXllcih2aWRlb0lEKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZpZGVvSUQgPSB0eXBlb2YgdmlkZW9JRCA9PT0gJ3VuZGVmaW5lZCcgPyB0aGlzLmdldFZpZGVvSUQoJGNsaWNrZWQuY2xvc2VzdCgnLnNieV9pdGVtJykpIDogdmlkZW9JRDtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlUGxheWVySW5mbygkY2xpY2tlZC5jbG9zZXN0KCcuc2J5X2l0ZW0nKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wbGF5VmlkZW9JblBsYXllcih2aWRlb0lEKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFmdGVyVmlkZW9DaGFuZ2VkKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoJCh0aGlzLmVsKS5oYXNDbGFzcygnc2J5X2xheW91dF9ncmlkJykgfHwgJCh0aGlzLmVsKS5oYXNDbGFzcygnc2J5X2xheW91dF9jYXJvdXNlbCcpKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciAkc2J5SXRlbSA9ICRjbGlja2VkLmNsb3Nlc3QoJy5zYnlfaXRlbScpLFxuICAgICAgICAgICAgICAgICAgICAgIHZpZGVvSUQgPSB0eXBlb2YgdmlkZW9JRCA9PT0gJ3VuZGVmaW5lZCcgPyB0aGlzLmdldFZpZGVvSUQoJHNieUl0ZW0pIDogdmlkZW9JRDtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wbGF5VmlkZW9JblBsYXllcih2aWRlb0lEKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hZnRlclZpZGVvQ2hhbmdlZCgpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoJCh0aGlzLmVsKS5oYXNDbGFzcygnc2J5X2xheW91dF9saXN0JykpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyICRzYnlJdGVtID0gJGNsaWNrZWQuY2xvc2VzdCgnLnNieV9pdGVtJyksXG4gICAgICAgICAgICAgICAgICAgICAgdmlkZW9JRCA9IHR5cGVvZiB2aWRlb0lEID09PSAndW5kZWZpbmVkJyA/IHRoaXMuZ2V0VmlkZW9JRCgkc2J5SXRlbSkgOiB2aWRlb0lEO1xuICAgICAgICAgICAgICAgICAgICBpZiAoJHNieUl0ZW0ubGVuZ3RoICYmICEkc2J5SXRlbS5maW5kKCdpZnJhbWUnKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICRzYnlJdGVtLmZpbmQoJy5zYnlfbG9hZGVyJykuc2hvdygpLnJlbW92ZUNsYXNzKCdzYnlfaGlkZGVuJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAkc2J5SXRlbS5hZGRDbGFzcygnc2J5X3BsYXllcl9sb2FkaW5nIHNieV9wbGF5ZXJfbG9hZGVkJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNyZWF0ZVBsYXllcignc2J5X3BsYXllcl8nK3ZpZGVvSUQsdmlkZW9JRCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBsYXlWaWRlb0luUGxheWVyKHZpZGVvSUQsJHNieUl0ZW0uYXR0cignZGF0YS12aWRlby1pZCcpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWZ0ZXJWaWRlb0NoYW5nZWQoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvblRodW1ibmFpbEVudGVyOiBmdW5jdGlvbigkaG92ZXJlZCkge1xuICAgICAgICAgICAgICAgIGlmICghdGhpcy5jYW5DcmVhdGVQbGF5ZXIoKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciAkc2VsZiA9ICQodGhpcy5lbCk7XG4gICAgICAgICAgICAgICAgaWYgKCRzZWxmLmhhc0NsYXNzKCdzYnlfbGF5b3V0X2xpc3QnKSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgJHNieUl0ZW0gPSAkaG92ZXJlZC5jbG9zZXN0KCcuc2J5X2l0ZW0nKSxcbiAgICAgICAgICAgICAgICAgICAgICB2aWRlb0lEID0gdGhpcy5nZXRWaWRlb0lEKCRzYnlJdGVtKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEkc2J5SXRlbS5maW5kKCdpZnJhbWUnKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICRzYnlJdGVtLmZpbmQoJy5zYnlfbG9hZGVyJykuc2hvdygpLnJlbW92ZUNsYXNzKCdzYnlfaGlkZGVuJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAkc2J5SXRlbS5hZGRDbGFzcygnc2J5X3BsYXllcl9sb2FkaW5nIHNieV9wbGF5ZXJfbG9hZGVkJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNyZWF0ZVBsYXllcignc2J5X3BsYXllcl8nK3ZpZGVvSUQsdmlkZW9JRCwwKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvblRodW1ibmFpbExlYXZlOiBmdW5jdGlvbigkaG92ZXJlZCkge1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoYW5nZVBsYXllckluZm86IGZ1bmN0aW9uKCRuZXdJdGVtKSB7XG5cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwbGF5ZXJFYWdlckxvYWRlZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnBsYXllciAhPT0gJ3VuZGVmaW5lZCcgfHwgJCh0aGlzLmVsKS5oYXNDbGFzcygnc2J5X3BsYXllcl9sb2FkZWQnKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2FuQ3JlYXRlUGxheWVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBpZiAoJCh0aGlzLmVsKS5maW5kKCcjc2J5X2JsYW5rJykubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucGxheWVyRWFnZXJMb2FkZWQoKSB8fCAodGhpcy5wbGF5ZXJBUElSZWFkeSAmJiB0aGlzLnNldHRpbmdzLmNvbnNlbnRHaXZlbikgfHwgKHdpbmRvdy5zYnlBUElSZWFkeSAmJiB0aGlzLnNldHRpbmdzLmNvbnNlbnRHaXZlbik7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcGxheVZpZGVvSW5QbGF5ZXI6IGZ1bmN0aW9uKHZpZGVvSUQscGxheWVySUQpIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRoaXMucGxheWVyICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgdGhpcy5wbGF5ZXIubG9hZFZpZGVvQnlJZCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wbGF5ZXIubG9hZFZpZGVvQnlJZCh2aWRlb0lEKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB3aW5kb3cuc2J5TGlnaHRib3hQbGF5ZXIgIT09ICd1bmRlZmluZWQnXG4gICAgICAgICAgICAgICAgICAmJiB0eXBlb2Ygd2luZG93LnNieUxpZ2h0Ym94UGxheWVyLmxvYWRWaWRlb0J5SWQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5zYnlMaWdodGJveFBsYXllci5sb2FkVmlkZW9CeUlkKHZpZGVvSUQpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHBsYXllcklEICE9PSAndW5kZWZpbmVkJ1xuICAgICAgICAgICAgICAgICAgJiYgdHlwZW9mIHRoaXMucGxheWVycyAhPT0gJ3VuZGVmaW5lZCdcbiAgICAgICAgICAgICAgICAgICYmIHR5cGVvZiB0aGlzLnBsYXllcnNbcGxheWVySURdICE9PSAndW5kZWZpbmVkJ1xuICAgICAgICAgICAgICAgICAgJiYgdHlwZW9mIHRoaXMucGxheWVyc1twbGF5ZXJJRF0ubG9hZFZpZGVvQnlJZCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wbGF5ZXJzW3BsYXllcklEXS5sb2FkVmlkZW9CeUlkKHZpZGVvSUQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhZnRlclZpZGVvQ2hhbmdlZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgaWYgKCQodGhpcy5lbCkuaGFzQ2xhc3MoJ3NieV9sYXlvdXRfZ2FsbGVyeScpKSB7XG4gICAgICAgICAgICAgICAgICAgICQodGhpcy5lbCkuZmluZCgnLnNieV9wbGF5ZXJfb3V0ZXJfd3JhcCcpLnJlbW92ZUNsYXNzKCdzYnlfcGxheWVyX2xvYWRpbmcnKTtcbiAgICAgICAgICAgICAgICAgICAgJCh0aGlzLmVsKS5maW5kKCcuc2J5X3BsYXllcl9vdXRlcl93cmFwIC5zYnlfdmlkZW9fdGh1bWJuYWlsJykuZmluZCgnLnNieV9sb2FkZXInKS5oaWRlKCkuYWRkQ2xhc3MoJ3NieV9oaWRkZW4nKTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoJCh3aW5kb3cpLndpZHRoKCkgPCA0ODApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJ2h0bWwsIGJvZHknKS5hbmltYXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY3JvbGxUb3A6ICQodGhpcy5lbCkuZmluZCgnLnNieV9wbGF5ZXJfb3V0ZXJfd3JhcCcpLm9mZnNldCgpLnRvcFxuICAgICAgICAgICAgICAgICAgICAgICAgfSwgMzAwKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNoZWNrQ29uc2VudDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuc2V0dGluZ3MuY29uc2VudEdpdmVuIHx8ICF0aGlzLnNldHRpbmdzLmdkcHIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXR0aW5ncy5ub0NETiA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBDTElfQ29va2llICE9PSBcInVuZGVmaW5lZFwiKSB7IC8vIEdEUFIgQ29va2llIENvbnNlbnQgYnkgV2ViVG9mZmVlXG4gICAgICAgICAgICAgICAgICAgIGlmIChDTElfQ29va2llLnJlYWQoQ0xJX0FDQ0VQVF9DT09LSUVfTkFNRSkgIT09IG51bGwpICB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFdlYlRvZmZlZSBubyBsb25nZXIgdXNlcyB0aGlzIGNvb2tpZSBidXQgYmVpbmcgbGVmdCBoZXJlIHRvIG1haW50YWluIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoQ0xJX0Nvb2tpZS5yZWFkKCdjb29raWVsYXdpbmZvLWNoZWNrYm94LW5vbi1uZWNlc3NhcnknKSAhPT0gJ251bGwnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXR0aW5ncy5jb25zZW50R2l2ZW4gPSBDTElfQ29va2llLnJlYWQoJ2Nvb2tpZWxhd2luZm8tY2hlY2tib3gtbm9uLW5lY2Vzc2FyeScpID09PSAneWVzJztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKENMSV9Db29raWUucmVhZCgnY29va2llbGF3aW5mby1jaGVja2JveC1uZWNlc3NhcnknKSAhPT0gJ251bGwnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXR0aW5ncy5jb25zZW50R2l2ZW4gPSBDTElfQ29va2llLnJlYWQoJ2Nvb2tpZWxhd2luZm8tY2hlY2tib3gtbmVjZXNzYXJ5JykgPT09ICd5ZXMnO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB3aW5kb3cuY25BcmdzICE9PSBcInVuZGVmaW5lZFwiKSB7IC8vIENvb2tpZSBOb3RpY2UgYnkgZEZhY3RvcnlcbiAgICAgICAgICAgICAgICAgICAgdmFyIHZhbHVlID0gXCI7IFwiICsgZG9jdW1lbnQuY29va2llLFxuICAgICAgICAgICAgICAgICAgICAgIHBhcnRzID0gdmFsdWUuc3BsaXQoICc7IGNvb2tpZV9ub3RpY2VfYWNjZXB0ZWQ9JyApO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICggcGFydHMubGVuZ3RoID09PSAyICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZhbCA9IHBhcnRzLnBvcCgpLnNwbGl0KCAnOycgKS5zaGlmdCgpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldHRpbmdzLmNvbnNlbnRHaXZlbiA9ICh2YWwgPT09ICd0cnVlJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB3aW5kb3cuY29va2llY29uc2VudCAhPT0gJ3VuZGVmaW5lZCcpIHsgLy8gQ29tcGxpYW56IGJ5IFJlYWxseSBTaW1wbGUgUGx1Z2luc1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldHRpbmdzLmNvbnNlbnRHaXZlbiA9ICggc2J5Q21wbHpHZXRDb29raWUoJ2NtcGx6X2NvbnNlbnRfc3RhdHVzJykgPT09ICdhbGxvdycgfHwgalF1ZXJ5KCdib2R5JykuaGFzQ2xhc3MoJ2NtcGx6LXN0YXR1cy1tYXJrZXRpbmcnKSApO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHdpbmRvdy5Db29raWVib3QgIT09IFwidW5kZWZpbmVkXCIpIHsgLy8gQ29va2llYm90IGJ5IEN5Ym90IEEvU1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldHRpbmdzLmNvbnNlbnRHaXZlbiA9IENvb2tpZWJvdC5jb25zZW50ZWQ7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2Ygd2luZG93LkJvcmxhYnNDb29raWUgIT09ICd1bmRlZmluZWQnKSB7IC8vIEJvcmxhYnMgQ29va2llIGJ5IEJvcmxhYnNcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXR0aW5ncy5jb25zZW50R2l2ZW4gPSB3aW5kb3cuQm9ybGFic0Nvb2tpZS5jaGVja0Nvb2tpZUNvbnNlbnQoJ3lvdXR1YmUnKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB2YXIgZXZ0ID0galF1ZXJ5LkV2ZW50KCdzYnljaGVja2NvbnNlbnQnKTtcbiAgICAgICAgICAgICAgICBldnQuZmVlZCA9IHRoaXM7XG4gICAgICAgICAgICAgICAgalF1ZXJ5KHdpbmRvdykudHJpZ2dlcihldnQpO1xuXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuc2V0dGluZ3MuY29uc2VudEdpdmVuKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0dGluZ3Mubm9DRE4gPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zZXR0aW5ncy5jb25zZW50R2l2ZW47IC8vIEdEUFIgbm90IGVuYWJsZWRcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhZnRlckNvbnNlbnRUb2dnbGVkOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5jaGVja0NvbnNlbnQoKSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZmVlZCA9IHRoaXM7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5zYnkubWF5YmVBZGRZVEFQSSgpO1xuICAgICAgICAgICAgICAgICAgICBmZWVkLm1heWJlUmFpc2VJbWFnZVJlc29sdXRpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgZmVlZC5hcHBseUZ1bGxGZWF0dXJlcygpO1xuICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmVlZC5hZnRlclJlc2l6ZSgpO1xuICAgICAgICAgICAgICAgICAgICB9LDUwMCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJlbW92ZUZlYXR1cmVzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB2YXIgZmVlZCA9IHRoaXM7XG4gICAgICAgICAgICAgICAgaWYgKGZlZWQuc2V0dGluZ3Mubm9DRE4pIHtcbiAgICAgICAgICAgICAgICAgICAgJChmZWVkLmVsKS5maW5kKCcuc2J5X3ZpZGVvX3RodW1ibmFpbCcpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLnJlbW92ZUF0dHIoJ2RhdGEtc2J5LWxpZ2h0Ym94Jyk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhcHBseUZ1bGxGZWF0dXJlczogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyIGZlZWQgPSB0aGlzO1xuXG4gICAgICAgICAgICAgICAgJChmZWVkLmVsKS5maW5kKCcuc2J5X2hlYWRlcl9pbWcgaW1nJykuYXR0cignc3JjJywkKGZlZWQuZWwpLmZpbmQoJy5zYnlfaGVhZGVyX2ltZycpLmF0dHIoJ2RhdGEtYXZhdGFyLXVybCcpKTtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mICQoZmVlZC5lbCkuZmluZCgnLnNieV92aWRlb190aHVtYm5haWwnKS5maXJzdCgpLmF0dHIoJ2RhdGEtc2J5LWxpZ2h0Ym94JykgPT09ICd1bmRlZmluZWQnXG4gICAgICAgICAgICAgICAgICAmJiBmZWVkLnNldHRpbmdzLmxpZ2h0Ym94RW5hYmxlZCkge1xuICAgICAgICAgICAgICAgICAgICAkKGZlZWQuZWwpLmZpbmQoJy5zYnlfdmlkZW9fdGh1bWJuYWlsJykuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykuYXR0cignZGF0YS1zYnktbGlnaHRib3gnLGZlZWQuaW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyICRzZWxmID0gJChmZWVkLmVsKTtcbiAgICAgICAgICAgICAgICAkc2VsZi5maW5kKCcuc2J5X25vX2NvbnNlbnQnKS5yZW1vdmVDbGFzcygnc2J5X25vX2NvbnNlbnQnKTtcbiAgICAgICAgICAgICAgICBpZiAoJHNlbGYuaGFzQ2xhc3MoJ3NieV9sYXlvdXRfZ2FsbGVyeScpICYmICRzZWxmLmZpbmQoJy5zYnlfcGxheWVyX291dGVyX3dyYXAnKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tYXliZVJhaXNlU2luZ2xlSW1hZ2VSZXNvbHV0aW9uKCRzZWxmLmZpbmQoJy5zYnlfcGxheWVyX291dGVyX3dyYXAnKSwgMCwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICRzZWxmLmZpbmQoJy5zYnlfaXRlbScpLmZpcnN0KCkuYWRkQ2xhc3MoJ3NieV9jdXJyZW50Jyk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKCFmZWVkLmNhbkNyZWF0ZVBsYXllcigpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKCEkc2VsZi5maW5kKCcuc2J5X3BsYXllcl9vdXRlcl93cmFwIGlmcmFtZScpLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmVlZC5jcmVhdGVQbGF5ZXIoJ3NieV9wbGF5ZXInK2ZlZWQuaW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbG9jYXRpb25HdWVzczogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyICRmZWVkID0gJCh0aGlzLmVsKSxcbiAgICAgICAgICAgICAgICAgIGxvY2F0aW9uID0gJ2NvbnRlbnQnO1xuXG4gICAgICAgICAgICAgICAgaWYgKCRmZWVkLmNsb3Nlc3QoJ2Zvb3RlcicpLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICBsb2NhdGlvbiA9ICdmb290ZXInO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoJGZlZWQuY2xvc2VzdCgnLmhlYWRlcicpLmxlbmd0aFxuICAgICAgICAgICAgICAgICAgfHwgJGZlZWQuY2xvc2VzdCgnaGVhZGVyJykubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uID0gJ2hlYWRlcic7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICgkZmVlZC5jbG9zZXN0KCcuc2lkZWJhcicpLmxlbmd0aFxuICAgICAgICAgICAgICAgICAgfHwgJGZlZWQuY2xvc2VzdCgnYXNpZGUnKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgbG9jYXRpb24gPSAnc2lkZWJhcic7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuIGxvY2F0aW9uO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIGZ1bmN0aW9uIFNieUZlZWRQcm8oZWwsIGluZGV4LCBzZXR0aW5ncykge1xuICAgICAgICAgICAgU2J5RmVlZC5jYWxsKHRoaXMsIGVsLCBpbmRleCwgc2V0dGluZ3MpO1xuXG4gICAgICAgICAgICB0aGlzLkNUQSA9IHt9O1xuXG4gICAgICAgICAgICB0aGlzLmluaXRMYXlvdXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRHYWxsZXJ5TGF5b3V0KCk7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0R3JpZCgpO1xuXG4gICAgICAgICAgICAgICAgdGhpcy5pbml0Q2Fyb3VzZWxzKCk7XG4gICAgICAgICAgICAgICAgdmFyIGV2dCA9IGpRdWVyeS5FdmVudCgnc2J5YWZ0ZXJsYXlvdXRpbml0Jyk7XG4gICAgICAgICAgICAgICAgZXZ0LmZlZWQgPSB0aGlzO1xuICAgICAgICAgICAgICAgIGpRdWVyeSh3aW5kb3cpLnRyaWdnZXIoZXZ0KTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHRoaXMuaW5pdEdyaWQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBpZiAod2luZG93LnNieVNlbWlFYWdlckxvYWRpbmcgJiYgalF1ZXJ5KCcjc2J5X2xpZ2h0Ym94JykubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBmZWVkID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgcGxheWVySUQgPSAnc2J5X2xiLXBsYXllcic7XG4gICAgICAgICAgICAgICAgICAgIGpRdWVyeSgnI3NieV9saWdodGJveCcpLmFkZENsYXNzKCdzYnlfdmlkZW9fbGlnaHRib3gnKTtcblxuICAgICAgICAgICAgICAgICAgICB2YXIgdmlkZW9JRCA9ICQodGhpcy5lbCkuZmluZCgnc2J5X2l0ZW0nKS5maXJzdCgpLmF0dHIoJ2RhdGEtdmlkZW8taWQnKSxcbiAgICAgICAgICAgICAgICAgICAgICBhdXRvcGxheSA9IHNieU9wdGlvbnMuYXV0b3BsYXk7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2Ygd2luZG93LnNieUxpZ2h0Ym94UGxheWVyID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGFyZ3MgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaG9zdDogd2luZG93LmxvY2F0aW9uLnByb3RvY29sICsgZmVlZC5lbWJlZFVSTCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWRlb0lkOiB2aWRlb0lELFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYXllclZhcnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZXN0YnJhbmRpbmc6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbDogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXV0b3BsYXk6IGF1dG9wbGF5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudHM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ29uU3RhdGVDaGFuZ2UnOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZpZGVvSUQgPSBkYXRhLnRhcmdldC5nZXRWaWRlb0RhdGEoKVsndmlkZW9faWQnXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZlZWQuYWZ0ZXJTdGF0ZUNoYW5nZShwbGF5ZXJJRCwgdmlkZW9JRCwgZGF0YSwgJCgnIycgKyBwbGF5ZXJJRCkuY2xvc2VzdCgnLnNieV92aWRlb190aHVtYm5haWxfd3JhcCcpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICBmZWVkLm1heWJlQWRkQ1RBKHBsYXllcklEKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LnNieUxpZ2h0Ym94UGxheWVyID0gbmV3IHdpbmRvdy5ZVC5QbGF5ZXIocGxheWVySUQsIGFyZ3MpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgdGhpcy5pbml0Q2Fyb3VzZWxzID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyIGZlZWQgPSB0aGlzLFxuICAgICAgICAgICAgICAgICAgJHNlbGYgPSAkKHRoaXMuZWwpO1xuXG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnNldHRpbmdzLmdlbmVyYWwuY2Fyb3VzZWwgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIGNvbHMgPSB0aGlzLnNldHRpbmdzLmNvbHMsXG4gICAgICAgICAgICAgICAgICBjb2xzbW9iaWxlID0gdGhpcy5zZXR0aW5ncy5jb2xzbW9iaWxlO1xuXG4gICAgICAgICAgICAgICAgJHNlbGYuZmluZCgnLnNieV9pdGVtc193cmFwJykuYWRkQ2xhc3MoJ3NieV9jYXJvdXNlbCcpO1xuICAgICAgICAgICAgICAgICRzZWxmLmZpbmQoJy5zYnlfbG9hZF9idG4nKS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAkc2VsZi5maW5kKCcuc2J5X2l0ZW0nKS5jc3Moe1xuICAgICAgICAgICAgICAgICAgICAncGFkZGluZy10b3AnIDogJHNlbGYuZmluZCgnLnNieV9pdGVtc193cmFwJykuY3NzKCdwYWRkaW5nLXRvcCcpLFxuICAgICAgICAgICAgICAgICAgICAncGFkZGluZy1yaWdodCcgOiAkc2VsZi5maW5kKCcuc2J5X2l0ZW1zX3dyYXAnKS5jc3MoJ3BhZGRpbmctdG9wJyksXG4gICAgICAgICAgICAgICAgICAgICdwYWRkaW5nLWJvdHRvbScgOiAkc2VsZi5maW5kKCcuc2J5X2l0ZW1zX3dyYXAnKS5jc3MoJ3BhZGRpbmctdG9wJyksXG4gICAgICAgICAgICAgICAgICAgICdwYWRkaW5nLWxlZnQnIDogJHNlbGYuZmluZCgnLnNieV9pdGVtc193cmFwJykuY3NzKCdwYWRkaW5nLXRvcCcpXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgJHNlbGYuZmluZCgnLnNieV9pdGVtJykuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5hdHRyKCdzdHlsZScsJCh0aGlzKS5hdHRyKCdzdHlsZScpLnJlcGxhY2UoJ3BhZGRpbmc6ICcrJHNlbGYuZmluZCgnLnNieV9pdGVtc193cmFwJykuY3NzKCdwYWRkaW5nLXRvcCcpLCdwYWRkaW5nOiAnKyRzZWxmLmZpbmQoJy5zYnlfaXRlbXNfd3JhcCcpLmNzcygncGFkZGluZy10b3AnKSArICcgIWltcG9ydGFudCcpKTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIHZhciBhcnJvd3MgPSBmZWVkLnNldHRpbmdzLmdlbmVyYWwuY2Fyb3VzZWxbMF0sXG4gICAgICAgICAgICAgICAgICBwYWdpbmF0aW9uID0gZmVlZC5zZXR0aW5ncy5nZW5lcmFsLmNhcm91c2VsWzFdLFxuICAgICAgICAgICAgICAgICAgYXV0b3BsYXkgPSBmZWVkLnNldHRpbmdzLmdlbmVyYWwuY2Fyb3VzZWxbMl0sXG4gICAgICAgICAgICAgICAgICB0aW1lID0gZmVlZC5zZXR0aW5ncy5nZW5lcmFsLmNhcm91c2VsWzNdLFxuICAgICAgICAgICAgICAgICAgbG9vcCA9IGZlZWQuc2V0dGluZ3MuZ2VuZXJhbC5jYXJvdXNlbFs0XSxcbiAgICAgICAgICAgICAgICAgIHJvd3MgPSBmZWVkLnNldHRpbmdzLmdlbmVyYWwuY2Fyb3VzZWxbNV07XG4gICAgICAgICAgICAgICAgLy9Jbml0aWF0ZSBjYXJvdXNlbFxuICAgICAgICAgICAgICAgIGlmKCAhYXV0b3BsYXkgKSB0aW1lID0gZmFsc2U7XG5cbiAgICAgICAgICAgICAgICAvL1NldCBkZWZhdWx0cyBmb3IgcmVzcG9uc2l2ZSBicmVha3BvaW50c1xuICAgICAgICAgICAgICAgIHZhciBpdGVtc1RhYmxldFNtYWxsID0gY29scyxcbiAgICAgICAgICAgICAgICAgIGl0ZW1zTW9iaWxlID0gY29scyxcbiAgICAgICAgICAgICAgICAgIGFycm93cyA9IGFycm93cyA/ICdvbmhvdmVyJyA6ICdoaWRlJyxcbiAgICAgICAgICAgICAgICAgIGF1dG9wbGF5ID0gdGltZSAhPT0gZmFsc2UsXG4gICAgICAgICAgICAgICAgICBoYXMycm93cyA9IChyb3dzID09IDIpLFxuICAgICAgICAgICAgICAgICAgbG9vcCA9ICghbG9vcCksXG4gICAgICAgICAgICAgICAgICBvbkNoYW5nZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZmVlZC5hZnRlclJlc2l6ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgIH0sIDEpO1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIGFmdGVySW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHZhciAkc2VsZiA9IGpRdWVyeShmZWVkLmVsKTtcbiAgICAgICAgICAgICAgICAgICAgICAkc2VsZi5maW5kKCcuc2J5X2l0ZW1zX3dyYXAuc2J5X2Nhcm91c2VsJykuZmFkZUluKCk7XG4gICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAkc2VsZi5maW5kKCcuc2J5X2l0ZW1zX3dyYXAuc2J5X2Nhcm91c2VsIC5zYnlfaW5mbywgLnNieV9vd2wycm93LWl0ZW0sLnNieV9pdGVtc193cmFwLnNieV9jYXJvdXNlbCcpLmZhZGVJbigpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgfSwgMSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyICRuYXZFbGVtZW50c1dyYXBwZXIgPSAkc2VsZi5maW5kKCcuc2J5LW93bC1uYXYnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFycm93cyA9PT0gJ29uaG92ZXInKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChhcnJvd3MgPT09ICdiZWxvdycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciAkZG90cyA9ICRzZWxmLmZpbmQoJy5zYnktb3dsLWRvdHMnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHByZXYgPSAkc2VsZi5maW5kKCcuc2J5LW93bC1wcmV2JyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRuZXh0ID0gJHNlbGYuZmluZCgnLnNieS1vd2wtbmV4dCcpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkbmF2ID0gJHNlbGYuZmluZCgnLnNieS1vd2wtbmF2JyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRkb3QgPSAkc2VsZi5maW5kKCcuc2J5LW93bC1kb3QnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGhEb3RzID0gJGRvdC5sZW5ndGggKiAkZG90LmlubmVyV2lkdGgoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4V2lkdGggPSAkc2VsZi5pbm5lcldpZHRoKCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRwcmV2LmFmdGVyKCRkb3RzKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG5hdi5jc3MoJ3Bvc2l0aW9uJywgJ3JlbGF0aXZlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkbmV4dC5jc3MoJ3Bvc2l0aW9uJywgJ2Fic29sdXRlJykuY3NzKCd0b3AnLCAnLTZweCcpLmNzcygncmlnaHQnLCBNYXRoLm1heCgoLjUgKiAkbmF2LmlubmVyV2lkdGgoKSAtIC41ICogKHdpZHRoRG90cykgLSAkbmV4dC5pbm5lcldpZHRoKCkgLSA2KSwgMCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHByZXYuY3NzKCdwb3NpdGlvbicsICdhYnNvbHV0ZScpLmNzcygndG9wJywgJy02cHgnKS5jc3MoJ2xlZnQnLCBNYXRoLm1heCgoLjUgKiAkbmF2LmlubmVyV2lkdGgoKSAtIC41ICogKHdpZHRoRG90cykgLSAkcHJldi5pbm5lcldpZHRoKCkgLSA2KSwgMCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGFycm93cyA9PT0gJ2hpZGUnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkbmF2RWxlbWVudHNXcmFwcGVyLmFkZENsYXNzKCdoaWRlJykuaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICB9LCAxKTtcbiAgICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICAvL0Rpc2FibGUgbW9iaWxlIGxheW91dFxuICAgICAgICAgICAgICAgIGlmKCAkc2VsZi5oYXNDbGFzcygnc2J5X21vYl9jb2xfYXV0bycpICkge1xuICAgICAgICAgICAgICAgICAgICBpdGVtc1RhYmxldFNtYWxsID0gMjtcbiAgICAgICAgICAgICAgICAgICAgaWYoIHBhcnNlSW50KGNvbHMpICE9IDIgKSBpdGVtc01vYmlsZSA9IDE7XG4gICAgICAgICAgICAgICAgICAgIGlmKCBwYXJzZUludChjb2xzKSA9PSAyICkgaXRlbXNNb2JpbGUgPSAyOyAvL0lmIHRoZSBjb2xzIGFyZSBzZXQgdG8gMiB0aGVuIGRvbid0IGNoYW5nZSB0byAxIGNvbCBvbiBtb2JpbGVcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpdGVtc01vYmlsZSA9IGNvbHNtb2JpbGU7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdGhpcy5jYXJvdXNlbEFyZ3MgPSB7XG4gICAgICAgICAgICAgICAgICAgIGl0ZW1zOiBjb2xzLFxuICAgICAgICAgICAgICAgICAgICBsb29wOiBsb29wLFxuICAgICAgICAgICAgICAgICAgICByZXdpbmQ6ICFsb29wLFxuICAgICAgICAgICAgICAgICAgICBhdXRvcGxheTogYXV0b3BsYXksXG4gICAgICAgICAgICAgICAgICAgIGF1dG9wbGF5VGltZW91dDogTWF0aC5tYXgodGltZSwyMDAwKSxcbiAgICAgICAgICAgICAgICAgICAgYXV0b3BsYXlIb3ZlclBhdXNlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBuYXY6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG5hdlRleHQ6IFsnPHN2ZyBjbGFzcz1cInN2Zy1pbmxpbmUtLWZhIGZhLWNoZXZyb24tbGVmdCBmYS13LTEwXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgZGF0YS1mYS1wcm9jZXNzZWQ9XCJcIiBkYXRhLXByZWZpeD1cImZhXCIgZGF0YS1pY29uPVwiY2hldnJvbi1sZWZ0XCIgcm9sZT1cInByZXNlbnRhdGlvblwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDMyMCA1MTJcIj48cGF0aCBmaWxsPVwiY3VycmVudENvbG9yXCIgZD1cIk0zNC41MiAyMzkuMDNMMjI4Ljg3IDQ0LjY5YzkuMzctOS4zNyAyNC41Ny05LjM3IDMzLjk0IDBsMjIuNjcgMjIuNjdjOS4zNiA5LjM2IDkuMzcgMjQuNTIuMDQgMzMuOUwxMzEuNDkgMjU2bDE1NC4wMiAxNTQuNzVjOS4zNCA5LjM4IDkuMzIgMjQuNTQtLjA0IDMzLjlsLTIyLjY3IDIyLjY3Yy05LjM3IDkuMzctMjQuNTcgOS4zNy0zMy45NCAwTDM0LjUyIDI3Mi45N2MtOS4zNy05LjM3LTkuMzctMjQuNTcgMC0zMy45NHpcIj48L3BhdGg+PC9zdmc+JywgJzxzdmcgY2xhc3M9XCJzdmctaW5saW5lLS1mYSBmYS1jaGV2cm9uLXJpZ2h0IGZhLXctMTBcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBkYXRhLWZhLXByb2Nlc3NlZD1cIlwiIGRhdGEtcHJlZml4PVwiZmFcIiBkYXRhLWljb249XCJjaGV2cm9uLXJpZ2h0XCIgcm9sZT1cInByZXNlbnRhdGlvblwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDMyMCA1MTJcIj48cGF0aCBmaWxsPVwiY3VycmVudENvbG9yXCIgZD1cIk0yODUuNDc2IDI3Mi45NzFMOTEuMTMyIDQ2Ny4zMTRjLTkuMzczIDkuMzczLTI0LjU2OSA5LjM3My0zMy45NDEgMGwtMjIuNjY3LTIyLjY2N2MtOS4zNTctOS4zNTctOS4zNzUtMjQuNTIyLS4wNC0zMy45MDFMMTg4LjUwNSAyNTYgMzQuNDg0IDEwMS4yNTVjLTkuMzM1LTkuMzc5LTkuMzE3LTI0LjU0NC4wNC0zMy45MDFsMjIuNjY3LTIyLjY2N2M5LjM3My05LjM3MyAyNC41NjktOS4zNzMgMzMuOTQxIDBMMjg1LjQ3NSAyMzkuMDNjOS4zNzMgOS4zNzIgOS4zNzMgMjQuNTY4LjAwMSAzMy45NDF6XCI+PC9wYXRoPjwvc3ZnPiddLFxuICAgICAgICAgICAgICAgICAgICBkb3RzOiBwYWdpbmF0aW9uLFxuICAgICAgICAgICAgICAgICAgICBvd2wycm93OiBoYXMycm93cyxcbiAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2l2ZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgMDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zOiBpdGVtc01vYmlsZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIDQ4MDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zOiBpdGVtc1RhYmxldFNtYWxsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgNjQwOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbXM6IGNvbHNcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IG9uQ2hhbmdlLFxuICAgICAgICAgICAgICAgICAgICBvbkluaXRpYWxpemU6IGFmdGVySW5pdFxuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHRoaXMuc3RyaXBFbW9qaWh0bWwgPSBmdW5jdGlvbiAoJGVsKSB7XG4gICAgICAgICAgICAgICAgJGVsLmZpbmQoJy5lbW9qaScpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICQodGhpcykucmVwbGFjZVdpdGgoJCh0aGlzKS5hdHRyKCdhbHQnKSk7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gJGVsLmh0bWwoKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHRoaXMuYWZ0ZXJJdGVtUmV2ZWFsZWQgPSBmdW5jdGlvbigkaXRlbSkge1xuXG4gICAgICAgICAgICAgICAgdmFyIGZlZWQgPSB0aGlzO1xuICAgICAgICAgICAgICAgIGlmICgkaXRlbS5maW5kKCcuc2J5X2NhcHRpb24nKS5sZW5ndGggJiYgISAkaXRlbS5maW5kKCcuc2J5X2NhcHRpb24nKS5oYXNDbGFzcygnc2J5X2Z1bGxfY2FwdGlvbicpKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vRXhwYW5kIHBvc3RcbiAgICAgICAgICAgICAgICAgICAgdmFyICRjYXB0aW9uID0gJGl0ZW0uZmluZCgnLnNieV9pdGVtX2NhcHRpb25fd3JhcCAuc2J5X2NhcHRpb24nKSxcbiAgICAgICAgICAgICAgICAgICAgICAkaG92ZXJDYXB0aW9uID0gJGl0ZW0uZmluZCgnLnNieV9pdGVtX3ZpZGVvX3RodW1ibmFpbCAuc2J5X2NhcHRpb24nKSxcbiAgICAgICAgICAgICAgICAgICAgICB0ZXh0X2xpbWl0ID0gdHlwZW9mIGZlZWQuc2V0dGluZ3MuZ2VuZXJhbC5kZXNjcmlwdGlvbmxlbmd0aCAhPT0gJ3VuZGVmaW5lZCcgPyBwYXJzZUludChmZWVkLnNldHRpbmdzLmdlbmVyYWwuZGVzY3JpcHRpb25sZW5ndGgpIDogMTUwO1xuICAgICAgICAgICAgICAgICAgICBpZiAodGV4dF9saW1pdCA8IDEpIHRleHRfbGltaXQgPSA5OTk5OTtcbiAgICAgICAgICAgICAgICAgICAgLy9TZXQgdGhlIGZ1bGwgdGV4dCB0byBiZSB0aGUgY2FwdGlvbiAodXNlZCBpbiB0aGUgaW1hZ2UgYWx0KVxuXG4gICAgICAgICAgICAgICAgICAgIHZhciBjYXB0aW9uVGV4dCA9IHRoaXMuc3RyaXBFbW9qaWh0bWwoJGl0ZW0uZmluZCgnLnNieV9jYXB0aW9uJykuZmlyc3QoKSksXG4gICAgICAgICAgICAgICAgICAgICAgYnJDb3VudCA9IChjYXB0aW9uVGV4dC5tYXRjaCgvPGJyPi9nKSB8fCBbXSkubGVuZ3RoLFxuICAgICAgICAgICAgICAgICAgICAgIGJyQWRqdXN0ID0gKHR5cGVvZiBzYnlPcHRpb25zLmJyQWRqdXN0ID09PSAndW5kZWZpbmVkJyB8fCBzYnlPcHRpb25zLmJyQWRqdXN0ID09PSAnMScgfHwgc2J5T3B0aW9ucy5ickFkanVzdCA9PT0gdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIC8vIHJlcGxhY2UgZW1vamkgd2l0aCBhbHQgZm9yIG1vcmUgYWNjdXJhdGUgc2hvcnRlbmluZ1xuICAgICAgICAgICAgICAgICAgICBpZiAoYnJBZGp1c3QgJiYgYnJDb3VudCA+IDAgJiYgY2FwdGlvblRleHQuaW5kZXhPZignPGJyPicpIDwgdGV4dF9saW1pdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyICRzaXppbmdDYXB0aW9uID0gJGl0ZW0uZmluZCgnLnNieV9jYXB0aW9uJykuZmlyc3QoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcHRpb25XaWR0aCA9ICRzaXppbmdDYXB0aW9uLndpZHRoKCkgPiAyMCA/ICRzaXppbmdDYXB0aW9uLndpZHRoKCkgOiAkaXRlbS53aWR0aCgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBmb250U2l6ZSA9ICRzaXppbmdDYXB0aW9uLmNzcygnZm9udC1zaXplJyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNoYXJhY3RlcnNQZXJMaW5lID0gY2FwdGlvbldpZHRoIC8gcGFyc2VJbnQoZm9udFNpemUpICogMS44NSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4Q2hhcnNQZXJMaW5lID0gTWF0aC5mbG9vcihjaGFyYWN0ZXJzUGVyTGluZSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHByb2plY3RlZE1heExpbmVzID0gTWF0aC5jZWlsKHRleHRfbGltaXQgLyBjaGFyYWN0ZXJzUGVyTGluZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzcGxpdENhcHRpb24gPSBjYXB0aW9uVGV4dC5zcGxpdCgnPGJyPicpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lc0NvbnN1bWVkID0gMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYWRqdXN0ZWRUZXh0TGltaXQgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5LmVhY2goc3BsaXRDYXB0aW9uLCBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbGluZXNMZWZ0ID0gcHJvamVjdGVkTWF4TGluZXMgLSBsaW5lc0NvbnN1bWVkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChsaW5lc0xlZnQgPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0aGlzTGluZXNDb25zdW1lZCA9IE1hdGgubWF4KDEsIE1hdGguY2VpbCh0aGlzLmxlbmd0aCAvIGNoYXJhY3RlcnNQZXJMaW5lKSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRqdXN0ZWRUZXh0TGltaXQgKz0gTWF0aC5taW4odGhpcy5sZW5ndGggKyA0LCBsaW5lc0xlZnQgKiBtYXhDaGFyc1BlckxpbmUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lc0NvbnN1bWVkICs9IHRoaXNMaW5lc0NvbnN1bWVkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0X2xpbWl0ID0gYWRqdXN0ZWRUZXh0TGltaXQ7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICB2YXIgc2hvcnRfdGV4dCA9IGNhcHRpb25UZXh0LnN1YnN0cmluZygwLCB0ZXh0X2xpbWl0KTtcbiAgICAgICAgICAgICAgICAgICAgc2hvcnRfdGV4dCA9IGNhcHRpb25UZXh0Lmxlbmd0aCA+IHRleHRfbGltaXQgPyBzaG9ydF90ZXh0LnN1YnN0cigwLCBNYXRoLm1pbihzaG9ydF90ZXh0Lmxlbmd0aCwgc2hvcnRfdGV4dC5sYXN0SW5kZXhPZihcIiBcIikpKSA6IHNob3J0X3RleHQ7XG5cblxuICAgICAgICAgICAgICAgICAgICAvL0N1dCB0aGUgdGV4dCBiYXNlZCBvbiBsaW1pdHMgc2V0XG4gICAgICAgICAgICAgICAgICAgIGlmICgkY2FwdGlvbi5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICRjYXB0aW9uLmh0bWwoc2J5TGlua2lmeShzaG9ydF90ZXh0KSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2hvcnRfdGV4dCA9PT0gY2FwdGlvblRleHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY2FwdGlvbi5uZXh0KCcuc2J5X2V4cGFuZCcpLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICgkaG92ZXJDYXB0aW9uLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGhvdmVyQ2FwdGlvblRleHQgPSBzaG9ydF90ZXh0O1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNob3J0X3RleHQgIT09IGNhcHRpb25UZXh0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaG92ZXJDYXB0aW9uVGV4dCArPSAnPHNwYW4gY2xhc3M9XCJzYnlfbW9yZVwiPi4uLjwvc3Bhbj4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgJGhvdmVyQ2FwdGlvbi5odG1sKGhvdmVyQ2FwdGlvblRleHQpO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgLy9TaG93IHRoZSAnU2VlIE1vcmUnIGxpbmsgaWYgbmVlZGVkXG4gICAgICAgICAgICAgICAgICAgIGlmIChjYXB0aW9uVGV4dC5sZW5ndGggPiB0ZXh0X2xpbWl0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkaXRlbS5maW5kKCcuc2J5X2V4cGFuZCcpLnNob3coKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvL0NsaWNrIGZ1bmN0aW9uXG4gICAgICAgICAgICAgICAgICAgICRpdGVtLmZpbmQoJy5zYnlfZXhwYW5kIGEnKS5vZmYoJ2NsaWNrJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciAkZXhwYW5kID0galF1ZXJ5KHRoaXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgJGNhcHRpb24gPSB0eXBlb2YgJGNhcHRpb24gIT09ICd1bmRlZmluZWQnID8gJGNhcHRpb24gOiAkaXRlbS5maW5kKCcuc2J5X2luZm8gLnNieV9jYXB0aW9uJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXB0aW9uVGV4dCA9IHR5cGVvZiBjYXB0aW9udGV4dCAhPT0gJ3VuZGVmaW5lZCcgPyBjYXB0aW9uVGV4dCA6ICRpdGVtLmZpbmQoJy5zYnlfaXRlbV92aWRlb190aHVtYm5haWwnKS5hdHRyKCdkYXRhLXRpdGxlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGl0ZW0uaGFzQ2xhc3MoJ3NieV9jYXB0aW9uX2Z1bGwnKSAmJiB0eXBlb2Ygc2hvcnRfdGV4dCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY2FwdGlvbi5odG1sKHNob3J0X3RleHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRpdGVtLnJlbW92ZUNsYXNzKCdzYnlfY2FwdGlvbl9mdWxsJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjYXB0aW9uLmh0bWwoc2J5TGlua2lmeShjYXB0aW9uVGV4dCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRpdGVtLmFkZENsYXNzKCdzYnlfY2FwdGlvbl9mdWxsJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBmZWVkLmFmdGVyUmVzaXplKCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHRoaXMuc2V0VXBDVEEoJGl0ZW0pO1xuXG4gICAgICAgICAgICAgICAgLy9QaG90byBsaW5rc1xuICAgICAgICAgICAgICAgIC8vSWYgbGlnaHRib3ggaXMgZGlzYWJsZWRcbiAgICAgICAgICAgICAgICB2YXIgZGlzYWJsZWxpZ2h0Ym94ID0gdHlwZW9mIGZlZWQuc2V0dGluZ3MuZ2VuZXJhbC5kaXNhYmxlbGlnaHRib3ggIT09ICd1bmRlZmluZWQnID8gZmVlZC5zZXR0aW5ncy5nZW5lcmFsLmRpc2FibGVsaWdodGJveCA6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgY2FwdGlvbmxpbmtzID0gdHlwZW9mIGZlZWQuc2V0dGluZ3MuZ2VuZXJhbC5jYXB0aW9ubGlua3MgIT09ICd1bmRlZmluZWQnID8gZmVlZC5zZXR0aW5ncy5nZW5lcmFsLmNhcHRpb25saW5rcyA6IGZhbHNlO1xuICAgICAgICAgICAgICAgIGlmKCBkaXNhYmxlbGlnaHRib3ggfHwgY2FwdGlvbmxpbmtzICl7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhcHRpb25saW5rcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gc2J5VXJsRGV0ZWN0KHRleHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdXJsUmVnZXggPSAvaHR0cHM/OlxcL1xcLyh3d3dcXC4pP1stYS16QS1aMC05QDolLl9cXCt+Iz1dezIsMjU2fVxcLlthLXpdezIsNn1cXGIoWy1hLXpBLVowLTlAOiVfXFwrLn4jPyYvLz1dKikvZztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGV4dC5tYXRjaCh1cmxSZWdleCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjYXAgPSAnJztcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgJGl0ZW0uZmluZCgnaW1nJykuYXR0cignYWx0JykgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FwID0gJGl0ZW0uZmluZCgnaW1nJykuYXR0cignYWx0Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiAkaXRlbS5maW5kKCd2aWRlbycpLmF0dHIoJ2FsdCcpICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcCA9ICRpdGVtLmZpbmQoJ3ZpZGVvJykuYXR0cignYWx0Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB1cmwgPSBzYnlVcmxEZXRlY3QoY2FwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKHVybCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRpdGVtLmZpbmQoJ2EnKS5hdHRyKCdocmVmJywgdXJsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAkaXRlbS5maW5kKCcuc2J5X2xpbmsnKS5hZGRDbGFzcygnc2J5X2Rpc2FibGVfbGlnaHRib3gnKTtcbiAgICAgICAgICAgICAgICAgICAgLy9JZiBsaWdodGJveCBpcyBlbmFibGVkIGFkZCBsaWdodGJveCBsaW5rc1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAgICAgICAgICAgdmFyICRzYnlfcGhvdG9fd3JhcCA9ICRpdGVtLmZpbmQoJy5zYnlfcGhvdG9fd3JhcCcpLFxuICAgICAgICAgICAgICAgICAgICAgICRzYnlfbGluayA9ICRzYnlfcGhvdG9fd3JhcC5maW5kKCcuc2J5X2xpbmsnKTtcbiAgICAgICAgICAgICAgICAgICAgZmVlZE9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBob3ZlcmVmZmVjdDogJ3RydWUnXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIGlmKGZlZWRPcHRpb25zLmhvdmVyZWZmZWN0ID09ICdub25lJyl7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL2xhdW5jaCBsaWdodGJveCBvbiBjbGlja1xuICAgICAgICAgICAgICAgICAgICAgICAgJHNieV9saW5rLmNzcygnYmFja2dyb3VuZCcsICdub25lJykuc2hvdygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgJHNieV9saW5rLmZpbmQoJyonKS5oaWRlKCkuZW5kKCkuZmluZCgnLnNieV9saW5rX2FyZWEnKS5zaG93KCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkc2J5X3Bob3RvX3dyYXAub24oJ21vdXNlZW50ZXIgbW91c2VsZWF2ZScsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2goZS50eXBlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ21vdXNlZW50ZXInOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGl0ZW0uYWRkQ2xhc3MoJ3NieV9hbmltYXRlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnbW91c2VsZWF2ZSc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkaXRlbS5yZW1vdmVDbGFzcygnc2J5X2FuaW1hdGUnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHZhciB2aWRlb0lEID0gdHlwZW9mICRpdGVtLmF0dHIoJ2RhdGEtdmlkZW8taWQnKSAhPT0gJ3VuZGVmaW5lZCcgPyAkaXRlbS5hdHRyKCdkYXRhLXZpZGVvLWlkJykgOiAkaXRlbS5maW5kKCcuc2J5X3ZpZGVvX3RodW1ibmFpbCcpLmF0dHIoJ2RhdGEtdmlkZW8taWQnKTtcbiAgICAgICAgICAgICAgICB0aGlzLm1vc3RSZWNlbnRseUxvYWRlZFBvc3RzLnB1c2godmlkZW9JRCk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICB0aGlzLmFmdGVyRmVlZFNldCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGhpcy5jYXJvdXNlbEFyZ3MgIT09ICd1bmRlZmluZWQnICkge1xuICAgICAgICAgICAgICAgICAgICAkKHRoaXMuZWwpLmZpbmQoJy5zYnlfY2Fyb3VzZWwnKS5zYnlPd2xDYXJvdXNlbCh0aGlzLmNhcm91c2VsQXJncyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwYXJzZUludCh0aGlzLnNldHRpbmdzLmdlbmVyYWwuY2Fyb3VzZWxbNV0pID09PSAyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMuZWwpLmFkZENsYXNzKCdzYnlfY2Fyb3VzZWxfMl9yb3cnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgdGhpcy5zZXRVcENUQSA9IGZ1bmN0aW9uKCRpdGVtLHZpZGVvSUQpIHtcbiAgICAgICAgICAgICAgICAvL3dpbmRvdy5zYnkuY3Rhc1xuXG4gICAgICAgICAgICAgICAgdmFyIHZpZGVvSUQgPSB0eXBlb2YgdmlkZW9JRCAhPT0gJ3VuZGVmaW5lZCcgPyB2aWRlb0lEIDogJGl0ZW0uZmluZCgnLnNieV9pdGVtX3ZpZGVvX3RodW1ibmFpbCcpLmF0dHIoJ2RhdGEtdmlkZW8taWQnKSxcbiAgICAgICAgICAgICAgICAgIHRleHQgPSB0eXBlb2YgJGl0ZW0uZmluZCgnLnNieV9pdGVtX3ZpZGVvX3RodW1ibmFpbCcpLmF0dHIoJ2RhdGEtdGl0bGUnKSAhPT0gJ3VuZGVmaW5lZCcgPyAkaXRlbS5maW5kKCcuc2J5X2l0ZW1fdmlkZW9fdGh1bWJuYWlsJykuYXR0cignZGF0YS10aXRsZScpIDogJycsXG4gICAgICAgICAgICAgICAgICBjdGFJbkNhcHRpb24gPSB3aW5kb3cuc2J5LmN0YURldGVjdCh0ZXh0KTtcblxuICAgICAgICAgICAgICAgIGlmIChjdGFJbkNhcHRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LnNieS5jdGFzW3ZpZGVvSURdID0gY3RhSW5DYXB0aW9uO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5zYnkuY3Rhc1t2aWRlb0lEXSA9IHRoaXMuZ2V0RGVmYXVsdENUQSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHRoaXMuZ2V0RGVmYXVsdENUQSA9IGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnNldHRpbmdzLmdlbmVyYWwuY3RhICE9PSAndW5kZWZpbmVkJyAmJiB0aGlzLnNldHRpbmdzLmdlbmVyYWwuY3RhLnR5cGUgIT09ICdkZWZhdWx0Jykge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5zZXR0aW5ncy5nZW5lcmFsLmN0YS50eXBlID09PSAnbGluaycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6ICdsaW5rJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IHRoaXMuc2V0dGluZ3MuZ2VuZXJhbC5jdGEuZGVmYXVsdExpbmssXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogdGhpcy5zZXR0aW5ncy5nZW5lcmFsLmN0YS5kZWZhdWx0VGV4dCxcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6ICdyZWxhdGVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWxhdGVkOiB0aGlzLnNldHRpbmdzLmdlbmVyYWwuY3RhLmRlZmF1bHRQb3N0c1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHRoaXMuYWZ0ZXJSZXNpemUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNldEltYWdlSGVpZ2h0KCk7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRJbWFnZVJlc29sdXRpb24oKTtcbiAgICAgICAgICAgICAgICB0aGlzLm1heWJlUmFpc2VJbWFnZVJlc29sdXRpb24oKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNldEltYWdlU2l6ZUNsYXNzKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRBbGxDVEFEaW1lbnNpb25zKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5zaXplUGxheWVyKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5zaXplSXRlbXMoKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHRoaXMuc2V0QWxsQ1RBRGltZW5zaW9ucyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICQuZWFjaCh0aGlzLkNUQSwgZnVuY3Rpb24oaW5kZXgsIENUQU9iaikge1xuICAgICAgICAgICAgICAgICAgICBpZiAoQ1RBT2JqLmlzSW5pdGlhbGl6ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIENUQU9iai5zZXRDVEFTdHlsZXMoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgdGhpcy5hZnRlclNlbmRDaGVja1dQUG9zdHNUb1NlcnZlciA9IGZ1bmN0aW9uKHJlc3BvbnNlKXtcbiAgICAgICAgICAgICAgICB2YXIgJHNlbGYgPSAkKHRoaXMuZWwpO1xuXG4gICAgICAgICAgICAgICAgJHNlbGYuZmluZCgnLnNieV9pdGVtJykuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiByZXNwb25zZVsgJCh0aGlzKS5hdHRyKCdkYXRhLXZpZGVvLWlkJykgXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkYXRhID0gcmVzcG9uc2VbICQodGhpcykuYXR0cignZGF0YS12aWRlby1pZCcpIF07XG4gICAgICAgICAgICAgICAgICAgICAgICAvL3NieV92aWV3c19jb3VudFxuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5maW5kKCcuc2J5X3ZpZXdfY291bnQnKS50ZXh0KGRhdGEuc2J5X3ZpZXdfY291bnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5maW5kKCcuc2J5X2NvbW1lbnRfY291bnQnKS50ZXh0KGRhdGEuc2J5X2NvbW1lbnRfY291bnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5maW5kKCcuc2J5X2xpa2VfY291bnQnKS50ZXh0KGRhdGEuc2J5X2xpa2VfY291bnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEuc2J5X2xpdmVfYnJvYWRjYXN0LmJyb2FkY2FzdF90eXBlICE9PSAnbm9uZScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmZpbmQoJy5zYnlfbHNfbWVzc2FnZScpLnRleHQoZGF0YS5zYnlfbGl2ZV9icm9hZGNhc3QubGl2ZV9zdHJlYW1pbmdfc3RyaW5nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmZpbmQoJy5zYnlfZGF0ZScpLmh0bWwoZGF0YS5zYnlfbGl2ZV9icm9hZGNhc3QubGl2ZV9zdHJlYW1pbmdfZGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRhdGEuc2J5X2xpdmVfYnJvYWRjYXN0LmxpdmVfc3RyZWFtaW5nX3RpbWVzdGFtcCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmF0dHIoJ2RhdGEtbGl2ZS1kYXRlJyxkYXRhLnNieV9saXZlX2Jyb2FkY2FzdC5saXZlX3N0cmVhbWluZ190aW1lc3RhbXApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkYXRhLnNieV9kZXNjcmlwdGlvbiAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmZpbmQoJy5zYnlfaXRlbV92aWRlb190aHVtYm5haWwnKS5hdHRyKCdkYXRhLXRpdGxlJyxkYXRhLnNieV9kZXNjcmlwdGlvbiApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAkc2VsZi5maW5kKCcuc2J5X3BsYXllcl9pdGVtJykuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiByZXNwb25zZVsgJCh0aGlzKS5maW5kKCcuc2J5X3ZpZGVvX3RodW1ibmFpbCcpLmF0dHIoJ2RhdGEtdmlkZW8taWQnKSBdICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGEgPSByZXNwb25zZVsgJCh0aGlzKS5maW5kKCcuc2J5X3ZpZGVvX3RodW1ibmFpbCcpLmF0dHIoJ2RhdGEtdmlkZW8taWQnKSBdO1xuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5maW5kKCcuc2J5X3ZpZXdfY291bnQnKS50ZXh0KGRhdGEuc2J5X3ZpZXdfY291bnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5maW5kKCcuc2J5X2NvbW1lbnRfY291bnQnKS50ZXh0KGRhdGEuc2J5X2NvbW1lbnRfY291bnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5maW5kKCcuc2J5X2xpa2VfY291bnQnKS50ZXh0KGRhdGEuc2J5X2xpa2VfY291bnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEuc2J5X2xpdmVfYnJvYWRjYXN0LmJyb2FkY2FzdF90eXBlICE9PSAnbm9uZScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmZpbmQoJy5zYnlfbHNfbWVzc2FnZScpLnRleHQoZGF0YS5zYnlfbGl2ZV9icm9hZGNhc3QubGl2ZV9zdHJlYW1pbmdfc3RyaW5nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmZpbmQoJy5zYnlfZGF0ZScpLmh0bWwoZGF0YS5zYnlfbGl2ZV9icm9hZGNhc3QubGl2ZV9zdHJlYW1pbmdfZGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRhdGEuc2J5X2xpdmVfYnJvYWRjYXN0LmxpdmVfc3RyZWFtaW5nX3RpbWVzdGFtcCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmF0dHIoJ2RhdGEtbGl2ZS1kYXRlJyxkYXRhLnNieV9saXZlX2Jyb2FkY2FzdC5saXZlX3N0cmVhbWluZ190aW1lc3RhbXApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICB2YXIgZXZ0ID0galF1ZXJ5LkV2ZW50KCdzYnlhZnRlcmNoZWNrcG9zdHMnKTtcbiAgICAgICAgICAgICAgICBldnQuZmVlZCA9IHdpbmRvdy5zYnkuZmVlZHNbaW5kZXhdO1xuICAgICAgICAgICAgICAgIGV2dC5yZXNwb25zZSA9IHJlc3BvbnNlO1xuICAgICAgICAgICAgICAgIGpRdWVyeSh3aW5kb3cpLnRyaWdnZXIoZXZ0KTtcblxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgdGhpcy5hZnRlclN0YXRlQ2hhbmdlID0gZnVuY3Rpb24ocGxheWVySUQsdmlkZW9JRCxkYXRhLCRwbGF5ZXIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLkNUQVtwbGF5ZXJJRF0udG9nZ2xlQ1RBKHZpZGVvSUQsZGF0YS5kYXRhLCRwbGF5ZXIpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgdGhpcy5jaGFuZ2VQbGF5ZXJJbmZvID0gZnVuY3Rpb24oJG5ld0l0ZW0pIHtcbiAgICAgICAgICAgICAgICB2YXIgJHNlbGYgPSAkKHRoaXMuZWwpO1xuICAgICAgICAgICAgICAgICRzZWxmLmZpbmQoJy5zYnlfcGxheWVyX2l0ZW0nKS5maW5kKCcuc2J5X2luZm8nKS5yZXBsYWNlV2l0aChcbiAgICAgICAgICAgICAgICAgICRuZXdJdGVtLmZpbmQoJy5zYnlfaW5mbycpLmNsb25lKHRydWUsdHJ1ZSlcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIC8vc2J5X2luZm9cbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHRoaXMubWF5YmVBZGRDVEEgPSBmdW5jdGlvbihwbGF5ZXJJRCwkZWwpIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRoaXMuQ1RBW3BsYXllcklEXSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5DVEFbcGxheWVySURdID0gbmV3IFNieUNUQShwbGF5ZXJJRCx0aGlzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICAgICAgU2J5RmVlZFByby5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKFNieUZlZWQucHJvdG90eXBlKTtcblxuICAgICAgICBmdW5jdGlvbiBTYnlMaWdodGJveEJ1aWxkZXIoKSB7fVxuXG4gICAgICAgIFNieUxpZ2h0Ym94QnVpbGRlci5wcm90b3R5cGUgPSB7XG4gICAgICAgICAgICBnZXREYXRhOiBmdW5jdGlvbihhKXtcbiAgICAgICAgICAgICAgICB2YXIgY2xvc2VzdEZlZWRJbmRleCA9IHBhcnNlSW50KGEuY2xvc2VzdCgnLnNiX3lvdXR1YmUnKS5hdHRyKCdkYXRhLXNieS1pbmRleCcpLTEpO1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIGZlZWRJbmRleCA6IGNsb3Nlc3RGZWVkSW5kZXgsXG4gICAgICAgICAgICAgICAgICAgIGxpbms6IGEuYXR0cihcImhyZWZcIiksXG4gICAgICAgICAgICAgICAgICAgIHZpZGVvVGl0bGU6IHR5cGVvZiBhLmF0dHIoXCJkYXRhLXZpZGVvLXRpdGxlXCIpICE9PSAndW5kZWZpbmVkJyA/IGEuYXR0cihcImRhdGEtdmlkZW8tdGl0bGVcIikgOiAnWW91VHViZSBWaWRlbycsXG4gICAgICAgICAgICAgICAgICAgIHZpZGVvOiBhLmF0dHIoXCJkYXRhLXZpZGVvLWlkXCIpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRlbXBsYXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiPGRpdiBpZD0nc2J5X2xpZ2h0Ym94T3ZlcmxheScgY2xhc3M9J3NieV9saWdodGJveE92ZXJsYXknPjwvZGl2PlwiK1xuICAgICAgICAgICAgICAgICAgXCI8ZGl2IGlkPSdzYnlfbGlnaHRib3gnIGNsYXNzPSdzYnlfbGlnaHRib3gnPlwiK1xuICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzYnlfbGItb3V0ZXJDb250YWluZXInPlwiK1xuICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzYnlfbGItY29udGFpbmVyJz5cIitcbiAgICAgICAgICAgICAgICAgIFwiPGltZyBjbGFzcz0nc2J5X2xiLWltYWdlJyBhbHQ9J0xpZ2h0Ym94IGltYWdlIHBsYWNlaG9sZGVyJyBzcmM9JycgLz5cIitcbiAgICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc2J5X2xiLXBsYXllciBzYnlfbGItcGxheWVyLXBsYWNlaG9sZGVyJyBpZD0nc2J5X2xiLXBsYXllcic+PC9kaXY+XCIgK1xuICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzYnlfbGItbmF2Jz48YSBjbGFzcz0nc2J5X2xiLXByZXYnIGhyZWY9JyMnID48cCBjbGFzcz0nc2J5LXNjcmVlbnJlYWRlcic+UHJldmlvdXMgU2xpZGU8L3A+PHNwYW4+PC9zcGFuPjwvYT48YSBjbGFzcz0nc2J5X2xiLW5leHQnIGhyZWY9JyMnID48cCBjbGFzcz0nc2J5LXNjcmVlbnJlYWRlcic+TmV4dCBTbGlkZTwvcD48c3Bhbj48L3NwYW4+PC9hPjwvZGl2PlwiK1xuICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzYnlfbGItbG9hZGVyJz48YSBjbGFzcz0nc2J5X2xiLWNhbmNlbCc+PC9hPjwvZGl2PlwiK1xuICAgICAgICAgICAgICAgICAgXCI8L2Rpdj5cIitcbiAgICAgICAgICAgICAgICAgIFwiPC9kaXY+XCIrXG4gICAgICAgICAgICAgICAgICBcIjxkaXYgY2xhc3M9J3NieV9sYi1kYXRhQ29udGFpbmVyJz5cIitcbiAgICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc2J5X2xiLWRhdGEnPlwiK1xuICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzYnlfbGItZGV0YWlscyc+XCIrXG4gICAgICAgICAgICAgICAgICBcIjxkaXYgY2xhc3M9J3NieV9sYi1jYXB0aW9uJz48L2Rpdj5cIitcbiAgICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc2J5X2xiLWluZm8nPlwiK1xuICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzYnlfbGItbnVtYmVyJz48L2Rpdj5cIitcbiAgICAgICAgICAgICAgICAgIFwiPC9kaXY+XCIrXG4gICAgICAgICAgICAgICAgICBcIjwvZGl2PlwiK1xuICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzYnlfbGItY2xvc2VDb250YWluZXInPjxhIGNsYXNzPSdzYnlfbGItY2xvc2UnPjwvYT48L2Rpdj5cIitcbiAgICAgICAgICAgICAgICAgIFwiPC9kaXY+XCIrXG4gICAgICAgICAgICAgICAgICBcIjwvZGl2PlwiK1xuICAgICAgICAgICAgICAgICAgXCI8L2Rpdj5cIjtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBiZWZvcmVQbGF5ZXJTZXR1cDogZnVuY3Rpb24oJGxpZ2h0Ym94LGRhdGEsaW5kZXgsYWxidW0sZmVlZCl7XG5cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhZnRlclBsYXllclNldHVwOiBmdW5jdGlvbiAoJGxpZ2h0Ym94LGRhdGEsaW5kZXgsYWxidW0pIHtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhZnRlclJlc2l6ZTogZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICB2YXIgcGxheWVySGVpZ2h0ID0gJCgnI3NieV9saWdodGJveCAuc2J5X2xiLXBsYXllcicpLmhlaWdodCgpO1xuXG4gICAgICAgICAgICAgICAgaWYgKHBsYXllckhlaWdodCA+IDEwMCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgaGVpZ2h0RGlmID0gJCgnI3NieV9saWdodGJveCAuc2J5X2xiLW91dGVyQ29udGFpbmVyJykuaGVpZ2h0KCkgLSBwbGF5ZXJIZWlnaHQ7XG4gICAgICAgICAgICAgICAgICAgIGlmIChoZWlnaHREaWYgPiAxMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJCgnI3NieV9saWdodGJveCAuc2J5X2xiLXBsYXllcicpLmNzcygndG9wJyxoZWlnaHREaWYvMik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcGF1c2VQbGF5ZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHdpbmRvdy5zYnlMaWdodGJveFBsYXllciA9PT0gJ3VuZGVmaW5lZCdcbiAgICAgICAgICAgICAgICAgICYmIHR5cGVvZiBZVCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIFlULmdldCgnc2J5X2xiLXBsYXllcicpICE9PSAndW5kZWZpbmVkJ1xuICAgICAgICAgICAgICAgICAgJiYgdHlwZW9mIFlULmdldCgnc2J5X2xiLXBsYXllcicpLnBhdXNlVmlkZW8gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgWVQuZ2V0KCdzYnlfbGItcGxheWVyJykucGF1c2VWaWRlbygpXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2Ygd2luZG93LnNieUxpZ2h0Ym94UGxheWVyICE9PSAndW5kZWZpbmVkJ1xuICAgICAgICAgICAgICAgICAgJiYgdHlwZW9mIHdpbmRvdy5zYnlMaWdodGJveFBsYXllci5wYXVzZVZpZGVvID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5zYnlMaWdodGJveFBsYXllci5wYXVzZVZpZGVvKCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgU2J5TGlnaHRib3hCdWlsZGVyUHJvLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoU2J5TGlnaHRib3hCdWlsZGVyLnByb3RvdHlwZSk7XG5cbiAgICAgICAgZnVuY3Rpb24gU2J5TGlnaHRib3hCdWlsZGVyUHJvKCkge1xuICAgICAgICAgICAgU2J5TGlnaHRib3hCdWlsZGVyLmNhbGwodGhpcyk7XG5cbiAgICAgICAgICAgIHRoaXMuZ2V0RGF0YSA9IGZ1bmN0aW9uKGEpe1xuICAgICAgICAgICAgICAgIHZhciBjbG9zZXN0RmVlZEluZGV4ID0gcGFyc2VJbnQoYS5jbG9zZXN0KCcuc2JfeW91dHViZScpLmF0dHIoJ2RhdGEtc2J5LWluZGV4JyktMSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgZmVlZEluZGV4IDogY2xvc2VzdEZlZWRJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgbGluazogYS5hdHRyKFwiaHJlZlwiKSxcbiAgICAgICAgICAgICAgICAgICAgdmlkZW86IGEuYXR0cihcImRhdGEtdmlkZW8taWRcIiksXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBhLmF0dHIoXCJkYXRhLXRpdGxlXCIpLFxuICAgICAgICAgICAgICAgICAgICB2aWRlb1RpdGxlOiB0eXBlb2YgYS5hdHRyKFwiZGF0YS12aWRlby10aXRsZVwiKSAhPT0gJ3VuZGVmaW5lZCcgPyBhLmF0dHIoXCJkYXRhLXZpZGVvLXRpdGxlXCIpIDogJ1lvdVR1YmUgVmlkZW8nLFxuICAgICAgICAgICAgICAgICAgICBhdmF0YXI6IGEuYXR0cihcImRhdGEtYXZhdGFyXCIpLFxuICAgICAgICAgICAgICAgICAgICB1c2VyOiBhLmF0dHIoXCJkYXRhLXVzZXJcIiksXG4gICAgICAgICAgICAgICAgICAgIGNoYW5uZWxVUkw6IGEuYXR0cihcImRhdGEtdXJsXCIpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgdGhpcy50ZW1wbGF0ZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcIjxkaXYgaWQ9J3NieV9saWdodGJveE92ZXJsYXknIGNsYXNzPSdzYnlfbGlnaHRib3hPdmVybGF5Jz48L2Rpdj5cIitcbiAgICAgICAgICAgICAgICAgIFwiPGRpdiBpZD0nc2J5X2xpZ2h0Ym94JyBjbGFzcz0nc2J5X2xpZ2h0Ym94Jz5cIitcbiAgICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc2J5X2xiLW91dGVyQ29udGFpbmVyJz5cIitcbiAgICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc2J5X2xiLWNvbnRhaW5lcic+XCIrXG4gICAgICAgICAgICAgICAgICBcIjxkaXYgY2xhc3M9J3NieV9sYl92aWRlb190aHVtYm5haWxfd3JhcCc+XCIrXG4gICAgICAgICAgICAgICAgICBcIjxzcGFuIGNsYXNzPSdzYnlfbGJfdmlkZW9fdGh1bWJuYWlsJz5cIiArXG4gICAgICAgICAgICAgICAgICBcIjxpbWcgY2xhc3M9J3NieV9sYi1pbWFnZScgYWx0PSdMaWdodGJveCBpbWFnZSBwbGFjZWhvbGRlcicgc3JjPScnIC8+XCIrXG4gICAgICAgICAgICAgICAgICBcIjxkaXYgY2xhc3M9J3NieV9sYi1wbGF5ZXInIGlkPSdzYnlfbGItcGxheWVyJz48L2Rpdj5cIiArXG4gICAgICAgICAgICAgICAgICBcIjwvc3Bhbj5cIiArXG4gICAgICAgICAgICAgICAgICBcIjwvZGl2PlwiICtcblxuICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzYnlfbGItbmF2Jz48YSBjbGFzcz0nc2J5X2xiLXByZXYnIGhyZWY9JyMnID48cCBjbGFzcz0nc2J5LXNjcmVlbnJlYWRlcic+UHJldmlvdXMgU2xpZGU8L3A+PHNwYW4+PC9zcGFuPjwvYT48YSBjbGFzcz0nc2J5X2xiLW5leHQnIGhyZWY9JyMnID48cCBjbGFzcz0nc2J5LXNjcmVlbnJlYWRlcic+TmV4dCBTbGlkZTwvcD48c3Bhbj48L3NwYW4+PC9hPjwvZGl2PlwiK1xuICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzYnlfbGItbG9hZGVyJz48YSBjbGFzcz0nc2J5X2xiLWNhbmNlbCc+PC9hPjwvZGl2PlwiK1xuICAgICAgICAgICAgICAgICAgXCI8L2Rpdj5cIitcbiAgICAgICAgICAgICAgICAgIFwiPC9kaXY+XCIrXG4gICAgICAgICAgICAgICAgICBcIjxkaXYgY2xhc3M9J3NieV9sYi1kYXRhQ29udGFpbmVyJz5cIitcbiAgICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc2J5X2xiLWRhdGEnPlwiK1xuICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzYnlfbGItZGV0YWlscyc+XCIrXG4gICAgICAgICAgICAgICAgICBcIjxkaXYgY2xhc3M9J3NieV9sYi1jYXB0aW9uJz48L2Rpdj5cIitcbiAgICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc2J5X2xiLWluZm8nPlwiK1xuICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzYnlfbGItbnVtYmVyJz48L2Rpdj5cIitcbiAgICAgICAgICAgICAgICAgIFwiPC9kaXY+XCIrXG4gICAgICAgICAgICAgICAgICBcIjwvZGl2PlwiK1xuICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzYnlfbGItY2xvc2VDb250YWluZXInPjxhIGNsYXNzPSdzYnlfbGItY2xvc2UnPjwvYT48L2Rpdj5cIitcbiAgICAgICAgICAgICAgICAgIFwiPC9kaXY+XCIrXG4gICAgICAgICAgICAgICAgICBcIjwvZGl2PlwiK1xuICAgICAgICAgICAgICAgICAgXCI8L2Rpdj5cIjtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHRoaXMuYmVmb3JlUGxheWVyU2V0dXAgPSBmdW5jdGlvbigkbGlnaHRib3gsZGF0YSxpbmRleCxhbGJ1bSxmZWVkKXtcbiAgICAgICAgICAgICAgICBpZiAoISRsaWdodGJveC5maW5kKCcuc2J5X2N0YV9pdGVtc193cmFwcycpLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAkbGlnaHRib3guZmluZCgnLnNieV9sYl92aWRlb190aHVtYm5haWxfd3JhcCcpLmFwcGVuZCgkKGZlZWQuZWwpLmZpbmQoJy5zYnlfY3RhX2l0ZW1zX3dyYXBzJykuY2xvbmUoKSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgJGxpZ2h0Ym94LmZpbmQoJy5zYnlfY3RhX2l0ZW1zX3dyYXBzJykucmVwbGFjZVdpdGgoJChmZWVkLmVsKS5maW5kKCcuc2J5X2N0YV9pdGVtc193cmFwcycpLmNsb25lKCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHRoaXMuYWZ0ZXJQbGF5ZXJTZXR1cCA9IGZ1bmN0aW9uKCRsaWdodGJveCxkYXRhLGluZGV4LGFsYnVtKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5hdmFpbGFibGVBdmF0YXJVcmxzID0ge307XG4gICAgICAgICAgICAgICAgLy9BZGQgbGlua3MgdG8gdGhlIGNhcHRpb25cbiAgICAgICAgICAgICAgICB2YXIgc2J5TGlnaHRib3hDYXB0aW9uID0gZGF0YS50aXRsZSxcbiAgICAgICAgICAgICAgICAgIGhhc2hSZWdleCA9IC8oXnxcXHMpIyhcXHdbXFx1MDA0MS1cXHUwMDVBXFx1MDA2MS1cXHUwMDdBXFx1MDBBQVxcdTAwQjVcXHUwMEJBXFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkMxXFx1MDJDNi1cXHUwMkQxXFx1MDJFMC1cXHUwMkU0XFx1MDJFQ1xcdTAyRUVcXHUwMzcwLVxcdTAzNzRcXHUwMzc2XFx1MDM3N1xcdTAzN0EtXFx1MDM3RFxcdTAzODZcXHUwMzg4LVxcdTAzOEFcXHUwMzhDXFx1MDM4RS1cXHUwM0ExXFx1MDNBMy1cXHUwM0Y1XFx1MDNGNy1cXHUwNDgxXFx1MDQ4QS1cXHUwNTI3XFx1MDUzMS1cXHUwNTU2XFx1MDU1OVxcdTA1NjEtXFx1MDU4N1xcdTA1RDAtXFx1MDVFQVxcdTA1RjAtXFx1MDVGMlxcdTA2MjAtXFx1MDY0QVxcdTA2NkVcXHUwNjZGXFx1MDY3MS1cXHUwNkQzXFx1MDZENVxcdTA2RTVcXHUwNkU2XFx1MDZFRVxcdTA2RUZcXHUwNkZBLVxcdTA2RkNcXHUwNkZGXFx1MDcxMFxcdTA3MTItXFx1MDcyRlxcdTA3NEQtXFx1MDdBNVxcdTA3QjFcXHUwN0NBLVxcdTA3RUFcXHUwN0Y0XFx1MDdGNVxcdTA3RkFcXHUwODAwLVxcdTA4MTVcXHUwODFBXFx1MDgyNFxcdTA4MjhcXHUwODQwLVxcdTA4NThcXHUwOEEwXFx1MDhBMi1cXHUwOEFDXFx1MDkwNC1cXHUwOTM5XFx1MDkzRFxcdTA5NTBcXHUwOTU4LVxcdTA5NjFcXHUwOTcxLVxcdTA5NzdcXHUwOTc5LVxcdTA5N0ZcXHUwOTg1LVxcdTA5OENcXHUwOThGXFx1MDk5MFxcdTA5OTMtXFx1MDlBOFxcdTA5QUEtXFx1MDlCMFxcdTA5QjJcXHUwOUI2LVxcdTA5QjlcXHUwOUJEXFx1MDlDRVxcdTA5RENcXHUwOUREXFx1MDlERi1cXHUwOUUxXFx1MDlGMFxcdTA5RjFcXHUwQTA1LVxcdTBBMEFcXHUwQTBGXFx1MEExMFxcdTBBMTMtXFx1MEEyOFxcdTBBMkEtXFx1MEEzMFxcdTBBMzJcXHUwQTMzXFx1MEEzNVxcdTBBMzZcXHUwQTM4XFx1MEEzOVxcdTBBNTktXFx1MEE1Q1xcdTBBNUVcXHUwQTcyLVxcdTBBNzRcXHUwQTg1LVxcdTBBOERcXHUwQThGLVxcdTBBOTFcXHUwQTkzLVxcdTBBQThcXHUwQUFBLVxcdTBBQjBcXHUwQUIyXFx1MEFCM1xcdTBBQjUtXFx1MEFCOVxcdTBBQkRcXHUwQUQwXFx1MEFFMFxcdTBBRTFcXHUwQjA1LVxcdTBCMENcXHUwQjBGXFx1MEIxMFxcdTBCMTMtXFx1MEIyOFxcdTBCMkEtXFx1MEIzMFxcdTBCMzJcXHUwQjMzXFx1MEIzNS1cXHUwQjM5XFx1MEIzRFxcdTBCNUNcXHUwQjVEXFx1MEI1Ri1cXHUwQjYxXFx1MEI3MVxcdTBCODNcXHUwQjg1LVxcdTBCOEFcXHUwQjhFLVxcdTBCOTBcXHUwQjkyLVxcdTBCOTVcXHUwQjk5XFx1MEI5QVxcdTBCOUNcXHUwQjlFXFx1MEI5RlxcdTBCQTNcXHUwQkE0XFx1MEJBOC1cXHUwQkFBXFx1MEJBRS1cXHUwQkI5XFx1MEJEMFxcdTBDMDUtXFx1MEMwQ1xcdTBDMEUtXFx1MEMxMFxcdTBDMTItXFx1MEMyOFxcdTBDMkEtXFx1MEMzM1xcdTBDMzUtXFx1MEMzOVxcdTBDM0RcXHUwQzU4XFx1MEM1OVxcdTBDNjBcXHUwQzYxXFx1MEM4NS1cXHUwQzhDXFx1MEM4RS1cXHUwQzkwXFx1MEM5Mi1cXHUwQ0E4XFx1MENBQS1cXHUwQ0IzXFx1MENCNS1cXHUwQ0I5XFx1MENCRFxcdTBDREVcXHUwQ0UwXFx1MENFMVxcdTBDRjFcXHUwQ0YyXFx1MEQwNS1cXHUwRDBDXFx1MEQwRS1cXHUwRDEwXFx1MEQxMi1cXHUwRDNBXFx1MEQzRFxcdTBENEVcXHUwRDYwXFx1MEQ2MVxcdTBEN0EtXFx1MEQ3RlxcdTBEODUtXFx1MEQ5NlxcdTBEOUEtXFx1MERCMVxcdTBEQjMtXFx1MERCQlxcdTBEQkRcXHUwREMwLVxcdTBEQzZcXHUwRTAxLVxcdTBFMzBcXHUwRTMyXFx1MEUzM1xcdTBFNDAtXFx1MEU0NlxcdTBFODFcXHUwRTgyXFx1MEU4NFxcdTBFODdcXHUwRTg4XFx1MEU4QVxcdTBFOERcXHUwRTk0LVxcdTBFOTdcXHUwRTk5LVxcdTBFOUZcXHUwRUExLVxcdTBFQTNcXHUwRUE1XFx1MEVBN1xcdTBFQUFcXHUwRUFCXFx1MEVBRC1cXHUwRUIwXFx1MEVCMlxcdTBFQjNcXHUwRUJEXFx1MEVDMC1cXHUwRUM0XFx1MEVDNlxcdTBFREMtXFx1MEVERlxcdTBGMDBcXHUwRjQwLVxcdTBGNDdcXHUwRjQ5LVxcdTBGNkNcXHUwRjg4LVxcdTBGOENcXHUxMDAwLVxcdTEwMkFcXHUxMDNGXFx1MTA1MC1cXHUxMDU1XFx1MTA1QS1cXHUxMDVEXFx1MTA2MVxcdTEwNjVcXHUxMDY2XFx1MTA2RS1cXHUxMDcwXFx1MTA3NS1cXHUxMDgxXFx1MTA4RVxcdTEwQTAtXFx1MTBDNVxcdTEwQzdcXHUxMENEXFx1MTBEMC1cXHUxMEZBXFx1MTBGQy1cXHUxMjQ4XFx1MTI0QS1cXHUxMjREXFx1MTI1MC1cXHUxMjU2XFx1MTI1OFxcdTEyNUEtXFx1MTI1RFxcdTEyNjAtXFx1MTI4OFxcdTEyOEEtXFx1MTI4RFxcdTEyOTAtXFx1MTJCMFxcdTEyQjItXFx1MTJCNVxcdTEyQjgtXFx1MTJCRVxcdTEyQzBcXHUxMkMyLVxcdTEyQzVcXHUxMkM4LVxcdTEyRDZcXHUxMkQ4LVxcdTEzMTBcXHUxMzEyLVxcdTEzMTVcXHUxMzE4LVxcdTEzNUFcXHUxMzgwLVxcdTEzOEZcXHUxM0EwLVxcdTEzRjRcXHUxNDAxLVxcdTE2NkNcXHUxNjZGLVxcdTE2N0ZcXHUxNjgxLVxcdTE2OUFcXHUxNkEwLVxcdTE2RUFcXHUxNzAwLVxcdTE3MENcXHUxNzBFLVxcdTE3MTFcXHUxNzIwLVxcdTE3MzFcXHUxNzQwLVxcdTE3NTFcXHUxNzYwLVxcdTE3NkNcXHUxNzZFLVxcdTE3NzBcXHUxNzgwLVxcdTE3QjNcXHUxN0Q3XFx1MTdEQ1xcdTE4MjAtXFx1MTg3N1xcdTE4ODAtXFx1MThBOFxcdTE4QUFcXHUxOEIwLVxcdTE4RjVcXHUxOTAwLVxcdTE5MUNcXHUxOTUwLVxcdTE5NkRcXHUxOTcwLVxcdTE5NzRcXHUxOTgwLVxcdTE5QUJcXHUxOUMxLVxcdTE5QzdcXHUxQTAwLVxcdTFBMTZcXHUxQTIwLVxcdTFBNTRcXHUxQUE3XFx1MUIwNS1cXHUxQjMzXFx1MUI0NS1cXHUxQjRCXFx1MUI4My1cXHUxQkEwXFx1MUJBRVxcdTFCQUZcXHUxQkJBLVxcdTFCRTVcXHUxQzAwLVxcdTFDMjNcXHUxQzRELVxcdTFDNEZcXHUxQzVBLVxcdTFDN0RcXHUxQ0U5LVxcdTFDRUNcXHUxQ0VFLVxcdTFDRjFcXHUxQ0Y1XFx1MUNGNlxcdTFEMDAtXFx1MURCRlxcdTFFMDAtXFx1MUYxNVxcdTFGMTgtXFx1MUYxRFxcdTFGMjAtXFx1MUY0NVxcdTFGNDgtXFx1MUY0RFxcdTFGNTAtXFx1MUY1N1xcdTFGNTlcXHUxRjVCXFx1MUY1RFxcdTFGNUYtXFx1MUY3RFxcdTFGODAtXFx1MUZCNFxcdTFGQjYtXFx1MUZCQ1xcdTFGQkVcXHUxRkMyLVxcdTFGQzRcXHUxRkM2LVxcdTFGQ0NcXHUxRkQwLVxcdTFGRDNcXHUxRkQ2LVxcdTFGREJcXHUxRkUwLVxcdTFGRUNcXHUxRkYyLVxcdTFGRjRcXHUxRkY2LVxcdTFGRkNcXHUyMDcxXFx1MjA3RlxcdTIwOTAtXFx1MjA5Q1xcdTIxMDJcXHUyMTA3XFx1MjEwQS1cXHUyMTEzXFx1MjExNVxcdTIxMTktXFx1MjExRFxcdTIxMjRcXHUyMTI2XFx1MjEyOFxcdTIxMkEtXFx1MjEyRFxcdTIxMkYtXFx1MjEzOVxcdTIxM0MtXFx1MjEzRlxcdTIxNDUtXFx1MjE0OVxcdTIxNEVcXHUyMTgzXFx1MjE4NFxcdTJDMDAtXFx1MkMyRVxcdTJDMzAtXFx1MkM1RVxcdTJDNjAtXFx1MkNFNFxcdTJDRUItXFx1MkNFRVxcdTJDRjJcXHUyQ0YzXFx1MkQwMC1cXHUyRDI1XFx1MkQyN1xcdTJEMkRcXHUyRDMwLVxcdTJENjdcXHUyRDZGXFx1MkQ4MC1cXHUyRDk2XFx1MkRBMC1cXHUyREE2XFx1MkRBOC1cXHUyREFFXFx1MkRCMC1cXHUyREI2XFx1MkRCOC1cXHUyREJFXFx1MkRDMC1cXHUyREM2XFx1MkRDOC1cXHUyRENFXFx1MkREMC1cXHUyREQ2XFx1MkREOC1cXHUyRERFXFx1MkUyRlxcdTMwMDVcXHUzMDA2XFx1MzAzMS1cXHUzMDM1XFx1MzAzQlxcdTMwM0NcXHUzMDQxLVxcdTMwOTZcXHUzMDlELVxcdTMwOUZcXHUzMEExLVxcdTMwRkFcXHUzMEZDLVxcdTMwRkZcXHUzMTA1LVxcdTMxMkRcXHUzMTMxLVxcdTMxOEVcXHUzMUEwLVxcdTMxQkFcXHUzMUYwLVxcdTMxRkZcXHUzNDAwLVxcdTREQjVcXHU0RTAwLVxcdTlGQ0NcXHVBMDAwLVxcdUE0OENcXHVBNEQwLVxcdUE0RkRcXHVBNTAwLVxcdUE2MENcXHVBNjEwLVxcdUE2MUZcXHVBNjJBXFx1QTYyQlxcdUE2NDAtXFx1QTY2RVxcdUE2N0YtXFx1QTY5N1xcdUE2QTAtXFx1QTZFNVxcdUE3MTctXFx1QTcxRlxcdUE3MjItXFx1QTc4OFxcdUE3OEItXFx1QTc4RVxcdUE3OTAtXFx1QTc5M1xcdUE3QTAtXFx1QTdBQVxcdUE3RjgtXFx1QTgwMVxcdUE4MDMtXFx1QTgwNVxcdUE4MDctXFx1QTgwQVxcdUE4MEMtXFx1QTgyMlxcdUE4NDAtXFx1QTg3M1xcdUE4ODItXFx1QThCM1xcdUE4RjItXFx1QThGN1xcdUE4RkJcXHVBOTBBLVxcdUE5MjVcXHVBOTMwLVxcdUE5NDZcXHVBOTYwLVxcdUE5N0NcXHVBOTg0LVxcdUE5QjJcXHVBOUNGXFx1QUEwMC1cXHVBQTI4XFx1QUE0MC1cXHVBQTQyXFx1QUE0NC1cXHVBQTRCXFx1QUE2MC1cXHVBQTc2XFx1QUE3QVxcdUFBODAtXFx1QUFBRlxcdUFBQjFcXHVBQUI1XFx1QUFCNlxcdUFBQjktXFx1QUFCRFxcdUFBQzBcXHVBQUMyXFx1QUFEQi1cXHVBQUREXFx1QUFFMC1cXHVBQUVBXFx1QUFGMi1cXHVBQUY0XFx1QUIwMS1cXHVBQjA2XFx1QUIwOS1cXHVBQjBFXFx1QUIxMS1cXHVBQjE2XFx1QUIyMC1cXHVBQjI2XFx1QUIyOC1cXHVBQjJFXFx1QUJDMC1cXHVBQkUyXFx1QUMwMC1cXHVEN0EzXFx1RDdCMC1cXHVEN0M2XFx1RDdDQi1cXHVEN0ZCXFx1RjkwMC1cXHVGQTZEXFx1RkE3MC1cXHVGQUQ5XFx1RkIwMC1cXHVGQjA2XFx1RkIxMy1cXHVGQjE3XFx1RkIxRFxcdUZCMUYtXFx1RkIyOFxcdUZCMkEtXFx1RkIzNlxcdUZCMzgtXFx1RkIzQ1xcdUZCM0VcXHVGQjQwXFx1RkI0MVxcdUZCNDNcXHVGQjQ0XFx1RkI0Ni1cXHVGQkIxXFx1RkJEMy1cXHVGRDNEXFx1RkQ1MC1cXHVGRDhGXFx1RkQ5Mi1cXHVGREM3XFx1RkRGMC1cXHVGREZCXFx1RkU3MC1cXHVGRTc0XFx1RkU3Ni1cXHVGRUZDXFx1RkYyMS1cXHVGRjNBXFx1RkY0MS1cXHVGRjVBXFx1RkY2Ni1cXHVGRkJFXFx1RkZDMi1cXHVGRkM3XFx1RkZDQS1cXHVGRkNGXFx1RkZEMi1cXHVGRkQ3XFx1RkZEQS1cXHVGRkRDKzAtOV9dKyl8KCNbYS3Rj10rKXwoI1tcXHUzMDAwLVxcdTMwM2ZcXHUzMDQwLVxcdTMwOWZcXHUzMGEwLVxcdTMwZmZcXHVmZjAwLVxcdWZmOWZcXHU0ZTAwLVxcdTlmYWZcXHUzNDAwLVxcdTRkYmZdKykvZ2ksXG4gICAgICAgICAgICAgICAgICB0YWdSZWdleCA9IC9bQF0rW0EtWmEtejAtOS1fXFwuXCI8XSsvZztcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHNieUxpZ2h0Ym94Q2FwdGlvbiAhPT0gJ3VuZGVmaW5lZCcgJiYgc2J5TGlnaHRib3hDYXB0aW9uICE9PSAnJykge1xuICAgICAgICAgICAgICAgICAgICBzYnlMaWdodGJveENhcHRpb24gPSBzYnlMaWdodGJveENhcHRpb24ucmVwbGFjZSgvKD4jKS9nLCc+ICMnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgKHNieUxpZ2h0Ym94Q2FwdGlvbikgPyBzYnlMaWdodGJveENhcHRpb24gPSBzYnlMaW5raWZ5KHNieUxpZ2h0Ym94Q2FwdGlvbikgOiBzYnlMaWdodGJveENhcHRpb24gPSAnJztcblxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2Ygc2J5TGlnaHRib3hBY3Rpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNieUxpZ2h0Ym94QWN0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgIH0sMTAwKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIGF2YXRhckltYWdlSHRtbCA9ICcnLFxuICAgICAgICAgICAgICAgICAgdXNlckh0bWwgPSAnJztcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRhdGEuYXZhdGFyICE9PSAndW5kZWZpbmVkJyAmJiBkYXRhLmF2YXRhciAhPT0gJycgJiYgdHlwZW9mIGRhdGEudXNlciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgYXZhdGFySW1hZ2VIdG1sID0gKGRhdGEuYXZhdGFyICE9PSAndW5kZWZpbmVkJykgPyAnPGltZyBzcmM9XCInK2RhdGEuYXZhdGFyKydcIiAvPicgOiAnJztcbiAgICAgICAgICAgICAgICAgICAgdXNlckh0bWwgPSAnPGEgY2xhc3M9XCJzYnlfbGlnaHRib3hfdXNlcm5hbWVcIiBocmVmPVwiJytkYXRhLmNoYW5uZWxVUkwrJ1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyXCI+JythdmF0YXJJbWFnZUh0bWwrJzxwPkAnK2RhdGEudXNlciArICc8L3A+PC9hPiAnO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGRhdGEudXNlciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgalF1ZXJ5LmVhY2god2luZG93LnNieS5mZWVkcywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRoaXMuYXZhaWxhYmxlQXZhdGFyVXJscyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHRoaXMuYXZhaWxhYmxlQXZhdGFyVXJsc1tkYXRhLnVzZXJdICE9PSAndW5kZWZpbmVkJyAmJiB0aGlzLmF2YWlsYWJsZUF2YXRhclVybHNbZGF0YS51c2VyXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdmF0YXJJbWFnZUh0bWwgPSAnPGltZyBzcmM9XCInK3RoaXMuYXZhaWxhYmxlQXZhdGFyVXJsc1tkYXRhLnVzZXJdKydcIiAvPic7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICRsaWdodGJveC5maW5kKFwiLnNieV9sYi1jYXB0aW9uXCIpLmh0bWwoIHVzZXJIdG1sICsgJzxzcGFuIGNsYXNzPVwic2J5X2NhcHRpb25fdGV4dFwiPicgKyBzYnlMaWdodGJveENhcHRpb24gKyAnPC9zcGFuPicpLmZhZGVJbihcImZhc3RcIik7XG5cbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBTYnlDVEEodmlkZW9JRCxmZWVkKSB7XG4gICAgICAgICAgICB0aGlzLmlzSW5pdGlhbGl6ZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMudmlkZW9JRCA9IHZpZGVvSUQ7XG4gICAgICAgICAgICB0aGlzLmNhbGxiYWNrID0gdGhpcy5yZWxhdGVkO1xuICAgICAgICAgICAgdGhpcy5jYWxsYmFja0FyZ3MgPSB7fTtcbiAgICAgICAgICAgIHRoaXMuZmVlZE9iakluQ29udGV4dCA9IGZlZWQ7XG4gICAgICAgICAgICB0aGlzLnN0YXRlID0gMTtcbiAgICAgICAgICAgIHRoaXMubnVtSXRlbXMgPSA0O1xuICAgICAgICAgICAgdGhpcy5udW1JdGVtQ29sdW1ucyA9IDI7XG4gICAgICAgICAgICB0aGlzLiRwbGF5ZXIgPSBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIFNieUNUQS5wcm90b3R5cGUgPSB7XG4gICAgICAgICAgICB0b2dnbGVDVEE6IGZ1bmN0aW9uKHZpZGVvSUQsZGF0YU51bSwkcGxheWVyKXtcbiAgICAgICAgICAgICAgICB0aGlzLiRwbGF5ZXIgPSAkcGxheWVyLmxlbmd0aCA/ICRwbGF5ZXIgOiAkKCcuc2J5X2xiLWNvbnRhaW5lcicpOyAvLyB1c2UgdGhlIGxpZ2h0Ym94IGNvbnRhaW5lciBpZiBubyBwbGF5ZXIgaXMgc2V0XG4gICAgICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IGRhdGFOdW07XG4gICAgICAgICAgICAgICAgdGhpcy52aWRlb0lEID0gdmlkZW9JRDtcbiAgICAgICAgICAgICAgICB0aGlzLmlzSW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHRoaXMucmVzZXRDVEEoKTtcblxuICAgICAgICAgICAgICAgIC8vY3RhRGV0ZWN0XG5cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHdpbmRvdy5zYnkuY3Rhc1t2aWRlb0lEXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWxsYmFja0FyZ3MgPSB3aW5kb3cuc2J5LmN0YXNbdmlkZW9JRF07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBjYWxsYmFjayA9IHRoaXMuY2FsbGJhY2tBcmdzLmNhbGxiYWNrO1xuXG4gICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrID09PSAnbGluaycpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWxsYmFjayA9IHRoaXMubGluaztcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGNhbGxiYWNrID09PSAncmVsYXRlZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWxsYmFjayA9IHRoaXMucmVsYXRlZDtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKGRhdGFOdW0gPT09IDIgfHwgZGF0YU51bSA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLiRwbGF5ZXIuZmluZCgnLnNieV9jdGFfaXRlbXNfd3JhcHMnKS5hZGRDbGFzcygnc2J5X2N0YV9pc19vcGVuJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKCBkYXRhTnVtID09PSAyICl7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRwbGF5ZXIuZmluZCgnLnNieV9jdGFfaXRlbXNfd3JhcHMnKS5hZGRDbGFzcygnc2J5X2N0YV9zdGF0ZV9wYXVzZWQnKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJHBsYXllci5maW5kKCcuc2J5X2N0YV9pdGVtc193cmFwcycpLmFkZENsYXNzKCdzYnlfY3RhX3N0YXRlX2VuZGVkJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICB0aGlzLiRwbGF5ZXIuZmluZCgnLnNieV9jdGFfaXRlbXNfd3JhcHMnKS5zaG93KCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRDVEFTdHlsZXMoKTtcblxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJHBsYXllci5maW5kKCcuc2J5X2N0YV9pdGVtc193cmFwcycpLnJlbW92ZUNsYXNzKCdzYnlfY3RhX2lzX29wZW4nKTtcblxuICAgICAgICAgICAgICAgICAgICB0aGlzLiRwbGF5ZXIuZmluZCgnLnNieV9jdGFfaXRlbXNfd3JhcHMnKS5oaWRlKClcbiAgICAgICAgICAgICAgICAgICAgICAucmVtb3ZlQ2xhc3MoJ3NieV9jdGFfc3RhdGVfcGF1c2VkJylcbiAgICAgICAgICAgICAgICAgICAgICAucmVtb3ZlQ2xhc3MoJ3NieV9jdGFfc3RhdGVfZW5kZWQnKVxuICAgICAgICAgICAgICAgICAgICAgIC5yZW1vdmVDbGFzcygnc2J5X2N0YV9pc19vcGVuJyk7XG4gICAgICAgICAgICAgICAgfVxuXG5cblxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJlbGF0ZWQ6IGZ1bmN0aW9uKGFyZ3MpIHtcbiAgICAgICAgICAgICAgICB2YXIgY3RhT2JqID0gdGhpcyxcbiAgICAgICAgICAgICAgICAgIGZlZWRPYmpJbkNvbnRleHQgPSB0aGlzLmZlZWRPYmpJbkNvbnRleHQsXG4gICAgICAgICAgICAgICAgICByZWxhdGVkID0gd2luZG93LnNieS5zaHVmZmxlKHRoaXMuZ2V0UmVsYXRlZChmZWVkT2JqSW5Db250ZXh0KSksXG4gICAgICAgICAgICAgICAgICBhZGRlZCA9IDAsXG4gICAgICAgICAgICAgICAgICBjdXJyZW50VmlkZW9JZCA9IHRoaXMudmlkZW9JRCxcbiAgICAgICAgICAgICAgICAgICRwbGF5ZXIgPSB0aGlzLiRwbGF5ZXI7XG5cbiAgICAgICAgICAgICAgICB0aGlzLiRwbGF5ZXIuZmluZCgnLnNieV9jdGFfaXRlbXNfd3JhcHMnKVxuICAgICAgICAgICAgICAgICAgLnJlbW92ZUNsYXNzKCdzYnlfY3RhX2NvbHNfJyArIHRoaXMubnVtSXRlbUNvbHVtbnMpO1xuXG4gICAgICAgICAgICAgICAgdGhpcy5udW1JdGVtcyA9IDQ7XG4gICAgICAgICAgICAgICAgdGhpcy5udW1JdGVtQ29sdW1ucyA9IDI7XG5cbiAgICAgICAgICAgICAgICBpZiAoJHBsYXllci53aWR0aCgpIDwgNDgwKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubnVtSXRlbXMgPSAxO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm51bUl0ZW1Db2x1bW5zID0gMVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHZhciBudW1JdGVtcyA9IHRoaXMubnVtSXRlbXM7XG5cbiAgICAgICAgICAgICAgICAkLmVhY2gocmVsYXRlZCwgZnVuY3Rpb24oaW5kZXgsIHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZS52aWRlb0lEICE9PSBjdXJyZW50VmlkZW9JZCAmJiBhZGRlZCA8IG51bUl0ZW1zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkcGxheWVyLmZpbmQoJy5zYnlfY3RhX2l0ZW1zX3dyYXBzIC5zYnlfY3RhX2lubmVyX3dyYXAnKS5hcHBlbmQoJzxkaXYgY2xhc3M9XCJzYnlfY3RhX2l0ZW1cIj48ZGl2IGNsYXNzPVwic2J5X3ZpZGVvX3RodW1ibmFpbF93cmFwXCI+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICc8YSBjbGFzcz1cInNieV92aWRlb190aHVtYm5haWxcIiBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApO1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyXCIgZGF0YS12aWRlby1pZD1cIicrdmFsdWUudmlkZW9JRCsnXCI+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwic2J5X3RodW1ibmFpbF9ob3ZlclwiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cInNieV90aHVtYm5haWxfaG92ZXJfaW5uZXJcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJzxzcGFuIGNsYXNzPVwic2J5X3ZpZGVvX3RpdGxlXCI+Jyt2YWx1ZS50aXRsZSsnPC9zcGFuPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAnPC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJzxzcGFuIGNsYXNzPVwic2J5LXNjcmVlbnJlYWRlclwiPlBsYXk8L3NwYW4+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICc8aW1nIHNyYz1cIicrdmFsdWUudGh1bWJuYWlsKydcIiBhbHQ9XCInK3ZhbHVlLnRpdGxlKydcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJzxzcGFuIGNsYXNzPVwic2J5X2xvYWRlciBzYnlfaGlkZGVuXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSk7XCI+PC9zcGFuPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAnPC9hPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAnPC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZGVkKys7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICRwbGF5ZXIuZmluZCgnLnNieV9jdGFfaXRlbXNfd3JhcHMgLnNieV92aWRlb190aHVtYm5haWwnKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLm9mZigpLm9uKCdjbGljaycsZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG5ld1ZpZGVvSUQgPSAkKHRoaXMpLmF0dHIoJ2RhdGEtdmlkZW8taWQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZlZWRPYmpJbkNvbnRleHQub25UaHVtYm5haWxDbGljaygkKHRoaXMpLHRydWUsbmV3VmlkZW9JRCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdGFPYmoudmlkZW9JRCA9IG5ld1ZpZGVvSUQ7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0UmVsYXRlZDogZnVuY3Rpb24oZmVlZE9iakluQ29udGV4dCkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZmVlZE9iakluQ29udGV4dC5zZXR0aW5ncy5nZW5lcmFsLmN0YS5kZWZhdWx0UG9zdHNbMF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciAkZmVlZEVsID0gJChmZWVkT2JqSW5Db250ZXh0LmVsKSxcbiAgICAgICAgICAgICAgICAgICAgICByZWxhdGVkVmlkcyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICAkZmVlZEVsLmZpbmQoJy5zYnlfaXRlbScpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mICQodGhpcykuZmluZCgnLnNieV9pdGVtX3ZpZGVvX3RodW1ibmFpbCcpLmF0dHIoJ2RhdGEtZnVsbC1yZXMnKSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGhpc1ZpZCA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlkZW9JRDogJCh0aGlzKS5hdHRyKCdkYXRhLXZpZGVvLWlkJyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiAkKHRoaXMpLmF0dHIoJ2RhdGEtdmlkZW8tdGl0bGUnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGh1bWJuYWlsOiAkKHRoaXMpLmZpbmQoJy5zYnlfaXRlbV92aWRlb190aHVtYm5haWwnKS5hdHRyKCdkYXRhLWZ1bGwtcmVzJyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbGF0ZWRWaWRzLnB1c2godGhpc1ZpZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVsYXRlZFZpZHM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBmZWVkT2JqSW5Db250ZXh0LnNldHRpbmdzLmdlbmVyYWwuY3RhLmRlZmF1bHRQb3N0cztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBsaW5rOiBmdW5jdGlvbihhcmdzKSB7XG4gICAgICAgICAgICAgICAgdmFyICRwbGF5ZXIgPSB0aGlzLiRwbGF5ZXIsXG4gICAgICAgICAgICAgICAgICBmZWVkT2JqSW5Db250ZXh0ID0gdGhpcy5mZWVkT2JqSW5Db250ZXh0O1xuXG4gICAgICAgICAgICAgICAgdGhpcy4kcGxheWVyLmZpbmQoJy5zYnlfY3RhX2l0ZW1zX3dyYXBzJylcbiAgICAgICAgICAgICAgICAgIC5yZW1vdmVDbGFzcygnc2J5X2N0YV9jb2xzXycgKyB0aGlzLm51bUl0ZW1Db2x1bW5zKTtcblxuICAgICAgICAgICAgICAgIHRoaXMubnVtSXRlbXMgPSAxO1xuICAgICAgICAgICAgICAgIHRoaXMubnVtSXRlbUNvbHVtbnMgPSAxO1xuXG4gICAgICAgICAgICAgICAgdmFyIHN0eWxlID0gJycsXG4gICAgICAgICAgICAgICAgICBzdHlsZUNsYXNzID0gJyc7XG5cbiAgICAgICAgICAgICAgICBpZiAoZmVlZE9iakluQ29udGV4dC5zZXR0aW5ncy5nZW5lcmFsLmN0YS5jb2xvciAhPT0gJycgfHwgZmVlZE9iakluQ29udGV4dC5zZXR0aW5ncy5nZW5lcmFsLmN0YS50ZXh0Q29sb3IgIT09ICcnKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0eWxlID0gJyBzdHlsZT1cIic7XG4gICAgICAgICAgICAgICAgICAgIHN0eWxlQ2xhc3MgPSAnIHNieV9jdXN0b20nO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChmZWVkT2JqSW5Db250ZXh0LnNldHRpbmdzLmdlbmVyYWwuY3RhLmNvbG9yICE9PSAnJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGUgKz0gJ2JhY2tncm91bmQ6IHJnYignICsgZmVlZE9iakluQ29udGV4dC5zZXR0aW5ncy5nZW5lcmFsLmN0YS5jb2xvciArICcpOyc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGZlZWRPYmpJbkNvbnRleHQuc2V0dGluZ3MuZ2VuZXJhbC5jdGEudGV4dENvbG9yICE9PSAnJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGUgKz0gJ2NvbG9yOiByZ2IoJyArIGZlZWRPYmpJbkNvbnRleHQuc2V0dGluZ3MuZ2VuZXJhbC5jdGEudGV4dENvbG9yICsgJyk7JztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBzdHlsZSArPSAnXCInO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHZhciBvcGVuQXR0cyA9ICcnO1xuICAgICAgICAgICAgICAgIGlmIChmZWVkT2JqSW5Db250ZXh0LnNldHRpbmdzLmdlbmVyYWwuY3RhLm9wZW5UeXBlID09PSAnbmV3d2luZG93Jykge1xuICAgICAgICAgICAgICAgICAgICBvcGVuQXR0cyA9ICcgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXJcIic7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgJHBsYXllci5maW5kKCcuc2J5X2N0YV9pdGVtc193cmFwcyAuc2J5X2N0YV9pbm5lcl93cmFwJykuYXBwZW5kKCc8ZGl2IGNsYXNzPVwic2J5X2N0YV9pdGVtXCI+JyArXG4gICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cInNieV9idG5fd3JhcFwiPicgK1xuICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJzYnlfYnRuJytzdHlsZUNsYXNzKydcIj4nICtcblxuICAgICAgICAgICAgICAgICAgJzxhIGNsYXNzPVwic2J5X2N0YV9idXR0b25cIiBocmVmPVwiJyt0aGlzLmNhbGxiYWNrQXJncy51cmwrJ1wiJytvcGVuQXR0cysnIGRhdGEtdmlkZW8taWQ9XCInK3RoaXMudmlkZW9JRCsnXCInK3N0eWxlKyc+JyArXG4gICAgICAgICAgICAgICAgICB0aGlzLmNhbGxiYWNrQXJncy50ZXh0ICtcbiAgICAgICAgICAgICAgICAgICc8L2E+JyArXG4gICAgICAgICAgICAgICAgICAnPC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAnPC9kaXY+JyArXG5cbiAgICAgICAgICAgICAgICAgICc8L2Rpdj4nXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZXRDVEFTdHlsZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHZhciBwbGF5ZXJUb3BIZWlnaHQgPSA2MCxcbiAgICAgICAgICAgICAgICAgIHBsYXllckJvdHRvbUhlaWdodCA9IDQ5LFxuICAgICAgICAgICAgICAgICAgbWluaW11bUhlaWdodCA9IDkwLFxuICAgICAgICAgICAgICAgICAgY3RhT3ZlcmxheUhlaWdodCA9IE1hdGgubWF4KG1pbmltdW1IZWlnaHQsdGhpcy4kcGxheWVyLmhlaWdodCgpIC0gcGxheWVyVG9wSGVpZ2h0IC0gcGxheWVyQm90dG9tSGVpZ2h0KTtcblxuICAgICAgICAgICAgICAgIHRoaXMuJHBsYXllci5maW5kKCcuc2J5X2N0YV9pdGVtc193cmFwcycpXG4gICAgICAgICAgICAgICAgICAuY3NzKCdoZWlnaHQnLGN0YU92ZXJsYXlIZWlnaHQrJ3B4JylcbiAgICAgICAgICAgICAgICAgIC5jc3MoJ3dpZHRoJywodGhpcy4kcGxheWVyLmZpbmQoJ2lmcmFtZScpLndpZHRoKCktMjApKydweCcpXG4gICAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoJ3NieV9jdGFfY29sc18nICsgdGhpcy5udW1JdGVtQ29sdW1ucyk7XG5cbiAgICAgICAgICAgICAgICB2YXIgbnVtUm93cyA9IE1hdGgubWF4KDEsdGhpcy5udW1JdGVtcy90aGlzLm51bUl0ZW1Db2x1bW5zKSxcbiAgICAgICAgICAgICAgICAgIHRvdGFsVmVydGljYWxQYWRkaW5nID0gcGFyc2VJbnQodGhpcy4kcGxheWVyLmZpbmQoJy5zYnlfY3RhX2l0ZW1zX3dyYXBzJykuY3NzKCdwYWRkaW5nLXRvcCcpLnJlcGxhY2UoJ3B4JywnJykpICogMixcbiAgICAgICAgICAgICAgICAgIG1heENUQUl0ZW1IZWlnaHQgPSBNYXRoLm1heChtaW5pbXVtSGVpZ2h0LChjdGFPdmVybGF5SGVpZ2h0LXRvdGFsVmVydGljYWxQYWRkaW5nKS9udW1Sb3dzKTtcblxuICAgICAgICAgICAgICAgIHRoaXMuJHBsYXllci5maW5kKCcuc2J5X2N0YV9pdGVtJykuY3NzKCdtYXgtaGVpZ2h0JyxtYXhDVEFJdGVtSGVpZ2h0KydweCcpLmZpbmQoJ2ltZycpLmNzcyh7XG4gICAgICAgICAgICAgICAgICAgICdtYXgtaGVpZ2h0JzogbWF4Q1RBSXRlbUhlaWdodCsncHgnLFxuICAgICAgICAgICAgICAgICAgICAnd2lkdGgnOiAnYXV0bycsXG4gICAgICAgICAgICAgICAgICAgICdtYXJnaW4nOiAnYXV0bydcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB0aGlzLiRwbGF5ZXIuZmluZCgnLnNieV9idG5fd3JhcCcpLmNzcygnaGVpZ2h0JyxtYXhDVEFJdGVtSGVpZ2h0KydweCcpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJlc2V0Q1RBOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB0aGlzLiRwbGF5ZXIuZmluZCgnLnNieV9jdGFfaXRlbXNfd3JhcHMgLnNieV9jdGFfaW5uZXJfd3JhcCcpLmVtcHR5KCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfTtcblxuICAgICAgICB3aW5kb3cuc2J5X2luaXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHdpbmRvdy5zYnkgPSBuZXcgU2J5KCk7XG4gICAgICAgICAgICB3aW5kb3cuc2J5LmNyZWF0ZVBhZ2UoIHdpbmRvdy5zYnkuY3JlYXRlRmVlZHMsIHt3aGVuRmVlZHNDcmVhdGVkOiB3aW5kb3cuc2J5LmFmdGVyRmVlZHNDcmVhdGVkfSk7XG4gICAgICAgIH07XG5cblxuXG4gICAgICAgIHdpbmRvdy5zYnlfY2Fyb3VzZWxfaW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ2xvZycpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gc2J5R2V0TmV3RmVlZChmZWVkLGluZGV4LGZlZWRPcHRpb25zKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFNieUZlZWRQcm8oZmVlZCxpbmRleCxmZWVkT3B0aW9ucyk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBzYnlHZXRsaWdodGJveEJ1aWxkZXIoKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFNieUxpZ2h0Ym94QnVpbGRlclBybygpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gc2J5QWpheChzdWJtaXREYXRhLG9uU3VjY2Vzcykge1xuICAgICAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgICAgICB1cmw6IHNieU9wdGlvbnMuYWRtaW5BamF4VXJsLFxuICAgICAgICAgICAgICAgIHR5cGU6ICdwb3N0JyxcbiAgICAgICAgICAgICAgICBkYXRhOiBzdWJtaXREYXRhLFxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IG9uU3VjY2Vzc1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBzYnlJc1RvdWNoKCkge1xuICAgICAgICAgICAgaWYgKFwib250b3VjaHN0YXJ0XCIgaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBzYnlDbXBsekdldENvb2tpZShjbmFtZSkge1xuICAgICAgICAgICAgdmFyIG5hbWUgPSBjbmFtZSArIFwiPVwiOyAvL0NyZWF0ZSB0aGUgY29va2llIG5hbWUgdmFyaWFibGUgd2l0aCBjb29raWUgbmFtZSBjb25jYXRlbmF0ZSB3aXRoID0gc2lnblxuICAgICAgICAgICAgdmFyIGNBcnIgPSB3aW5kb3cuZG9jdW1lbnQuY29va2llLnNwbGl0KCc7Jyk7IC8vQ3JlYXRlIGNvb2tpZSBhcnJheSBieSBzcGxpdCB0aGUgY29va2llIGJ5ICc7J1xuXG4gICAgICAgICAgICAvL0xvb3AgdGhyb3VnaCB0aGUgY29va2llcyBhbmQgcmV0dXJuIHRoZSBjb29raWUgdmFsdWUgaWYgaXQgZmluZCB0aGUgY29va2llIG5hbWVcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY0Fyci5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHZhciBjID0gY0FycltpXS50cmltKCk7XG4gICAgICAgICAgICAgICAgLy9JZiB0aGUgbmFtZSBpcyB0aGUgY29va2llIHN0cmluZyBhdCBwb3NpdGlvbiAwLCB3ZSBmb3VuZCB0aGUgY29va2llIGFuZCByZXR1cm4gdGhlIGNvb2tpZSB2YWx1ZVxuICAgICAgICAgICAgICAgIGlmIChjLmluZGV4T2YobmFtZSkgPT0gMClcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGMuc3Vic3RyaW5nKG5hbWUubGVuZ3RoLCBjLmxlbmd0aCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBcIlwiO1xuICAgICAgICB9XG5cblxuICAgIH0pKGpRdWVyeSk7XG5cbiAgICBpZiAodHlwZW9mIHdpbmRvdy5zYnlFYWdlckxvYWRpbmcgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHdpbmRvdy5zYnlFYWdlckxvYWRpbmcgPSB0eXBlb2Ygd2luZG93LnNieU9wdGlvbnMgIT09ICd1bmRlZmluZWQnID8gd2luZG93LnNieU9wdGlvbnMuZWFnZXJsb2FkIDogZmFsc2U7XG4gICAgICAgIGlmIChqUXVlcnkoJy5lbGVtZW50b3Itd2lkZ2V0LXZpZGVvJykubGVuZ3RoKSB7XG4gICAgICAgICAgICB2YXIgc2V0dGluZ3MgPSB0eXBlb2YgalF1ZXJ5KCcuZWxlbWVudG9yLXdpZGdldC12aWRlbycpLmF0dHIoJ2RhdGEtc2V0dGluZ3MnKSAhPT0gJ3VuZGVmaW5lZCcgPyBKU09OLnBhcnNlKCBqUXVlcnkoJy5lbGVtZW50b3Itd2lkZ2V0LXZpZGVvJykuYXR0cignZGF0YS1zZXR0aW5ncycpKSA6IGZhbHNlO1xuICAgICAgICAgICAgaWYgKHNldHRpbmdzICYmIHR5cGVvZiBzZXR0aW5ncy55b3V0dWJlX3VybCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICB3aW5kb3cuc2J5RWFnZXJMb2FkaW5nID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChqUXVlcnkoJ2RpdltkYXRhLXZjLXZpZGVvLWJnXScpLmxlbmd0aCkge1xuICAgICAgICAgICAgd2luZG93LnNieUVhZ2VyTG9hZGluZyA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cuc2J5U2VtaUVhZ2VyTG9hZGluZyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgd2luZG93LnNieVNlbWlFYWdlckxvYWRpbmcgPSB0eXBlb2Ygd2luZG93LnNieU9wdGlvbnMgIT09ICd1bmRlZmluZWQnID8gd2luZG93LnNieU9wdGlvbnMuc2VtaUVhZ2VybG9hZCA6IGZhbHNlO1xuICAgICAgICBpZiAoalF1ZXJ5KCdkaXZbZGF0YS12Yy12aWRlby1iZ10nKS5sZW5ndGggfHwgd2luZG93LnNieUVhZ2VyTG9hZGluZykge1xuICAgICAgICAgICAgd2luZG93LnNieVNlbWlFYWdlckxvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGpRdWVyeShkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oJCkge1xuICAgICAgICBpZiAoIXdpbmRvdy5zYnlTZW1pRWFnZXJMb2FkaW5nKSB7XG4gICAgICAgICAgICBzYnlfaW5pdCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQ29va2llIE5vdGljZSBieSBkRmFjdG9yeVxuICAgICAgICAkKCcjY29va2llLW5vdGljZSBhJykub24oJ2NsaWNrJyxmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgJC5lYWNoKHdpbmRvdy5zYnkuZmVlZHMsZnVuY3Rpb24oaW5kZXgpe1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuc2J5LmZlZWRzWyBpbmRleCBdLmFmdGVyQ29uc2VudFRvZ2dsZWQoKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sMTAwMCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIENvb2tpZSBOb3RpY2UgYnkgZEZhY3RvcnlcbiAgICAgICAgJCgnI2Nvb2tpZS1sYXctaW5mby1iYXIgYScpLm9uKCdjbGljaycsZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICQuZWFjaCh3aW5kb3cuc2J5LmZlZWRzLGZ1bmN0aW9uKGluZGV4KXtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LnNieS5mZWVkc1sgaW5kZXggXS5hZnRlckNvbnNlbnRUb2dnbGVkKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LDEwMDApO1xuICAgICAgICB9KTtcblxuICAgICAgICAvLyBHRFBSIENvb2tpZSBDb25zZW50IGJ5IFdlYlRvZmZlZVxuICAgICAgICAkKCcuY2xpLXVzZXItcHJlZmVyZW5jZS1jaGVja2JveCcpLm9uKCdjbGljaycsZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgJC5lYWNoKHdpbmRvdy5zYnkuZmVlZHMsZnVuY3Rpb24oaW5kZXgpe1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuc2J5LmZlZWRzWyBpbmRleCBdLnNldHRpbmdzLmNvbnNlbnRHaXZlbiA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuc2J5LmZlZWRzWyBpbmRleCBdLmFmdGVyQ29uc2VudFRvZ2dsZWQoKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sMTAwMCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIENvb2tpZWJvdFxuICAgICAgICAkKHdpbmRvdykub24oJ0Nvb2tpZWJvdE9uQWNjZXB0JywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAkLmVhY2god2luZG93LnNieS5mZWVkcyxmdW5jdGlvbihpbmRleCl7XG4gICAgICAgICAgICAgICAgd2luZG93LnNieS5mZWVkc1sgaW5kZXggXS5zZXR0aW5ncy5jb25zZW50R2l2ZW4gPSB0cnVlO1xuICAgICAgICAgICAgICAgIHdpbmRvdy5zYnkuZmVlZHNbIGluZGV4IF0uYWZ0ZXJDb25zZW50VG9nZ2xlZCgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIENvbXBsaWFueiBieSBSZWFsbHkgU2ltcGxlIFBsdWdpbnNcbiAgICAgICAgJChkb2N1bWVudCkub24oJ2NtcGx6RW5hYmxlU2NyaXB0cycsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgaWYgKCBldmVudC5kZXRhaWwgPT09ICdtYXJrZXRpbmcnICkge1xuICAgICAgICAgICAgICAgICQuZWFjaCh3aW5kb3cuc2J5LmZlZWRzLGZ1bmN0aW9uKGluZGV4KXtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LnNieS5mZWVkc1sgaW5kZXggXS5zZXR0aW5ncy5jb25zZW50R2l2ZW4gPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuc2J5LmZlZWRzWyBpbmRleCBdLmFmdGVyQ29uc2VudFRvZ2dsZWQoKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgJChkb2N1bWVudCkub24oJ2NtcGx6RmlyZUNhdGVnb3JpZXMnLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgIGlmICggZXZlbnQuZGV0YWlsLmNhdGVnb3J5PT09J21hcmtldGluZycgKSB7XG4gICAgICAgICAgICAgICAgJC5lYWNoKHdpbmRvdy5zYnkuZmVlZHMsZnVuY3Rpb24oaW5kZXgpe1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuc2J5LmZlZWRzWyBpbmRleCBdLnNldHRpbmdzLmNvbnNlbnRHaXZlbiA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5zYnkuZmVlZHNbIGluZGV4IF0uYWZ0ZXJDb25zZW50VG9nZ2xlZCgpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICAvLyBCb3JsYWJzIENvb2tpZSBieSBCb3JsYWJzXG4gICAgICAgICQoZG9jdW1lbnQpLm9uKCdib3JsYWJzLWNvb2tpZS1jb25zZW50LXNhdmVkJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAkLmVhY2god2luZG93LnNieS5mZWVkcyxmdW5jdGlvbihpbmRleCl7XG4gICAgICAgICAgICAgICAgd2luZG93LnNieS5mZWVkc1sgaW5kZXggXS5zZXR0aW5ncy5jb25zZW50R2l2ZW4gPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB3aW5kb3cuc2J5LmZlZWRzWyBpbmRleCBdLmFmdGVyQ29uc2VudFRvZ2dsZWQoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9KTtcblxufSAvLyBpZiBzYnlfanNfZXhpc3RzXG5cbmlmICh3aW5kb3cuc2J5U2VtaUVhZ2VyTG9hZGluZykge1xuICAgIHZhciBzYnlZU2NyaXB0SWQgPSBcInNieS15b3V0dWJlLWFwaVwiO1xuICAgIHZhciBzYnlZU2NyaXB0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoc2J5WVNjcmlwdElkKTtcblxuICAgIGlmIChzYnlZU2NyaXB0ID09PSBudWxsKSB7XG4gICAgICAgIHZhciB0YWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO1xuICAgICAgICB2YXIgZmlyc3RTY3JpcHQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKVswXTtcblxuICAgICAgICB0YWcuc3JjID0gXCJodHRwczovL3d3dy55b3V0dWJlLmNvbS9pZnJhbWVfYXBpXCI7XG4gICAgICAgIHRhZy5pZCA9IHNieVlTY3JpcHRJZDtcbiAgICAgICAgZmlyc3RTY3JpcHQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodGFnLCBmaXJzdFNjcmlwdCk7XG5cbiAgICB9XG59XG5cbndpbmRvdy5vbllvdVR1YmVJZnJhbWVBUElSZWFkeSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBudW1GZWVkcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3NiX3lvdXR1YmUnKS5sZW5ndGg7XG4gICAgaWYgKG51bUZlZWRzID4gMCkge1xuICAgICAgICBpZiAod2luZG93LnNieVNlbWlFYWdlckxvYWRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygd2luZG93LnNieSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG51bUZlZWRzOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LnNieS5mZWVkc1tpXS5wbGF5ZXJBUElSZWFkeSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB3aW5kb3cuc2J5QVBJUmVhZHkgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2J5X2luaXQoKTtcbiAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgaWYgKHdpbmRvdy5zYnlFYWdlckxvYWRpbmcpIHtcbiAgICAgICAgICAgICAgICB2YXIgZmxhZ0xpZ2h0Ym94ID0gZmFsc2UsXG4gICAgICAgICAgICAgICAgICBhdXRvcGxheSA9IGZhbHNlO1xuXG4gICAgICAgICAgICAgICAgalF1ZXJ5KCcuc2JfeW91dHViZScpLmVhY2goZnVuY3Rpb24oaW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyICRzZWxmID0galF1ZXJ5KHRoaXMpO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICgkc2VsZi5oYXNDbGFzcygnc2J5X2xheW91dF9saXN0JykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGpRdWVyeSh0aGlzKS5hZGRDbGFzcygnc2J5X3BsYXllcl9sb2FkZWQnKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgJHNlbGYuZmluZCgnLnNieV9pdGVtJykuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWRlb0lEID0galF1ZXJ5KHRoaXMpLmF0dHIoJ2RhdGEtdmlkZW8taWQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL3RoaXMuY3JlYXRlUGxheWVyKCx2aWRlb0lELDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYXllciA9IG5ldyBZVC5QbGF5ZXIoJ3NieV9wbGF5ZXJfJyt2aWRlb0lELCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogJzEwMCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAnMTAwJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlkZW9JZDogdmlkZW9JRCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxheWVyVmFyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZXN0YnJhbmRpbmc6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWw6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRvcGxheTogYXV0b3BsYXlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnRzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnb25TdGF0ZUNoYW5nZSc6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdmlkZW9JRCA9IGRhdGEudGFyZ2V0LmdldFZpZGVvRGF0YSgpWyd2aWRlb19pZCddO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLmRhdGEgIT09IDEpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2VsZi5maW5kKCcuc2J5X2l0ZW0nKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaXRlbVZpZElEID0galF1ZXJ5KHRoaXMpLmF0dHIoJ2RhdGEtdmlkZW8taWQnKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoalF1ZXJ5KHRoaXMpLmZpbmQoJ2lmcmFtZScpLmxlbmd0aCAmJiBqUXVlcnkoZGF0YS50YXJnZXQuYSkuYXR0cignaWQnKSAhPT0galF1ZXJ5KHRoaXMpLmZpbmQoJ2lmcmFtZScpLmF0dHIoJ2lkJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFlULmdldCgnc2J5X3BsYXllcl8nK2l0ZW1WaWRJRCkucGF1c2VWaWRlbygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoJHNlbGYuaGFzQ2xhc3MoJ3NieV9sYXlvdXRfZ2FsbGVyeScpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBqUXVlcnkodGhpcykuYWRkQ2xhc3MoJ3NieV9wbGF5ZXJfbG9hZGVkJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYXllciA9IG5ldyBZVC5QbGF5ZXIoJ3NieV9wbGF5ZXInK2luZGV4LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAnMTAwJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogJzEwMCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlkZW9JZDogalF1ZXJ5KHRoaXMpLmZpbmQoJy5zYnlfaXRlbScpLmZpcnN0KCkuYXR0cignZGF0YS12aWRlby1pZCcpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYXllclZhcnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZXN0YnJhbmRpbmc6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbDogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXV0b3BsYXk6IGF1dG9wbGF5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudHM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ29uU3RhdGVDaGFuZ2UnOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdmlkZW9JRCA9IGRhdGEudGFyZ2V0LmdldFZpZGVvRGF0YSgpWyd2aWRlb19pZCddO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEuZGF0YSAhPT0gMSkgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNlbGYuZmluZCgnLnNieV9pdGVtJykuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaXRlbVZpZElEID0galF1ZXJ5KHRoaXMpLmF0dHIoJ2RhdGEtdmlkZW8taWQnKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChqUXVlcnkodGhpcykuZmluZCgnaWZyYW1lJykubGVuZ3RoICYmIGpRdWVyeShkYXRhLnRhcmdldC5hKS5hdHRyKCdpZCcpICE9PSBqUXVlcnkodGhpcykuZmluZCgnaWZyYW1lJykuYXR0cignaWQnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBZVC5nZXQoJ3NieV9wbGF5ZXJfJytpdGVtVmlkSUQpLnBhdXNlVmlkZW8oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmxhZ0xpZ2h0Ym94ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB3aW5kb3cuc2J5ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbnVtRmVlZHM7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuc2J5LmZlZWRzW2ldLnBsYXllckFQSVJlYWR5ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5zYnlBUElSZWFkeSA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBqUXVlcnkoJy5zYl95b3V0dWJlJykuZWFjaChmdW5jdGlvbihpbmRleCkge1xuICAgICAgICAgICAgdmFyICRzZWxmID0galF1ZXJ5KHRoaXMpO1xuICAgICAgICAgICAgaWYgKCRzZWxmLmZpbmQoJy5zYnlfbGl2ZV9wbGF5ZXInKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBwbGF5ZXIgPSBuZXcgWVQuUGxheWVyKCRzZWxmLmZpbmQoJy5zYnlfbGl2ZV9wbGF5ZXInKS5hdHRyKCdpZCcpLCB7XG4gICAgICAgICAgICAgICAgICAgIGV2ZW50czoge1xuICAgICAgICAgICAgICAgICAgICAgICAgJ29uUmVhZHknOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNlbGYuZmluZCgnLnNieV9saXZlX3BsYXllcicpLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2VsZi5maW5kKCcuc2J5X2l0ZW0nKS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdmlkZW9JRCA9IFlULmdldCgkc2VsZi5maW5kKCcuc2J5X2xpdmVfcGxheWVyJykuYXR0cignaWQnKSkuZ2V0VmlkZW9EYXRhKCkudmlkZW9faWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNlbGYuZmluZCgnLnNieV9wbGF5ZXJfdmlkZW9fdGh1bWJuYWlsJykuYXR0cignZGF0YS12aWRlby1pZCcsdmlkZW9JRCkuY3NzKCd6LWluZGV4JywtMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGl0ZW1PZmZzZXQgPSAkc2VsZi5maW5kKCcuc2J5X2l0ZW0nKS5sZW5ndGgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJtaXREYXRhID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbjogJ3NieV9saXZlX3JldHJpZXZlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWRlb19pZDogdmlkZW9JRCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZWVkX2lkOiAkc2VsZi5hdHRyKCdkYXRhLWZlZWRpZCcpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHM6ICRzZWxmLmF0dHIoJ2RhdGEtc2hvcnRjb2RlLWF0dHMnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG9uU3VjY2VzcyA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLnRyaW0oKS5pbmRleE9mKCd7JykgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmZWVkID0gd2luZG93LnNieS5mZWVkc1tpbmRleF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gSlNPTi5wYXJzZShkYXRhKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tXUFBvc3RzID0gdHlwZW9mIHJlc3BvbnNlLmZlZWRTdGF0dXMuY2hlY2tXUFBvc3RzICE9PSAndW5kZWZpbmVkJyA/IHJlc3BvbnNlLmZlZWRTdGF0dXMuY2hlY2tXUFBvc3RzIDogZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZmVlZC5zZXR0aW5ncy5kZWJ1Z0VuYWJsZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2hlY2tXUFBvc3RzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmVlZC5zZXR0aW5ncy5jaGVja1dQUG9zdHMgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZWVkLnNldHRpbmdzLmNoZWNrV1BQb3N0cyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmVlZC5hcHBlbmROZXdQb3N0cyhyZXNwb25zZS5odG1sKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZlZWQuYWRkUmVzaXplZEltYWdlcyhyZXNwb25zZS5yZXNpemVkSW1hZ2VzKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmVlZC5hZnRlckluaXRpYWxJbWFnZXNMb2FkZWQoKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5mZWVkU3RhdHVzLnNob3VsZFBhZ2luYXRlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmVlZC5vdXRPZlBhZ2VzID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2VsZi5maW5kKCcuc2J5X2xvYWRfYnRuJykuaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZWVkLm91dE9mUGFnZXMgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KCcuc2J5X25vX2pzJykucmVtb3ZlQ2xhc3MoJ3NieV9ub19qcycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNlbGYuZmluZCgnLnNieV9saXZlX3BsYXllcicpLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRzZWxmLmhhc0NsYXNzKCdzYnlfbGF5b3V0X2dhbGxlcnknKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZlZWQuY3JlYXRlUGxheWVyKCdzYnlfcGxheWVyJytmZWVkLmluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzZWxmLmZpbmQoJy5zYnlfcGxheWVyX2l0ZW0nKS5jc3MoJ29wYWNpdHknLDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNlbGYuZmluZCgnLnNieV9pdGVtJykuY3NzKCdvcGFjaXR5JywxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzZWxmLmZpbmQoJy5zYnlfcGxheWVyX2xvYWRpbmcnKS5yZW1vdmVDbGFzcygnc2J5X3BsYXllcl9sb2FkaW5nJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHNlbGYuaGFzQ2xhc3MoJ3NieV9sYXlvdXRfbGlzdCcpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNlbGYuZmluZCgnLnNieV9pdGVtX3ZpZGVvX3RodW1ibmFpbCcpLm9uKCdtb3VzZWVudGVyJyxmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgalF1ZXJ5KHRoaXMpLmNzcygnei1pbmRleCcsLTEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBqUXVlcnkuYWpheCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogc2J5T3B0aW9ucy5hZG1pbkFqYXhVcmwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdwb3N0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogc3VibWl0RGF0YSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2Vzczogb25TdWNjZXNzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKGZsYWdMaWdodGJveCkge1xuICAgICAgICAgICAgaWYgKCFqUXVlcnkoJyNzYnlfbGItcGxheWVyJykubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgalF1ZXJ5KCcuc2JfeW91dHViZScpLmZpcnN0KCkuYXBwZW5kKCc8ZGl2IGNsYXNzPVwic2J5X2xiLXBsYXllci1sb2FkZWQgc2J5X2xiLXBsYXllclwiIGlkPVwic2J5X2xiLXBsYXllclwiIHN0eWxlPVwiZGlzcGxheTogbm9uZTtcIj48L2Rpdj4nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBsYXllciA9IG5ldyBZVC5QbGF5ZXIoJ3NieV9sYi1wbGF5ZXInLCB7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAnMTAwJyxcbiAgICAgICAgICAgICAgICB3aWR0aDogJzEwMCcsXG4gICAgICAgICAgICAgICAgdmlkZW9JZDogalF1ZXJ5KHRoaXMpLmZpbmQoJy5zYnlfaXRlbScpLmZpcnN0KCkuYXR0cignZGF0YS12aWRlby1pZCcpLFxuICAgICAgICAgICAgICAgIHBsYXllclZhcnM6IHtcbiAgICAgICAgICAgICAgICAgICAgbW9kZXN0YnJhbmRpbmc6IDEsXG4gICAgICAgICAgICAgICAgICAgIHJlbDogMCxcbiAgICAgICAgICAgICAgICAgICAgYXV0b3BsYXk6IGF1dG9wbGF5XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB3aW5kb3cuc2J5TGlnaHRib3hQbGF5ZXIgPSBwbGF5ZXI7XG4gICAgICAgIH1cblxuICAgIH1cblxuICAgIGlmICh0eXBlb2Ygd2luZG93LnNieSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdmFyIGV2dCA9IGpRdWVyeS5FdmVudCgnc2J5ZmVlZGFuZHl0cmVhZHknKTtcbiAgICAgICAgalF1ZXJ5KHdpbmRvdykudHJpZ2dlcihldnQpO1xuICAgIH1cblxufTtcbiJdLCJuYW1lcyI6WyIkIiwiYSIsImUiLCJtIiwibCIsImciLCJiIiwiaSIsInNieV9qc19leGlzdHMiLCJzYnlfc3VwcG9ydHNfdmlkZW8iLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjYW5QbGF5VHlwZSIsIndpbmRvdyIsInNieUxpbmtpZnkiLCJSZWdFeHAiLCJjYWxsYmFjayIsInEiLCJwIiwicHVuY3RfcmVnZXhwIiwidSIsInoiLCJ3IiwidiIsIkEiLCJzIiwiRSIsIkMiLCJ5IiwiRCIsIkIiLCJyIiwieCIsInQiLCJ1bmRlZmluZWQiLCJleGVjIiwibGFzdEluZGV4IiwibGVuZ3RoIiwidGVzdCIsImNoYXJBdCIsInN1YnN0ciIsIm1hdGNoIiwicmVwbGFjZSIsIkYiLCJpbmRleE9mIiwicHVzaCIsInNsaWNlIiwiYXBwbHkiLCJjIiwiZCIsInRoaXMiLCJzZXR0aW5ncyIsIm9wdGlvbnMiLCJleHRlbmQiLCJEZWZhdWx0cyIsIiRlbGVtZW50IiwiX2hhbmRsZXJzIiwiX3BsdWdpbnMiLCJfc3VwcmVzcyIsIl9jdXJyZW50IiwiX3NwZWVkIiwiX2Nvb3JkaW5hdGVzIiwiX2JyZWFrcG9pbnQiLCJfd2lkdGgiLCJfaXRlbXMiLCJfY2xvbmVzIiwiX21lcmdlcnMiLCJfd2lkdGhzIiwiX2ludmFsaWRhdGVkIiwiX3BpcGUiLCJfZHJhZyIsInRpbWUiLCJ0YXJnZXQiLCJwb2ludGVyIiwic3RhZ2UiLCJzdGFydCIsImN1cnJlbnQiLCJkaXJlY3Rpb24iLCJfc3RhdGVzIiwidGFncyIsImluaXRpYWxpemluZyIsImFuaW1hdGluZyIsImRyYWdnaW5nIiwiZWFjaCIsInByb3h5IiwiUGx1Z2lucyIsInRvTG93ZXJDYXNlIiwiV29ya2VycyIsImZpbHRlciIsInJ1biIsInNldHVwIiwiaW5pdGlhbGl6ZSIsIml0ZW1zIiwibG9vcCIsImNlbnRlciIsInJld2luZCIsIm1vdXNlRHJhZyIsInRvdWNoRHJhZyIsInB1bGxEcmFnIiwiZnJlZURyYWciLCJtYXJnaW4iLCJzdGFnZVBhZGRpbmciLCJtZXJnZSIsIm1lcmdlRml0IiwiYXV0b1dpZHRoIiwic3RhcnRQb3NpdGlvbiIsInJ0bCIsInNtYXJ0U3BlZWQiLCJmbHVpZFNwZWVkIiwiZHJhZ0VuZFNwZWVkIiwicmVzcG9uc2l2ZSIsInJlc3BvbnNpdmVSZWZyZXNoUmF0ZSIsInJlc3BvbnNpdmVCYXNlRWxlbWVudCIsImZhbGxiYWNrRWFzaW5nIiwiaW5mbyIsIm5lc3RlZEl0ZW1TZWxlY3RvciIsIml0ZW1FbGVtZW50Iiwic3RhZ2VFbGVtZW50IiwicmVmcmVzaENsYXNzIiwibG9hZGVkQ2xhc3MiLCJsb2FkaW5nQ2xhc3MiLCJydGxDbGFzcyIsInJlc3BvbnNpdmVDbGFzcyIsImRyYWdDbGFzcyIsIml0ZW1DbGFzcyIsInN0YWdlQ2xhc3MiLCJzdGFnZU91dGVyQ2xhc3MiLCJncmFiQ2xhc3MiLCJXaWR0aCIsIkRlZmF1bHQiLCJJbm5lciIsIk91dGVyIiwiVHlwZSIsIkV2ZW50IiwiU3RhdGUiLCJ3aWR0aCIsInJlbGF0aXZlIiwiJHN0YWdlIiwiY2hpbGRyZW4iLCJyZW1vdmUiLCJjc3MiLCJ0b0ZpeGVkIiwiZiIsIk1hdGgiLCJtaW4iLCJtYXgiLCJjZWlsIiwiaCIsIm5vcm1hbGl6ZSIsIm91dGVySFRNTCIsImFkZENsYXNzIiwiYXBwZW5kVG8iLCJwcmVwZW5kVG8iLCJhYnMiLCJlcSIsInJlbW92ZUF0dHIiLCJpbmRleCIsIm1pbmltdW0iLCJtYXhpbXVtIiwicmVzZXQiLCJhbmltYXRlIiwiY29vcmRpbmF0ZXMiLCJvcCIsInJlbW92ZUNsYXNzIiwiam9pbiIsInByb3RvdHlwZSIsImVudGVyIiwidHJpZ2dlciIsInRvZ2dsZUNsYXNzIiwiaXMiLCJmaW5kIiwicHJlbG9hZEF1dG9XaWR0aEltYWdlcyIsIndyYXAiLCJhcHBlbmQiLCJwYXJlbnQiLCJub3QiLCJyZWZyZXNoIiwiaW52YWxpZGF0ZSIsInJlZ2lzdGVyRXZlbnRIYW5kbGVycyIsImxlYXZlIiwidmlld3BvcnQiLCJOdW1iZXIiLCJhdHRyIiwicHJvcGVydHkiLCJuYW1lIiwidmFsdWUiLCJvcHRpb25zTG9naWMiLCJwcmVwYXJlIiwiY29udGVudCIsImRhdGEiLCJ1cGRhdGUiLCJhbGwiLCJncmVwIiwib25UaHJvdHRsZWRSZXNpemUiLCJjbGVhclRpbWVvdXQiLCJyZXNpemVUaW1lciIsInNldFRpbWVvdXQiLCJvblJlc2l6ZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsInN1cHBvcnQiLCJ0cmFuc2l0aW9uIiwib24iLCJlbmQiLCJvblRyYW5zaXRpb25FbmQiLCJvbkRyYWdTdGFydCIsIm9uRHJhZ0VuZCIsIndoaWNoIiwidHJhbnNmb3JtIiwic3BsaXQiLCJwb3NpdGlvbiIsImxlZnQiLCJ0b3AiLCJzdG9wIiwidHlwZSIsInNwZWVkIiwiRGF0ZSIsImdldFRpbWUiLCJvbmUiLCJkaWZmZXJlbmNlIiwib25EcmFnTW92ZSIsInByZXZlbnREZWZhdWx0Iiwib2ZmIiwiY2xvc2VzdCIsInRyYW5zZm9ybTNkIiwibWFwIiwic3VwcHJlc3MiLCJyZWxlYXNlIiwiaXNOdW1lcmljIiwibWVyZ2VycyIsImNsb25lcyIsImR1cmF0aW9uIiwidG8iLCJuZXh0IiwicHJldiIsInN0b3BQcm9wYWdhdGlvbiIsInNyY0VsZW1lbnQiLCJvcmlnaW5hbFRhcmdldCIsImdldCIsImlubmVyV2lkdGgiLCJkb2N1bWVudEVsZW1lbnQiLCJjbGllbnRXaWR0aCIsImNvbnNvbGUiLCJ3YXJuIiwiZW1wdHkiLCJqUXVlcnkiLCJub2RlVHlwZSIsImFkZEJhY2siLCJhZGQiLCJhZnRlciIsImJlZm9yZSIsInNwbGljZSIsIkltYWdlIiwic3JjIiwiZGVzdHJveSIsInVud3JhcCIsImNvbnRlbnRzIiwicmVtb3ZlRGF0YSIsImFkZEV2ZW50TGlzdGVuZXIiLCJhdHRhY2hFdmVudCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJkZXRhY2hFdmVudCIsIml0ZW0iLCJjb3VudCIsImNhbWVsQ2FzZSIsImoiLCJyZWxhdGVkVGFyZ2V0Iiwib25UcmlnZ2VyIiwicmVnaXN0ZXIiLCJjYWxsIiwiY29uY2F0IiwiZXZlbnQiLCJzcGVjaWFsIiwib3dsIiwiX2RlZmF1bHQiLCJuYW1lc3BhY2UiLCJhcmd1bWVudHMiLCJpbkFycmF5Iiwib3JpZ2luYWxFdmVudCIsInRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsInBhZ2VYIiwicGFnZVkiLCJjbGllbnRYIiwiY2xpZW50WSIsImlzTmFOIiwicGFyc2VGbG9hdCIsImZuIiwic2J5T3dsQ2Fyb3VzZWwiLCJBcnJheSIsIkNvbnN0cnVjdG9yIiwiWmVwdG8iLCJfY29yZSIsIl9pbnRlcnZhbCIsIl92aXNpYmxlIiwiYXV0b1JlZnJlc2giLCJ3YXRjaCIsImF1dG9SZWZyZXNoSW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsImNsZWFySW50ZXJ2YWwiLCJPYmplY3QiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiQXV0b1JlZnJlc2giLCJfbG9hZGVkIiwibGF6eUxvYWQiLCJsb2FkIiwiZGV2aWNlUGl4ZWxSYXRpbyIsImVsZW1lbnQiLCJ1cmwiLCJvbmxvYWQiLCJvcGFjaXR5IiwiaGFuZGxlcnMiLCJMYXp5IiwiYXV0b0hlaWdodCIsImF1dG9IZWlnaHRDbGFzcyIsInRvQXJyYXkiLCJoZWlnaHQiLCJBdXRvSGVpZ2h0IiwiX3ZpZGVvcyIsIl9wbGF5aW5nIiwidmlkZW8iLCJpc0luRnVsbFNjcmVlbiIsImZldGNoIiwicGxheSIsInZpZGVvSGVpZ2h0IiwidmlkZW9XaWR0aCIsIkVycm9yIiwiaWQiLCJ0aHVtYm5haWwiLCJrIiwiYWpheCIsImpzb25wIiwiZGF0YVR5cGUiLCJzdWNjZXNzIiwidGh1bWJuYWlsX2xhcmdlIiwiZnJhbWVncmFiX3VybCIsImluc2VydEFmdGVyIiwiZnVsbHNjcmVlbkVsZW1lbnQiLCJtb3pGdWxsU2NyZWVuRWxlbWVudCIsIndlYmtpdEZ1bGxzY3JlZW5FbGVtZW50IiwiaGFzQ2xhc3MiLCJWaWRlbyIsImNvcmUiLCJzd2FwcGluZyIsInByZXZpb3VzIiwiYW5pbWF0ZU91dCIsImFuaW1hdGVJbiIsInN3YXAiLCJhbmltYXRpb24iLCJjbGVhciIsIkFuaW1hdGUiLCJfdGltZW91dCIsIl9wYXVzZWQiLCJhdXRvcGxheSIsIl9zZXRBdXRvUGxheUludGVydmFsIiwiYXV0b3BsYXlIb3ZlclBhdXNlIiwicGF1c2UiLCJhdXRvcGxheVRpbWVvdXQiLCJhdXRvcGxheVNwZWVkIiwiX2dldE5leHRUaW1lb3V0IiwiaGlkZGVuIiwiX2luaXRpYWxpemVkIiwiX3BhZ2VzIiwiX2NvbnRyb2xzIiwiX3RlbXBsYXRlcyIsIl9vdmVycmlkZXMiLCJkb3RzRGF0YSIsImRvdENsYXNzIiwicG9wIiwiZHJhdyIsIm5hdiIsIm5hdlRleHQiLCJuYXZTcGVlZCIsIm5hdkVsZW1lbnQiLCJuYXZDb250YWluZXIiLCJuYXZDb250YWluZXJDbGFzcyIsIm5hdkNsYXNzIiwic2xpZGVCeSIsImRvdHNDbGFzcyIsImRvdHMiLCJkb3RzRWFjaCIsImRvdHNTcGVlZCIsImRvdHNDb250YWluZXIiLCIkcmVsYXRpdmUiLCIkcHJldmlvdXMiLCJodG1sIiwiJG5leHQiLCJwcm9wIiwiJGFic29sdXRlIiwib3ZlcmlkZXMiLCJwYWdlIiwic2l6ZSIsImdldFBvc2l0aW9uIiwiTmF2aWdhdGlvbiIsIl9oYXNoZXMiLCJsb2NhdGlvbiIsImhhc2giLCJzdWJzdHJpbmciLCJVUkxoYXNoTGlzdGVuZXIiLCJIYXNoIiwidG9VcHBlckNhc2UiLCJzdHlsZSIsIldlYmtpdFRyYW5zaXRpb24iLCJNb3pUcmFuc2l0aW9uIiwiT1RyYW5zaXRpb24iLCJXZWJraXRBbmltYXRpb24iLCJNb3pBbmltYXRpb24iLCJPQW5pbWF0aW9uIiwiU3RyaW5nIiwiT3dsMnJvdyIsInNjb3BlIiwib3dsMnJvdyIsImJ1aWxkMnJvdyIsIm93bDJyb3dUYXJnZXQiLCJvd2wycm93Q29udGFpbmVyIiwib3dsMnJvd0RpcmVjdGlvbiIsInRoaXNTY29wZSIsImNhcm91c2VsIiwiY2Fyb3VzZWxJdGVtcyIsImFFdmVuRWxlbWVudHMiLCJhT2RkRWxlbWVudHMiLCJsZWZ0VG9yaWdodCIsInVwVG9kb3duIiwibzJ3Q29udGFpbmVyQ2xhc3MiLCJvd2xNYXJnaW4iLCJjYXJvdXNlbEl0ZW1zTGVuZ3RoIiwiZmlyc0FyciIsInNlY29uZEFyciIsInJvd0NvbnRhaW5lciIsImZpcnN0Um93RWxlbWVudCIsIm1hcmdpbkJvdHRvbSIsImV2ZW5FbGVtZW50IiwiU2J5IiwiZmVlZHMiLCJjdGFzIiwic2J5T3B0aW9ucyIsImlzVG91Y2giLCJTYnlGZWVkIiwiZWwiLCJwbGFjZWhvbGRlclVSTCIsInNieSIsInBsYWNlaG9sZGVyIiwibmFycm93UGxheWVyIiwicGxhY2Vob2xkZXJOYXJyb3ciLCJwbGF5ZXJBUElSZWFkeSIsImNvbnNlbnRHaXZlbiIsInBsYXllcnMiLCJtaW5JbWFnZVdpZHRoIiwiaW1hZ2VSZXNvbHV0aW9uIiwicmVzaXplZEltYWdlcyIsIm5lZWRzUmVzaXppbmciLCJvdXRPZlBhZ2VzIiwiaXNJbml0aWFsaXplZCIsIm1vc3RSZWNlbnRseUxvYWRlZFBvc3RzIiwiZW1iZWRVUkwiLCJhbGxvd0Nvb2tpZXMiLCJTYnlGZWVkUHJvIiwiQ1RBIiwiaW5pdExheW91dCIsImluaXRHYWxsZXJ5TGF5b3V0IiwiaW5pdEdyaWQiLCJpbml0Q2Fyb3VzZWxzIiwiZXZ0IiwiZmVlZCIsInNieVNlbWlFYWdlckxvYWRpbmciLCJwbGF5ZXJJRCIsInZpZGVvSUQiLCJmaXJzdCIsInNieUxpZ2h0Ym94UGxheWVyIiwiYXJncyIsImhvc3QiLCJwcm90b2NvbCIsInZpZGVvSWQiLCJwbGF5ZXJWYXJzIiwibW9kZXN0YnJhbmRpbmciLCJyZWwiLCJldmVudHMiLCJnZXRWaWRlb0RhdGEiLCJhZnRlclN0YXRlQ2hhbmdlIiwibWF5YmVBZGRDVEEiLCJZVCIsIlBsYXllciIsIiRzZWxmIiwiZ2VuZXJhbCIsImNvbHMiLCJjb2xzbW9iaWxlIiwiYXJyb3dzIiwicGFnaW5hdGlvbiIsInJvd3MiLCJpdGVtc1RhYmxldFNtYWxsIiwiaXRlbXNNb2JpbGUiLCJoYXMycm93cyIsInBhcnNlSW50IiwiY2Fyb3VzZWxBcmdzIiwib25DaGFuZ2UiLCJhZnRlclJlc2l6ZSIsIm9uSW5pdGlhbGl6ZSIsImZhZGVJbiIsIiRuYXZFbGVtZW50c1dyYXBwZXIiLCIkZG90cyIsIiRwcmV2IiwiJG5hdiIsIiRkb3QiLCJ3aWR0aERvdHMiLCJoaWRlIiwic3RyaXBFbW9qaWh0bWwiLCIkZWwiLCJyZXBsYWNlV2l0aCIsImFmdGVySXRlbVJldmVhbGVkIiwiJGl0ZW0iLCIkY2FwdGlvbiIsIiRob3ZlckNhcHRpb24iLCJ0ZXh0X2xpbWl0IiwiZGVzY3JpcHRpb25sZW5ndGgiLCJjYXB0aW9uVGV4dCIsImJyQ291bnQiLCJickFkanVzdCIsIiRzaXppbmdDYXB0aW9uIiwiY2FwdGlvbldpZHRoIiwiZm9udFNpemUiLCJjaGFyYWN0ZXJzUGVyTGluZSIsIm1heENoYXJzUGVyTGluZSIsImZsb29yIiwicHJvamVjdGVkTWF4TGluZXMiLCJzcGxpdENhcHRpb24iLCJsaW5lc0NvbnN1bWVkIiwiYWRqdXN0ZWRUZXh0TGltaXQiLCJsaW5lc0xlZnQiLCJ0aGlzTGluZXNDb25zdW1lZCIsInNob3J0X3RleHQiLCJsYXN0SW5kZXhPZiIsImhvdmVyQ2FwdGlvblRleHQiLCJzaG93IiwiY2FwdGlvbnRleHQiLCJzZXRVcENUQSIsImRpc2FibGVsaWdodGJveCIsImNhcHRpb25saW5rcyIsImNhcCIsIiRzYnlfcGhvdG9fd3JhcCIsIiRzYnlfbGluayIsImZlZWRPcHRpb25zIiwiaG92ZXJlZmZlY3QiLCJhZnRlckZlZWRTZXQiLCJ0ZXh0IiwiY3RhSW5DYXB0aW9uIiwiY3RhRGV0ZWN0IiwiZ2V0RGVmYXVsdENUQSIsImN0YSIsImRlZmF1bHRMaW5rIiwiZGVmYXVsdFRleHQiLCJyZWxhdGVkIiwiZGVmYXVsdFBvc3RzIiwic2V0SW1hZ2VIZWlnaHQiLCJzZXRJbWFnZVJlc29sdXRpb24iLCJtYXliZVJhaXNlSW1hZ2VSZXNvbHV0aW9uIiwic2V0SW1hZ2VTaXplQ2xhc3MiLCJzZXRBbGxDVEFEaW1lbnNpb25zIiwic2l6ZVBsYXllciIsInNpemVJdGVtcyIsIkNUQU9iaiIsInNldENUQVN0eWxlcyIsImFmdGVyU2VuZENoZWNrV1BQb3N0c1RvU2VydmVyIiwicmVzcG9uc2UiLCJzYnlfdmlld19jb3VudCIsInNieV9jb21tZW50X2NvdW50Iiwic2J5X2xpa2VfY291bnQiLCJzYnlfbGl2ZV9icm9hZGNhc3QiLCJicm9hZGNhc3RfdHlwZSIsImxpdmVfc3RyZWFtaW5nX3N0cmluZyIsImxpdmVfc3RyZWFtaW5nX2RhdGUiLCJsaXZlX3N0cmVhbWluZ190aW1lc3RhbXAiLCJzYnlfZGVzY3JpcHRpb24iLCIkcGxheWVyIiwidG9nZ2xlQ1RBIiwiY2hhbmdlUGxheWVySW5mbyIsIiRuZXdJdGVtIiwiY2xvbmUiLCJTYnlDVEEiLCJTYnlMaWdodGJveEJ1aWxkZXIiLCJTYnlMaWdodGJveEJ1aWxkZXJQcm8iLCJnZXREYXRhIiwiZmVlZEluZGV4IiwibGluayIsInRpdGxlIiwidmlkZW9UaXRsZSIsImF2YXRhciIsInVzZXIiLCJjaGFubmVsVVJMIiwidGVtcGxhdGUiLCJiZWZvcmVQbGF5ZXJTZXR1cCIsIiRsaWdodGJveCIsImFsYnVtIiwiYWZ0ZXJQbGF5ZXJTZXR1cCIsImF2YWlsYWJsZUF2YXRhclVybHMiLCJzYnlMaWdodGJveENhcHRpb24iLCJzYnlMaWdodGJveEFjdGlvbiIsImF2YXRhckltYWdlSHRtbCIsInVzZXJIdG1sIiwiY2FsbGJhY2tBcmdzIiwiZmVlZE9iakluQ29udGV4dCIsInN0YXRlIiwibnVtSXRlbXMiLCJudW1JdGVtQ29sdW1ucyIsInNieUFqYXgiLCJzdWJtaXREYXRhIiwib25TdWNjZXNzIiwiYWRtaW5BamF4VXJsIiwiY3JlYXRlUGFnZSIsImNyZWF0ZUZlZWRzIiwiY3JlYXRlRmVlZHNBcmdzIiwic2J5YWpheHVybCIsImhvc3RuYW1lIiwibWF5YmVBZGRZVEFQSSIsInlvdXR1YmVTY3JpcHRJZCIsImdldEVsZW1lbnRCeUlkIiwidGFnIiwiZmlyc3RTY3JpcHQiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInBhcmVudE5vZGUiLCJpbnNlcnRCZWZvcmUiLCJjcmVhdGVMaWdodGJveCIsInNieV90aW1lciIsImxiQnVpbGRlciIsInNieV9sYl9kZWxheSIsInNieV9jYWxsYmFjayIsInNieV9tcyIsImZhZGVEdXJhdGlvbiIsImZpdEltYWdlc0luVmlld3BvcnQiLCJyZXNpemVEdXJhdGlvbiIsInBvc2l0aW9uRnJvbVRvcCIsInNob3dJbWFnZU51bWJlckxhYmVsIiwiYWx3YXlzU2hvd05hdk9uVG91Y2hEZXZpY2VzIiwid3JhcEFyb3VuZCIsImFsYnVtTGFiZWwiLCJjdXJyZW50SW1hZ2VJbmRleCIsImluaXQiLCJlbmFibGUiLCJidWlsZCIsImN1cnJlbnRUYXJnZXQiLCIkb3ZlcmxheSIsIiRvdXRlckNvbnRhaW5lciIsIiRjb250YWluZXIiLCJjb250YWluZXJUb3BQYWRkaW5nIiwiY29udGFpbmVyUmlnaHRQYWRkaW5nIiwiY29udGFpbmVyQm90dG9tUGFkZGluZyIsImNvbnRhaW5lckxlZnRQYWRkaW5nIiwicGF1c2VQbGF5ZXIiLCJmYWRlT3V0IiwiY2hhbmdlSW1hZ2UiLCJzaXplT3ZlcmxheSIsInZpc2liaWxpdHkiLCJzY3JvbGxUb3AiLCJzY3JvbGxMZWZ0IiwiZGlzYWJsZUtleWJvYXJkTmF2Iiwic2l6ZUNvbnRhaW5lciIsInNob3dJbWFnZSIsIm91dGVyV2lkdGgiLCJvdXRlckhlaWdodCIsInVwZGF0ZU5hdiIsInVwZGF0ZURldGFpbHMiLCJwcmVsb2FkTmVpZ2hib3JpbmdJbWFnZXMiLCJlbmFibGVLZXlib2FyZE5hdiIsImNyZWF0ZUV2ZW50IiwibG9hZFZpZGVvQnlJZCIsImZ1bGxJbWFnZSIsInByZXBlbmQiLCJrZXlib2FyZEFjdGlvbiIsImtleWNvZGUiLCJrZXlDb2RlIiwia2V5IiwiZnJvbUNoYXJDb2RlIiwidG9nZ2xlIiwiaXNBZG1pbiIsIndoZW5GZWVkc0NyZWF0ZWQiLCJmbGFncyIsIkpTT04iLCJwYXJzZSIsInRyaWdnZXJlZFRlc3QiLCJsb2ciLCJudW0iLCJpbWdSZXMiLCJmZWVkSUQiLCJwb3N0SUQiLCJzaG9ydENvZGVBdHRzIiwicmVzaXppbmdFbmFibGVkIiwiaW1hZ2VMb2FkRW5hYmxlZCIsImRlYnVnRW5hYmxlZCIsImZhdm9yTG9jYWwiLCJhamF4UG9zdExvYWQiLCJjaGVja1dQUG9zdHMiLCJzaW5nbGVDaGVja1Bvc3RzIiwiZ2RwciIsIm5vQ0ROIiwibGlnaHRib3hFbmFibGVkIiwibG9jYXRvciIsImF1dG9NaW5SZXMiLCJzYnlHZXROZXdGZWVkIiwic2J5QVBJUmVhZHkiLCJzZXRSZXNpemVkSW1hZ2VzIiwiYWZ0ZXJGZWVkc0NyZWF0ZWQiLCIkdGhpc0hlYWRlciIsImVuY29kZUhUTUwiLCJyYXciLCJ1cmxEZXRlY3QiLCJjdGFNYXRjaGVzIiwidXJsTWF0Y2hlcyIsInRyaW0iLCJzaHVmZmxlIiwiYXJyYXkiLCJ0ZW1wb3JhcnlWYWx1ZSIsInJhbmRvbUluZGV4IiwiY3VycmVudEluZGV4IiwicmFuZG9tIiwiY2hlY2tDb25zZW50IiwiZ2V0TmV3UG9zdFNldCIsImFmdGVySW5pdGlhbEltYWdlc0xvYWRlZCIsInNieV9kZWxheSIsIm1heWJlUmFpc2VTaW5nbGVJbWFnZVJlc29sdXRpb24iLCJvblRodW1ibmFpbENsaWNrIiwiY2FuQ3JlYXRlUGxheWVyIiwicGxheWVyIiwicGxheWVyRWFnZXJMb2FkZWQiLCJjcmVhdGVQbGF5ZXIiLCJnZXRWaWRlb0lEIiwiZmFkZVRvIiwiaXRlbVZpZElEIiwicGF1c2VWaWRlbyIsInNieUVhZ2VyTG9hZGluZyIsIm5ld1BsYXllciIsImxvYWRNb3JlQnV0dG9uSW5pdCIsImhpZGVFeHRyYUl0ZW1zRm9yV2lkdGgiLCJiZWZvcmVOZXdJbWFnZXNSZXZlYWxlZCIsInJldmVhbE5ld0ltYWdlcyIsImFmdGVyTmV3SW1hZ2VzUmV2ZWFsZWQiLCJhcHBseUZ1bGxGZWF0dXJlcyIsInJlbW92ZUZlYXR1cmVzIiwiYWZ0ZXJMb2FkTW9yZUNsaWNrZWQiLCIkYnV0dG9uIiwiYWZ0ZXJOZXdJbWFnZXNMb2FkZWQiLCIkcGxheWVyVGh1bWJuYWlsIiwicGxheWVyV2lkdGgiLCJuZXdQbGF5ZXJIZWlnaHQiLCJ0aHVtYldpZHRoIiwibmV3VGh1bWJIZWlnaHQiLCJhcHBseUltYWdlTGlxdWlkIiwic2J5Q3VzdG9tSlMiLCJvblRodW1ibmFpbEVudGVyIiwib25UaHVtYm5haWxMZWF2ZSIsImxpZ2h0Ym94UGxhY2Vob2xkZXIiLCJsaWdodGJveFBsYWNlaG9sZGVyTmFycm93IiwiJHNieV9pdGVtX3RyYW5zaXRpb25fZWwiLCJsaXN0ZW5Gb3JWaXNpYmlsaXR5Q2hhbmdlIiwic2VuZE5lZWRzUmVzaXppbmdUb1NlcnZlciIsInNlbmRDaGVja1dQUG9zdHNUb1NlcnZlciIsIml0ZW1PZmZzZXQiLCJhY3Rpb24iLCJuZWVkc19yZXNpemluZyIsIm9mZnNldCIsImZlZWRfaWQiLCJsb2NhdGlvbkd1ZXNzIiwicG9zdF9pZCIsImF0dHMiLCJwb3N0cyIsImN1cnJlbnRfcmVzb2x1dGlvbiIsImZlZWRTdGF0dXMiLCJhcHBlbmROZXdQb3N0cyIsImFkZFJlc2l6ZWRJbWFnZXMiLCJzaG91bGRQYWdpbmF0ZSIsIm5ld1Bvc3RzSHRtbCIsImxhc3QiLCJyZXNpemVkSW1hZ2VzVG9BZGQiLCJpbWFnZUlEIiwiZm9yY2VDaGFuZ2UiLCJpbWdTcmNTZXQiLCJnZXRJbWFnZVVybHMiLCJjdXJyZW50VXJsIiwiY3VycmVudFJlcyIsIm5ld1JlcyIsImdldEJlc3RSZXNvbHV0aW9uRm9yQXV0byIsInJlYXNvbiIsIm5ld1VybCIsInNyY1NldCIsImp1c3ROZXciLCJpdGVtc1NlbGVjdG9yIiwiY29sV2lkdGgiLCJhc3BlY3RSYXRpbyIsImJlc3RXaWR0aCIsImJlc3RXaWR0aFJvdW5kZWQiLCJjdXN0b21TaXplcyIsImRvbmUiLCJsYXlvdXQiLCJudW1tb2JpbGUiLCJmZWVkV2lkdGgiLCJwaG90b1BhZGRpbmciLCJnZXRDb2x1bW5Db3VudCIsInNldE1pbkltYWdlV2lkdGgiLCJmb3VuZFNpemVzIiwicmVzaXplZF91cmwiLCJhZGRUb05lZWRzUmVzaXppbmciLCIkdGFyZ2VFbCIsImdldEF2YXRhclVybCIsInVzZXJuYW1lIiwiZmF2b3JUeXBlIiwiYXZhaWxhYmxlQXZhdGFycyIsImF2YXRhcnMiLCJoZWFkIiwic2J5X2ltZ0xpcXVpZCIsIlZFUiIsImJnc19BdmFpbGFibGUiLCJiZ3NfQ2hlY2tSdW5uZWQiLCJkZWZhdWx0cyIsImZpbGwiLCJ2ZXJ0aWNhbEFsaWduIiwiaG9yaXpvbnRhbEFsaWduIiwidXNlQmFja2dyb3VuZFNpemUiLCJ1c2VEYXRhSHRtbEF0dHIiLCJkZWxheSIsImZhZGVJblRpbWUiLCJyZW1vdmVCb3hCYWNrZ3JvdW5kIiwiaGFyZFBpeGVscyIsInJlc3BvbnNpdmVDaGVja1RpbWUiLCJ0aW1lY2hlY2t2aXNpYmlsaXR5Iiwib25TdGFydCIsIm9uRmluaXNoIiwib25JdGVtU3RhcnQiLCJvbkl0ZW1GaW5pc2giLCJvbkl0ZW1FcnJvciIsImdldENvbXB1dGVkU3R5bGUiLCJiYWNrZ3JvdW5kU2l6ZSIsImFjdHVhbFNpemUiLCJvZmZzZXRXaWR0aCIsIm9mZnNldEhlaWdodCIsInNpemVPbGQiLCJuIiwibyIsIkJvb2xlYW4iLCJpc0lFIiwiaWVGYWRlSW5EaXNhYmxlZCIsImVuY29kZVVSSSIsImRpc3BsYXkiLCJvdmVyZmxvdyIsIm9uZXJyb3IiLCJjb21wbGV0ZSIsImluamVjdENzcyIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiYXBwZW5kQ2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsInNieUFkZEltZ0xpcXVpZCIsInJ1bk9uTG9hZCIsImZyZXF1ZW5jeSIsInNieVByZXZpb3VzVmlzaWJpbGl0eSIsImNvbnRhaW5zIiwic2J5Q2hlY2tWaXNpYmlsaXR5Iiwic2J5VmlzaWJpbGl0eUNoYW5nZWQiLCJ2aXNpYmxlIiwicmV0dXJuQ29scyIsInNieVdpbmRvd1dpZHRoIiwiJGNsaWNrZWQiLCJpc1BsYXllciIsInBsYXlWaWRlb0luUGxheWVyIiwiYWZ0ZXJWaWRlb0NoYW5nZWQiLCIkc2J5SXRlbSIsIiRob3ZlcmVkIiwiQ0xJX0Nvb2tpZSIsInJlYWQiLCJDTElfQUNDRVBUX0NPT0tJRV9OQU1FIiwiY25BcmdzIiwicGFydHMiLCJjb29raWUiLCJ2YWwiLCJzaGlmdCIsImNvb2tpZWNvbnNlbnQiLCJjbmFtZSIsImNBcnIiLCJzYnlDbXBsekdldENvb2tpZSIsIkNvb2tpZWJvdCIsImNvbnNlbnRlZCIsIkJvcmxhYnNDb29raWUiLCJjaGVja0Nvb2tpZUNvbnNlbnQiLCJhZnRlckNvbnNlbnRUb2dnbGVkIiwiJGZlZWQiLCJjcmVhdGUiLCJwbGF5ZXJIZWlnaHQiLCJoZWlnaHREaWYiLCJkYXRhTnVtIiwicmVzZXRDVEEiLCJjdGFPYmoiLCJnZXRSZWxhdGVkIiwiYWRkZWQiLCJjdXJyZW50VmlkZW9JZCIsIm5ld1ZpZGVvSUQiLCIkZmVlZEVsIiwicmVsYXRlZFZpZHMiLCJ0aGlzVmlkIiwic3R5bGVDbGFzcyIsImNvbG9yIiwidGV4dENvbG9yIiwib3BlbkF0dHMiLCJvcGVuVHlwZSIsImN0YU92ZXJsYXlIZWlnaHQiLCJudW1Sb3dzIiwidG90YWxWZXJ0aWNhbFBhZGRpbmciLCJtYXhDVEFJdGVtSGVpZ2h0Iiwic2J5X2luaXQiLCJzYnlfY2Fyb3VzZWxfaW5pdCIsImVhZ2VybG9hZCIsInlvdXR1YmVfdXJsIiwic2VtaUVhZ2VybG9hZCIsInJlYWR5IiwiZGV0YWlsIiwiY2F0ZWdvcnkiLCJzYnlZU2NyaXB0SWQiLCJvbllvdVR1YmVJZnJhbWVBUElSZWFkeSIsIm51bUZlZWRzIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsImZsYWdMaWdodGJveCIsInZpZGVvX2lkIl0sInNvdXJjZVJvb3QiOiIifQ==