(()=>{"use strict";const e=function(e){return"string"!=typeof e||""===e?(console.error("The namespace must be a non-empty string."),!1):!!/^[a-zA-Z][a-zA-Z0-9_.\-\/]*$/.test(e)||(console.error("The namespace can only contain numbers, letters, dashes, periods, underscores and slashes."),!1)},t=function(e){return"string"!=typeof e||""===e?(console.error("The hook name must be a non-empty string."),!1):/^__/.test(e)?(console.error("The hook name cannot begin with `__`."),!1):!!/^[a-zA-Z][a-zA-Z0-9_.-]*$/.test(e)||(console.error("The hook name can only contain numbers, letters, dashes, periods and underscores."),!1)},i=function(i,o){return function(n,s,c){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:10;const a=i[o];if(!t(n))return;if(!e(s))return;if("function"!=typeof c)return void console.error("The hook callback must be a function.");if("number"!=typeof r)return void console.error("If specified, the hook priority must be a number.");const l={callback:c,priority:r,namespace:s};if(a[n]){const e=a[n].handlers;let t;for(t=e.length;t>0&&!(r>=e[t-1].priority);t--);t===e.length?e[t]=l:e.splice(t,0,l),a.__current.forEach((e=>{e.name===n&&e.currentIndex>=t&&e.currentIndex++}))}else a[n]={handlers:[l],runs:0};"hookAdded"!==n&&i.doAction("hookAdded",n,s,c,r)}},o=function(i,o){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return function(s,c){const r=i[o];if(!t(s))return;if(!n&&!e(c))return;if(!r[s])return 0;let a=0;if(n)a=r[s].handlers.length,r[s]={runs:r[s].runs,handlers:[]};else{const e=r[s].handlers;for(let t=e.length-1;t>=0;t--)e[t].namespace===c&&(e.splice(t,1),a++,r.__current.forEach((e=>{e.name===s&&e.currentIndex>=t&&e.currentIndex--})))}return"hookRemoved"!==s&&i.doAction("hookRemoved",s,c),a}},n=function(e,t){return function(i,o){const n=e[t];return void 0!==o?i in n&&n[i].handlers.some((e=>e.namespace===o)):i in n}},s=function(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return function(o){const n=e[t];n[o]||(n[o]={handlers:[],runs:0}),n[o].runs++;const s=n[o].handlers;for(var c=arguments.length,r=new Array(c>1?c-1:0),a=1;a<c;a++)r[a-1]=arguments[a];if(!s||!s.length)return i?r[0]:void 0;const l={name:o,currentIndex:0};for(n.__current.push(l);l.currentIndex<s.length;){const e=s[l.currentIndex].callback.apply(null,r);i&&(r[0]=e),l.currentIndex++}return n.__current.pop(),i?r[0]:void 0}},c=function(e,t){return function(){var i,o;const n=e[t];return null!==(i=null===(o=n.__current[n.__current.length-1])||void 0===o?void 0:o.name)&&void 0!==i?i:null}},r=function(e,t){return function(i){const o=e[t];return void 0===i?void 0!==o.__current[0]:!!o.__current[0]&&i===o.__current[0].name}},a=function(e,i){return function(o){const n=e[i];if(t(o))return n[o]&&n[o].runs?n[o].runs:0}};class l{constructor(){this.actions=Object.create(null),this.actions.__current=[],this.filters=Object.create(null),this.filters.__current=[],this.addAction=i(this,"actions"),this.addFilter=i(this,"filters"),this.removeAction=o(this,"actions"),this.removeFilter=o(this,"filters"),this.hasAction=n(this,"actions"),this.hasFilter=n(this,"filters"),this.removeAllActions=o(this,"actions",!0),this.removeAllFilters=o(this,"filters",!0),this.doAction=s(this,"actions"),this.applyFilters=s(this,"filters",!0),this.currentAction=c(this,"actions"),this.currentFilter=c(this,"filters"),this.doingAction=r(this,"actions"),this.doingFilter=r(this,"filters"),this.didAction=a(this,"actions"),this.didFilter=a(this,"filters")}}const d=new l,{addAction:u,addFilter:p,removeAction:m,removeFilter:h,hasAction:f,hasFilter:g,removeAllActions:v,removeAllFilters:b,doAction:S,applyFilters:y,currentAction:w,currentFilter:_,doingAction:z,doingFilter:F,didAction:A,didFilter:P,actions:T,filters:D}=d;function x(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,o)}return i}function k(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?x(Object(i),!0).forEach((function(t){C(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):x(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function C(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}var E,B=VueColor.Sketch,I="sby-dummy-lightbox-component";SB_Customizer.initPromise.then((function(e){var t=k(k({},e.extraMethods),{},{updateColorValue:function(e){var t=this;t.customizerFeedData.settings[e]=1==t.customizerFeedData.settings[e].a?t.customizerFeedData.settings[e].hex:t.customizerFeedData.settings[e].hex8},customizerStyleMaker:function(){var e=this;return!!e.customizerSidebarBuilder&&(e.feedStyle="",Object.values(e.customizerSidebarBuilder).map((function(t){e.customizerSectionStyle(t.sections)})),'<style type="text/css">'+e.feedStyle+"</style>")},customizerSectionStyle:function(e){var t=this;Object.values(e).map((function(e){e.controls&&Object.values(e.controls).map((function(e){t.returnControlStyle(e)})),e.nested_sections&&(t.customizerSectionStyle(e.nested_sections),Object.values(e.nested_sections).map((function(e){Object.values(e.controls).map((function(e){e.section&&t.customizerSectionStyle(e)}))})))}))},returnControlStyle:function(e){var t=this;e.style&&Object.entries(e.style).map((function(i){(null==e.condition&&null==e.checkExtension||t.checkControlCondition(e.condition,e.checkExtension))&&(t.feedStyle+=i[0]+"{"+i[1].replaceAll("{{value}}",t.customizerFeedData.settings[e.id])+"}")}))},ajaxPost:function(e,t){e.nonce=this.nonce,this.$http.post(this.ajaxHandler,e).then(t)},activateView:function(e){var t=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=this;i.viewsActive[e]=0==i.viewsActive[e],i.shouldShowFeedAPIForm=!1,i.shouldShowManualConnect=!1,i.shouldShowFeedAPIBackBtn=!1,"editName"==e&&document.getElementById("sbc-csz-hd-input").focus(),"feedtypesPopup"===e&&(i.viewsActive.feedTemplateElement=null,document.querySelector("body").classList.toggle("overflow-hidden")),"feedtemplatesPopup"===e&&(i.viewsActive.feedTemplateElement=null,document.querySelector("body").classList.toggle("overflow-hidden")),"embedPopup"==e&&1==t&&i.saveFeedSettings(),E.$forceUpdate()},switchCustomizerTab:function(e){var t=this,i=document.getElementsByTagName("body")[0];t.customizerScreens.activeTab=e,t.customizerScreens.activeSection=null,t.customizerScreens.activeSectionData=null,t.highLightedSection="all",t.dummyLightBoxScreen=!1,i.classList.remove("no-overflow"),E.$forceUpdate()},switchCustomizerSection:function(e,t){var i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3?arguments[3]:void 0,n=this;n.customizerScreens.parentActiveSection=null,n.customizerScreens.parentActiveSectionData=null,i&&(n.customizerScreens.parentActiveSection=n.customizerScreens.activeSection,n.customizerScreens.parentActiveSectionData=n.customizerScreens.activeSectionData),n.customizerScreens.activeSection=e,n.customizerScreens.activeSectionData=t,o||n.enableHighLightSection(e)},saveFeedSettings:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=this,i={action:"sby_feed_saver_manager_builder_update",update_feed:"true",feed_id:t.customizerFeedData.feed_info.id,feed_name:t.customizerFeedData.feed_info.feed_name,settings:t.customizerFeedData.settings};t.loadingBar=!0,t.ajaxPost(i,(function(i){var o=i.data;o&&!0===o.success?(t.processNotification("feedSaved"),t.customizerFeedDataInitial=t.customizerFeedData,!0===e&&setTimeout((function(){window.location.href=t.builderUrl}),1500)):t.processNotification("feedSavedError")})),E.$forceUpdate()},clearSingleFeedCache:function(){var e=this,t={action:"sby_feed_saver_manager_clear_single_feed_cache",feedID:e.customizerFeedData.feed_info.id,feedName:e.customizerFeedData.feed_info.feed_name,previewSettings:e.customizerFeedData.settings};e.loadingBar=!0,e.ajaxPost(t,(function(t){var i=t.data;!1!==i?(e.updatedTimeStamp=(new Date).getTime(),e.template=String("<div>"+i.feed_html+"</div>"),e.processNotification("cacheCleared")):e.processNotification("unkownError")})),E.$forceUpdate()},changeCheckboxSectionValue:function(e,t){var i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3],n=this;if(!1!==o)n.customizerFeedData.settings[e]=n.customizerFeedData.settings[e]==o.options.enabled?o.options.disabled:o.options.enabled;else{var s=n.customizerFeedData.settings[e];Array.isArray(s)||"type"!=e||(s=[s]),s.includes(t)?s.splice(s.indexOf(t),1):s.push(t),"type"==e&&n.processFeedTypesSources(s),n.customizerFeedData.settings[e]=s}!1!==i&&n.customizerControlAjaxAction(i),event.stopPropagation()},checkboxSectionValueExists:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"includes",t=arguments.length>1?arguments[1]:void 0,i=this,o=i.customizerFeedData.settings[e];return!!o.includes(t)},processNotification:function(e){var t=this,i=t.genericText.notification[e];t.loadingBar=!1,t.notificationElement={type:i.type,text:i.text,shown:"shown"},setTimeout((function(){t.notificationElement.shown="hidden"}),5e3)},updateInputWidth:function(){this.customizerScreens.inputNameWidth=8*(document.getElementById("sbc-csz-hd-input").value.length+6)+"px"},enableHighLightSection:function(e){var t=this,i=document.getElementsByTagName("body")[0];t.dummyLightBoxScreen=!1,i.classList.remove("no-overflow"),["customize_feedlayout","customize_colorscheme","customize_videos","post_style","individual_elements"].includes(e)?(t.highLightedSection="postList",t.scrollToHighLightedSection("sbi_images")):["customize_header"].includes(e)?(t.highLightedSection="header",t.scrollToHighLightedSection("sb_instagram_header")):["customize_followbutton"].includes(e)?(t.highLightedSection="followButton",t.scrollToHighLightedSection("sbi_load")):["customize_loadmorebutton"].includes(e)?(t.highLightedSection="loadMore",t.scrollToHighLightedSection("sbi_load")):["customize_lightbox"].includes(e)?(t.highLightedSection="lightBox",t.dummyLightBoxScreen=!0,document.body.scrollTop=0,document.documentElement.scrollTop=0,i.classList.add("no-overflow")):(t.highLightedSection="all",t.dummyLightBoxScreen=!1,i.classList.remove("no-overflow"))},scrollToHighLightedSection:function(e){var t=void 0!==document.getElementById(e)&&null!==document.getElementById(e)?document.getElementById(e):void 0!==document.getElementsByClassName(e)[0]&&null!==document.getElementsByClassName(e)[0]?document.getElementsByClassName(e)[0]:null;if(null!=t&&null!=t){var i=t.getBoundingClientRect().top-120+window.pageYOffset-10;window.scrollTo({top:i,behavior:"smooth"})}},isControlShown:function(e){var t=this;return null!=e.checkViewDisabled?!t.viewsActive[e.checkViewDisabled]:null!=e.checkView?!t.viewsActive[e.checkView]:null==e.checkExtension||0==e.checkExtension||t.checkExtensionActive(e.checkExtension)?null!=e.conditionDimmed&&t.checkControlCondition(e.conditionDimmed)?t.checkControlCondition(e.conditionDimmed):null!=e.overrideColorCondition?t.checkControlOverrideColor(e.overrideColorCondition):(null==e.conditionHide||null==e.condition)&&null==e.checkExtension||t.checkControlCondition(e.condition,e.checkExtension):t.checkExtensionActive(e.checkExtension)},checkControlOverrideColor:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=this,i=0;return e.map((function(e,o){t.checkNotEmpty(t.customizerFeedData.settings[e])&&"#"!=t.customizerFeedData.settings[e].replace(/ /gi,"")&&(i+=1)})),i>=1},switchNestedSection:function(e,t){var i=this;if(null!==t)i.customizerScreens.activeSection=e,i.customizerScreens.activeSectionData=t;else{var o=e.sections,n=i.customizerSidebarBuilder;o.map((function(e,t){n=null!=n[e]&&null!=n[e]?n[e]:null})),null!=n&&(i.customizerScreens.activeSection=e.id,i.customizerScreens.activeSectionData=n)}E.$forceUpdate()},checkControlCondition:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=this,n=0;Object.keys(e).forEach((function(t,i){-1!==e[t].indexOf(o.customizerFeedData.settings[t])&&(n+=1)}));var s=null==t||0==t||o.checkExtensionActive(t);return s=!(null!=i&&0!=i&&!o.checkExtensionActive(i))&&s,n==Object.keys(e).length&&s},changeSwitcherSettingValue:function(e,t,i){var o=arguments.length>3&&void 0!==arguments[3]&&arguments[3],n=this;n.customizerFeedData.settings[e]=n.customizerFeedData.settings[e]==t?i:t,!1!==o&&n.customizerControlAjaxAction(o),n.regenerateLayout(e)},selectedFeedTypeCustomizer:function(e){var t=!1;return this.customizerFeedData.settings.type===e&&(t=!0),t},selectedFeedTemplateCustomizer:function(e){var t,i=!1;return i=!1,(null===(t=this).viewsActive.feedTemplateElement&&t.customizerFeedData.settings.feedtemplate===e||null!==t.viewsActive.feedTemplateElement&&t.viewsActive.feedTemplateElement==e)&&(i=!0),i},chooseCustomizerFeedType:function(e){var t=this;if(t.selectedFeed=e.type,"social_wall"===t.selectedFeed){if(t.socialWallActivated)return void(window.location.href=t.socialWallAdminPage);t.activateView("feedtypesPopup"),t.viewsActive.extensionsPopupElement="socialwall"}else t.customizerFeedData.settings.type=e.type;E.$forceUpdate()},chooseFeedTemplate:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=this;i.selectedFeedTemplate=e.type,t&&(i.viewsActive.feedTemplateElement=e.type),E.$forceUpdate()},customizerFeedTypePrint:function(){var e=this;null==e.customizerFeedData.settings.type&&(e.customizerFeedData.settings.type="default");var t=e.feedTypes.filter((function(t){return t.type===e.customizerFeedData.settings.type}));return e.customizerScreens.printedTemplate=t.length>0?t[0]:[],t.length>0},customizerFeedTemplatePrint:function(){var e=this;null==e.customizerFeedData.settings.feedtemplate&&(e.customizerFeedData.settings.feedtemplate="default");var t=e.feedTemplates.filter((function(t){return t.type===e.customizerFeedData.settings.feedtemplate}));return e.customizerScreens.printedTemplate=t.length>0?t[0]:[],t.length>0},updateFeedTemplateCustomizer:function(){var e=this;e.customizerFeedData.settings.feedtemplate=null!=e.viewsActive.feedTemplateElement?e.viewsActive.feedTemplateElement:e.customizerFeedData.settings.feedtemplate,e.viewsActive.feedTemplateElement=null,e.viewsActive.feedtemplatesPopup=!1,e.customizerControlAjaxAction("feedTemplateFlyPreview"),E.$forceUpdate()},updateFeedTypeCustomizer:function(){var e=this;console.log(e.customizerFeedData.settings.type),e.viewsActive.feedtypesPopup=!1,e.customizerControlAjaxAction("feedTypeFlyPreview"),E.$forceUpdate()},valueIsEnabled:function(e){return 1==e||1==e||"true"==e||"on"==e},checkNotEmpty:function(e){return null!=e&&""!=e.replace(/ /gi,"")},hideColorPickerPospup:function(){this.customizerScreens.activeColorPicker=null},switchScreen:function(e,t){this.viewsActive[e]=t,E.$forceUpdate()},jsonParse:function(e){try{return JSON.parse(e)}catch(e){return!1}},creationProcessCheckAction:function(){var e=this,t=!1;switch(e.viewsActive.selectedFeedSection){case"feedsType":t=null!=e.selectedFeed,window.ctfSelectedFeed=e.selectedFeed;break;case"selectSource":case"selectTemplate":t=e.creationProcessCheckAppCredentials()}return t},backToPostElements:function(){var e=this,t=e.customizerSidebarBuilder.customize.sections.customize_videos.nested_sections.individual_elements;e.customizerScreens.activeSection="customize_videos",e.customizerScreens.activeSectionData=e.customizerSidebarBuilder.customize.sections.customize_videos,e.switchCustomizerSection("individual_elements",t,!0,!0),E.$forceUpdate()},creationProcessNext:function(){var e=this;switch(e.viewsActive.selectedFeedSection){case"feedsType":if("channel"===e.selectedFeed)return(e.connectedAccountStatus||e.apiKeyStatus)&&e.switchScreen("selectedFeedSection","selectSource"),void(e.connectedAccountStatus||e.apiKeyStatus||e.activateView("accountAPIPopup"));if("channel"!==e.selectedFeed&&!e.apiKeyStatus)return e.activateView("accountAPIPopup"),void(e.shouldShowFeedAPIForm=!0);null!==e.selectedFeed&&e.switchScreen("selectedFeedSection","selectSource");break;case"selectSource":e.switchScreen("selectedFeedSection","selectTemplate");break;case"selectTemplate":e.isCreateProcessGood=!0}e.isCreateProcessGood&&e.submitNewFeed()},copyToClipBoard:function(e){var t=this,i=document.createElement("textarea");i.className="ctf-fb-cp-clpboard",i.value=e,document.body.appendChild(i),i.select(),document.execCommand("copy"),document.body.removeChild(i),t.notificationElement={type:"success",text:this.genericText.copiedClipboard,shown:"shown"},setTimeout((function(){t.notificationElement.shown="hidden"}),3e3),E.$forceUpdate()},feedActionDuplicate:function(e){var t=this,i={action:"sby_feed_saver_manager_duplicate_feed",feed_id:e.id};t.ajaxPost(i,(function(e){var i=e.data;t.feedsList=Object.values(Object.assign({},i))})),E.$forceUpdate()},selectFeedCheckBox:function(e){this.feedsSelected.includes(e)?this.feedsSelected.splice(this.feedsSelected.indexOf(e),1):this.feedsSelected.push(e),E.$forceUpdate()},selectAllFeedCheckBox:function(){var e=this;e.checkAllFeedsActive()?e.feedsSelected=[]:(e.feedsSelected=[],e.feedsList.forEach((function(t){e.feedsSelected.push(t.id)})))},checkAllFeedsActive:function(){var e=this,t=!0;return e.feedsList.forEach((function(i){e.feedsSelected.includes(i.id)||(t=!1)})),t},bulkActionClick:function(){var e=this;"delete"===e.selectedBulkAction&&e.feedsSelected.length>0&&e.openDialogBox("deleteMultipleFeeds"),E.$forceUpdate()},switchCustomizerPreviewDevice:function(e){var t=this;t.customizerScreens.previewScreen=e,t.loadingBar=!0,setTimeout((function(){t.setShortcodeGlobalSettings(!0),t.loadingBar=!1}),200),E.$forceUpdate()},resetColor:function(e){this.customizerFeedData.settings[e]=""},toggleElementTooltip:function(e,t){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"center",o=this,n=window.event.currentTarget,s=null!=n&&null!=n?document.querySelector(".sb-control-elem-tltp-content"):null;if(null!=s&&"show"==t){o.tooltip.text=e;var c=n.getBoundingClientRect(),r=c.left+10,a=c.top-10;s.style.left=r+"px",s.style.top=a+"px",s.style.textAlign=i,o.tooltip.hover=!0}"hide"==t&&setTimeout((function(){"inside"!=o.tooltip.hoverType&&(o.tooltip.hover=!1)}),200)},hoverTooltip:function(e,t){this.tooltip.hover=e,this.tooltip.hoverType=t},creationProcessBack:function(){var e=this;switch(e.viewsActive.selectedFeedSection){case"feedsType":e.switchScreen("pageScreen","welcome");break;case"selectSource":e.switchScreen("selectedFeedSection","feedsType");break;case"selectTemplate":case"feedsTypeGetProcess":e.switchScreen("selectedFeedSection","selectSource")}E.$forceUpdate()},chooseFeedType:function(e){var t=this;if(t.selectedFeed=e.type,"social_wall"===t.selectedFeed){if(t.socialWallActivated)return void(window.location.href=t.socialWallAdminPage);t.selectedFeed=null,t.viewsActive.extensionsPopupElement="socialwall"}E.$forceUpdate()},activateAPIForm:function(){this.viewsActive.accountAPIPopup=!0,this.shouldShowFeedAPIForm=!0},onboardingClose:function(){var e=this,t=e.viewsActive.onboardingPopup?"newuser":"customizer";document.getElementById("sbc-builder-app").classList.remove("sb-onboarding-active"),e.viewsActive.onboardingPopup=!1,e.viewsActive.onboardingCustomizerPopup=!1,e.viewsActive.onboardingStep=0;var i={action:"sby_dismiss_onboarding",was_active:t};e.ajaxPost(i,(function(e){e.data})),E.$forceUpdate()},onboardingNext:function(){this.viewsActive.onboardingStep++,this.onboardingHideShow(),E.$forceUpdate()},onboardingPrev:function(){this.viewsActive.onboardingStep--,this.onboardingHideShow(),E.$forceUpdate()},onboardingHideShow:function(){for(var e=document.querySelectorAll(".sb-onboarding-tooltip"),t=0;t<e.length;t++)e[t].style.display="none";document.querySelectorAll(".sb-onboarding-tooltip-"+this.viewsActive.onboardingStep)[0].style.display="block",this.viewsActive.onboardingCustomizerPopup&&(2===this.viewsActive.onboardingStep?this.switchCustomizerTab("customize"):3===this.viewsActive.onboardingStep&&this.switchCustomizerTab("settings"))},positionOnboarding:function(){var e=this,t=document.querySelectorAll(".sb-onboarding-overlay")[0],i=document.getElementById("sbc-builder-app");null!=t&&(e.viewsActive.onboardingCustomizerPopup&&e.iscustomizerScreen&&e.customizerFeedData?null!==document.getElementById("sb-onboarding-tooltip-customizer-1")&&(i.classList.add("sb-onboarding-active"),document.querySelectorAll(".sbc-yt-header")[0].appendChild(document.getElementById("sb-onboarding-tooltip-customizer-1")),document.querySelectorAll(".sb-customizer-sidebar-sec1")[0].appendChild(document.getElementById("sb-onboarding-tooltip-customizer-2")),document.querySelectorAll(".sb-customizer-sidebar-sec1")[0].appendChild(document.getElementById("sb-onboarding-tooltip-customizer-3")),e.onboardingHideShow()):e.viewsActive.onboardingPopup&&!e.iscustomizerScreen&&("single"===sbc_builder.allFeedsScreen.onboarding.type?null!==document.getElementById("sb-onboarding-tooltip-single-1")&&(i.classList.add("sb-onboarding-active"),document.querySelectorAll(".ctf-fb-wlcm-header .sb-positioning-wrap")[0].appendChild(document.getElementById("sb-onboarding-tooltip-single-1")),document.querySelectorAll(".ctf-table-wrap")[0].appendChild(document.getElementById("sb-onboarding-tooltip-single-2")),e.onboardingHideShow()):null!==document.getElementById("sb-onboarding-tooltip-multiple-1")&&(i.classList.add("sb-onboarding-active"),document.querySelectorAll(".ctf-fb-wlcm-header .sb-positioning-wrap")[0].appendChild(document.getElementById("sb-onboarding-tooltip-multiple-1")),document.querySelectorAll(".ctf-fb-lgc-ctn")[0].appendChild(document.getElementById("sb-onboarding-tooltip-multiple-2")),document.querySelectorAll(".ctf-legacy-table-wrap")[0].appendChild(document.getElementById("sb-onboarding-tooltip-multiple-3")),e.activateView("legacyFeedsShown"),e.onboardingHideShow())))},customizerControlAjaxAction:function(e){var t=this;switch(e){case"feedFlyPreview":t.loadingBar=!0,t.templateRender=!1;var i={action:"sby_feed_saver_manager_fly_preview",feedID:t.customizerFeedData.feed_info.id,previewSettings:t.customizerFeedData.settings,feedName:t.customizerFeedData.feed_info.feed_name};t.ajaxPost(i,(function(e){var i=e.data;!1!==i?(t.updatedTimeStamp=(new Date).getTime(),t.template=String("<div>"+i.feed_html+"</div>"),document.querySelector("body").classList.toggle("overflow-hidden"),t.setShortcodeGlobalSettings(!0),t.processNotification("previewUpdated")):t.processNotification("unkownError")}));break;case"feedTypeFlyPreview":t.loadingBar=!0,t.templateRender=!1,i={action:"sby_feed_saver_manager_fly_preview",feedID:t.customizerFeedData.feed_info.id,previewSettings:t.customizerFeedData.settings,feedName:t.customizerFeedData.feed_info.feed_name,isFeedTypesPopup:!0},t.ajaxPost(i,(function(e){var i=e.data;!1!==i?(t.customizerFeedData.settings=i.customizerDataSettings,t.updatedTimeStamp=(new Date).getTime(),t.template=String("<div>"+i.feed_html+"</div>"),console.log("did it run"),document.querySelector("body").classList.toggle("overflow-hidden"),t.processNotification("previewUpdated"),t.loadingBar=!1,setTimeout((function(){t.setShortcodeGlobalSettings(!0)}),500)):t.processNotification("unkownError")}));break;case"feedTemplateFlyPreview":t.loadingBar=!0,t.templateRender=!1,i={action:"sby_feed_saver_manager_fly_preview",feedID:t.customizerFeedData.feed_info.id,previewSettings:t.customizerFeedData.settings,feedName:t.customizerFeedData.feed_info.feed_name,isFeedTemplatesPopup:!0},t.ajaxPost(i,(function(e){var i=e.data;!1!==i?(t.customizerFeedData.settings=i.customizerDataSettings,t.updatedTimeStamp=(new Date).getTime(),t.template=String("<div>"+i.feed_html+"</div>"),t.processNotification("previewUpdated"),document.querySelector("body").classList.toggle("overflow-hidden"),t.loadingBar=!1,setTimeout((function(){t.setShortcodeGlobalSettings(!0)}),500)):t.processNotification("unkownError")}));break;case"feedRefresh":t.loadingBar=!0,t.templateRender=!1,i={action:"sby_feed_refresh",feedID:t.customizerFeedData.feed_info.id,previewSettings:t.customizerFeedData.settings,feedName:t.customizerFeedData.feed_info.feed_name},t.ajaxPost(i,(function(e){var i=e.data;!1!==i?(t.customizerFeedData.settings=i.customizerDataSettings,t.updatedTimeStamp=(new Date).getTime(),t.template=String("<div>"+i.feed_html+"</div>"),setTimeout((function(){t.setShortcodeGlobalSettings(!0),t.loadingBar=!1}),200),t.processNotification("previewUpdated"),t.loadingBar=!1):t.processNotification("unkownError")}));break;case"feedPreviewRender":setTimeout((function(){}),150)}},resetColorOverride:function(e){this.customizerFeedData.settings[e]=""},viewFeedInstances:function(e){this.viewsActive.instanceFeedActive=e,this.movePopUp(),E.$forceUpdate()},processDomList:function(e,t){document.querySelectorAll(e).forEach((function(e){t.map((function(t){e.setAttribute(t[0],t[1])}))}))},openTooltipBig:function(){var e=window.event.currentTarget;this.processDomList(".sbc-fb-onbrd-tltp-elem",[["data-active","false"]]),e.querySelector(".sbc-fb-onbrd-tltp-elem").setAttribute("data-active","true"),E.$forceUpdate()},closeTooltipBig:function(){this.processDomList(".sbc-fb-onbrd-tltp-elem",[["data-active","false"]]),window.event.stopPropagation(),E.$forceUpdate()},movePopUp:function(){var e=document.querySelectorAll("sb-fs-boss");e.length>0&&document.getElementById("wpbody-content").prepend(e[0])},checkObjectArrayElement:function(e,t,i){return e.filter((function(e){return e[i]==t[i]})).length>0},getModerationShoppableMode:function(){return this.viewsActive.moderationMode||"settings_shoppable_feed"==this.customizerScreens.activeSection?this.moderationShoppableMode=!0:this.moderationShoppableMode=!1,this.moderationShoppableMode},getModerationShoppableModeOffset:function(){return this.moderationShoppableModeOffset>0}}),i=k(k({},e.extraData),{},{$parent:void 0,nonce:sbc_builder.nonce,template:sbc_builder.feedInitOutput,supportPageUrl:sbc_builder.supportPageUrl,pluginURL:sbc_builder.pluginURL,builderUrl:sbc_builder.builderUrl,pluginType:sbc_builder.pluginType,genericText:sbc_builder.genericText,sourcesScreenText:sbc_builder.sourcesScreenText,apiKeyPopupScreen:sbc_builder.apiKeyPopupScreen,selectTemplate:sbc_builder.selectTemplate,ajaxHandler:sbc_builder.ajaxHandler,adminPostURL:sbc_builder.adminPostURL,welcomeScreen:sbc_builder.welcomeScreen,svgIcons:sbc_builder.svgIcons,customizerFeedDataInitial:null,customizerFeedData:sbc_builder.customizerFeedData,iscustomizerScreen:null!=sbc_builder.customizerFeedData&&0!=sbc_builder.customizerFeedData,selectFeedTypeScreen:sbc_builder.selectFeedTypeScreen,customizerSidebarBuilder:sbc_builder.customizerSidebarBuilder,feedTypes:sbc_builder.feedTypes,apiKeyStatus:sbc_builder.apiKeyStatus,connectedAccountStatus:sbc_builder.connectedAccountStatus,sbyAPIKey:null,apiKeyBtnLoader:!1,apiKeyError:!1,accessTokenError:!1,feedStyle:"",isCreateProcessGood:!1,socialWallActivated:sbc_builder.pluginsInfo.social_wall.activated,socialWallAdminPage:sbc_builder.pluginsInfo.social_wall.settingsPage,customizerScreens:{activeTab:"customize",printedType:{},printedTemplate:{},activeSection:null,previewScreen:"desktop",sourceExpanded:null,sourcesChoosed:[],inputNameWidth:"0px",activeSectionData:null,parentActiveSection:null,parentActiveSectionData:null,activeColorPicker:null},previewScreens:["desktop","tablet","mobile"],nestedStylingSection:["playicon_styling_title","video_styling_title","user_styling_title","views_styling_title","countdown_styling_title","stats_styling_title","date_styling_title","description_styling_title"],embedPopupScreen:sbc_builder.embedPopupScreen,customizeScreensText:sbc_builder.customizeScreens,highLightedSection:"all",dummyLightBoxScreen:!1,dialogBoxPopupScreen:sbc_builder.dialogBoxPopupScreen,selectFeedTemplateScreen:sbc_builder.selectFeedTemplateScreen,shouldShowFeedAPIBackBtn:!1,dialogBox:{active:!1,type:null,heading:null,description:null,customButtons:void 0},sourceToDelete:{},viewsActive:{footerDiabledScreens:["welcome","selectFeed"],footerWidget:!1,pageScreen:"welcome",selectedFeedSection:"feedsType",manualSourcePopupInit:sbc_builder.manualSourcePopupInit,sourcePopup:!1,feedtypesPopup:!1,feedtemplatesPopup:!1,feedTemplateElement:null,feedtypesCustomizerPopup:!1,sourcesListPopup:!1,sourcePopupScreen:"redirect_1",extensionsPopupElement:!1,sourcePopupType:"creation",accountAPIPopup:!1,instanceFeedActive:null,clipboardCopiedNotif:!1,legacyFeedsShown:!1,editName:!1,embedPopup:!1,embedPopupScreen:"step_1",embedPopupSelectedPage:null,onboardingPopup:sbc_builder.allFeedsScreen.onboarding.active,onboardingStep:1,onboardingCustomizerPopup:sbc_builder.customizeScreens.onboarding.active,installPluginPopup:!1,installPluginModal:"facebook"},wordpressPageLists:sbc_builder.wordpressPageLists,widgetsPageURL:sbc_builder.widgetsPageURL,feedTemplates:sbc_builder.feedTemplates,selectedBulkAction:!1,selectedFeed:"channel",selectedFeedPopup:[],selectedFeedTemplate:"default",feedsSelected:[],extensionsPopup:sbc_builder.extensionsPopup,tooltip:{text:"",hover:!1,hoverType:"outside"},fullScreenLoader:!1,appLoaded:!1,previewLoaded:!1,loadingBar:!0,notificationElement:{type:"success",text:"",shown:null}});Vue.component(I,{template:"#"+I,props:["customizerFeedData","parent","dummyLightBoxScreen"]}),E=new Vue({el:"#sbc-builder-app",http:{emulateJSON:!0,emulateHTTP:!0},components:{"sketch-picker":B},mixins:[VueClickaway.mixin],data:i,updated:function(){this.iscustomizerScreen&&this.setShortcodeGlobalSettings(!0)},computed:{feedStyleOutput:function(){return this.customizerStyleMaker()}},created:function(){var e=this,t=this;setTimeout((function(){var i=window.location.search,o=new URLSearchParams(i),n=o.get("page"),s=o.get("sby_access_token"),c=o.get("sby_refresh_token");t.loadingBar=!1,e.$parent=t,t.customizerFeedData&&(t.customizerFeedDataInitial=JSON.parse(JSON.stringify(t.customizerFeedData))),"sby-feed-builder"==n&&s&&c&&(t.switchScreen("pageScreen","selectFeed"),t.switchScreen("selectedFeedSection","selectSource")),t.positionOnboarding(),document.querySelector("#sbc-builder-app").classList.add("initialized")}),0)},methods:t})}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,